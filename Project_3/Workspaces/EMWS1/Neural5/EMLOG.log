*------------------------------------------------------------*
User:                sakerb01
Date:                November 04, 2015
Time:                07:50:44
Site:                70080760
Platform:            X64_7PRO
Maintenance Release: 9.04.01M1P120413
EM Version:          13.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 04, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "07:50:19" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                November 04, 2015
Time:                07:50:19
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1CAWTVW "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1CAWTVW new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 04, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "07:50:20" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                sakerb01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70080760";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M1P120413";
MPRINT(EM_DIAGRAM):   put "EM Version:          13.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 04, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "07:50:20" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                sakerb01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
22327      proc freq data=EMWS1.Neural5_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Neural5_VariableSet noprint;
22328      table ROLE*LEVEL/out=WORK.Neural5META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Neural5META;
22329      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set EMWS1.NEURAL5_VARIABLESET.
NOTE: The data set WORK.NEURAL5META has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
22330      proc print data=WORK.Neural5META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Neural5META label noobs;
22331      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
22332      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
22333      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22334      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
22335      run;
 
NOTE: There were 4 observations read from the data set WORK.NEURAL5META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
22336      title10;
MPRINT(EM_DIAGRAM):   title10;
22337      %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.BINNING_TRAIN EMWS1.BINNING_TRAIN
EMWS1.BINNING_TRAIN EMWS1.BINNING_TRAIN EMWS1 BINNING_TRAIN
EMWS1.BINNING_TRAIN EMWS1.BINNING_TRAIN
EMWS1.BINNING_TRAIN EMWS1.BINNING_TRAIN EMWS1 BINNING_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.BINNING_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class BAD(DESC) ;
MPRINT(EM_DIAGRAM):   run;
_dataobs_=100 BAD=1 LOAN=4100 MORTDUE=. VALUE=19132 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=100.77465221 NINQ=0 CLNO=19 DEBTINC=33.840919904 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=100.77465221 IMP_CLNO=19 IMP_DEBTINC=33.840919904
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=19132 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=49
_dataobs_=119 BAD=0 LOAN=4500 MORTDUE=. VALUE=49044 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=11.652738796 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=11.652738796 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=49044 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=60
_dataobs_=206 BAD=0 LOAN=5100 MORTDUE=66834 VALUE=87361 REASON=HomeImp JOB=Other YOJ=0 DEROG=2 DELINQ=0 CLAGE=290.03410799 NINQ=0 CLNO=6 DEBTINC=38.766985071 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=290.03410799 IMP_CLNO=6 IMP_DEBTINC=38.766985071
IMP_DELINQ=0 IMP_DEROG=2 IMP_MORTDUE=66834 IMP_NINQ=0 IMP_VALUE=87361 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=97
_dataobs_=207 BAD=0 LOAN=5100 MORTDUE=73882 VALUE=96031 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=125.78740011 NINQ=1 CLNO=10 DEBTINC=34.446079222 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=125.78740011 IMP_CLNO=10 IMP_DEBTINC=34.446079222
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73882 IMP_NINQ=1 IMP_VALUE=96031 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=98
_dataobs_=213 BAD=0 LOAN=5200 MORTDUE=19000 VALUE=26000 REASON=DebtCon JOB=Other YOJ=0 DEROG=1 DELINQ=0 CLAGE=17.2 NINQ=10 CLNO=7 DEBTINC=. IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=17.2 IMP_CLNO=7 IMP_DEBTINC=33.786945547 IMP_DELINQ=0 IMP_DEROG=1
IMP_MORTDUE=19000 IMP_NINQ=10 IMP_VALUE=26000 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=102
_dataobs_=221 BAD=0 LOAN=5300 MORTDUE=. VALUE=49396 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=12.043670576 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=12.043670576 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=49396 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=109
_dataobs_=273 BAD=0 LOAN=5700 MORTDUE=. VALUE=68591 REASON=HomeImp JOB=Office YOJ=0 DEROG=0 DELINQ=0 CLAGE=69.645660473 NINQ=0 CLNO=4 DEBTINC=41.185039558 IMP_JOB=Office IMP_REASON=HomeImp IMP_CLAGE=69.645660473 IMP_CLNO=4 IMP_DEBTINC=41.185039558
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=68591 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=128
_dataobs_=279 BAD=1 LOAN=5700 MORTDUE=77213 VALUE=92661 REASON=DebtCon JOB=Sales YOJ=0 DEROG=0 DELINQ=0 CLAGE=97.133170952 NINQ=1 CLNO=16 DEBTINC=41.777888631 IMP_JOB=Sales IMP_REASON=DebtCon IMP_CLAGE=97.133170952 IMP_CLNO=16 IMP_DEBTINC=41.777888631
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=77213 IMP_NINQ=1 IMP_VALUE=92661 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=131
_dataobs_=284 BAD=0 LOAN=5700 MORTDUE=28116 VALUE=33450 REASON=DebtCon JOB=Other YOJ=0 DEROG=1 DELINQ=0 CLAGE=15.396587392 NINQ=9 CLNO=7 DEBTINC=30.017013296 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=15.396587392 IMP_CLNO=7 IMP_DEBTINC=30.017013296
IMP_DELINQ=0 IMP_DEROG=1 IMP_MORTDUE=28116 IMP_NINQ=9 IMP_VALUE=33450 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=133
_dataobs_=320 BAD=0 LOAN=6000 MORTDUE=69876 VALUE=94394.07 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=179.56666667 NINQ=0 CLNO=32 DEBTINC=. IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=179.56666667 IMP_CLNO=32 IMP_DEBTINC=33.786945547 IMP_DELINQ=1
IMP_DEROG=0 IMP_MORTDUE=69876 IMP_NINQ=0 IMP_VALUE=94394.07 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=153
_dataobs_=329 BAD=0 LOAN=6000 MORTDUE=79046 VALUE=103048 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=181.69653802 NINQ=0 CLNO=32 DEBTINC=37.289989924 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.69653802 IMP_CLNO=32 IMP_DEBTINC=37.289989924
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=79046 IMP_NINQ=0 IMP_VALUE=103048 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=160
_dataobs_=342 BAD=0 LOAN=6100 MORTDUE=. VALUE=46830 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=1 CLAGE=. NINQ=0 CLNO=0 DEBTINC=13.306013076 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=13.306013076 IMP_DELINQ=1 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=46830 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=166
_dataobs_=356 BAD=0 LOAN=6200 MORTDUE=73881 VALUE=98550 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=182.8787798 NINQ=0 CLNO=31 DEBTINC=37.19944569 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=182.8787798 IMP_CLNO=31 IMP_DEBTINC=37.19944569
IMP_DELINQ=1 IMP_DEROG=0 IMP_MORTDUE=73881 IMP_NINQ=0 IMP_VALUE=98550 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=172
_dataobs_=392 BAD=0 LOAN=6400 MORTDUE=44968 VALUE=62747 REASON=HomeImp JOB=Other YOJ=0 DEROG=1 DELINQ=. CLAGE=101.39144532 NINQ=. CLNO=12 DEBTINC=36.602947343 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=101.39144532 IMP_CLNO=12 IMP_DEBTINC=36.602947343
IMP_DELINQ=0.4622255303 IMP_DEROG=1 IMP_MORTDUE=44968 IMP_NINQ=1.1569852941 IMP_VALUE=62747 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=188
_dataobs_=419 BAD=0 LOAN=6600 MORTDUE=. VALUE=48800 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=12.219436152 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=12.219436152 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=48800 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=197
_dataobs_=423 BAD=0 LOAN=6600 MORTDUE=. VALUE=46516 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=14.845990728 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=14.845990728 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=46516 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=198
_dataobs_=454 BAD=0 LOAN=6800 MORTDUE=71666 VALUE=99913 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=196.46499893 NINQ=0 CLNO=31 DEBTINC=35.761604731 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=196.46499893 IMP_CLNO=31 IMP_DEBTINC=35.761604731
IMP_DELINQ=1 IMP_DEROG=0 IMP_MORTDUE=71666 IMP_NINQ=0 IMP_VALUE=99913 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=214
_dataobs_=471 BAD=0 LOAN=7000 MORTDUE=73873 VALUE=111781 REASON=DebtCon JOB=Office YOJ=0 DEROG=0 DELINQ=0 CLAGE=231.79991346 NINQ=0 CLNO=38 DEBTINC=19.273579455 IMP_JOB=Office IMP_REASON=DebtCon IMP_CLAGE=231.79991346 IMP_CLNO=38 IMP_DEBTINC=19.273579455
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73873 IMP_NINQ=0 IMP_VALUE=111781 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=220
_dataobs_=474 BAD=0 LOAN=7000 MORTDUE=78284 VALUE=98214 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=171.83838617 NINQ=0 CLNO=31 DEBTINC=36.247963031 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=171.83838617 IMP_CLNO=31 IMP_DEBTINC=36.247963031
IMP_DELINQ=1 IMP_DEROG=0 IMP_MORTDUE=78284 IMP_NINQ=0 IMP_VALUE=98214 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=223
WARNING: Limit set by ERRORS= option reached.  Further errors of this type will not be printed.
_dataobs_=516 BAD=0 LOAN=7100 MORTDUE=57863 VALUE=70969 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=65.872044812 NINQ=7 CLNO=21 DEBTINC=26.829490191 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=65.872044812 IMP_CLNO=21 IMP_DEBTINC=26.829490191
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=57863 IMP_NINQ=7 IMP_VALUE=70969 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=239
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="BAD";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=BAD));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="BAD";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
>>>>>>>>>>>>>> TARGET(   NAME='BAD'
                         ROLE='TARGET'
                         LEVEL='BINARY'
                         ORDER=''
                         CREATOR=''
                         FORMATTYPE=''
                         FAMILY=''
                         LOWERLIMIT=.
                         UPPERLIMIT=.
                         REPORT='N'
                         DISTRIBUTION=''
                         COMMENT=''
                         PRICE=.
                         TYPE='N'
                         LABEL=''
                         FORMAT=''
                         INFORMAT=''
                         INDEX='N'
                         INDEXTYPE='NONE'
                         LENGTH=8
                         USE='Y'
                      )[19705]
MPRINT(EM_DIAGRAM):
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.BINNING_TRAIN dmdbcat=WORK.EM_DMDB maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   BAD(DESC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   target BAD ;
MPRINT(EM_DIAGRAM):   run;
_dataobs_=100 BAD=1 LOAN=4100 MORTDUE=. VALUE=19132 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=100.77465221 NINQ=0 CLNO=19 DEBTINC=33.840919904 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=100.77465221 IMP_CLNO=19 IMP_DEBTINC=33.840919904
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=19132 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=49
_dataobs_=119 BAD=0 LOAN=4500 MORTDUE=. VALUE=49044 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=11.652738796 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=11.652738796 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=49044 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=60
_dataobs_=206 BAD=0 LOAN=5100 MORTDUE=66834 VALUE=87361 REASON=HomeImp JOB=Other YOJ=0 DEROG=2 DELINQ=0 CLAGE=290.03410799 NINQ=0 CLNO=6 DEBTINC=38.766985071 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=290.03410799 IMP_CLNO=6 IMP_DEBTINC=38.766985071
IMP_DELINQ=0 IMP_DEROG=2 IMP_MORTDUE=66834 IMP_NINQ=0 IMP_VALUE=87361 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=97
_dataobs_=207 BAD=0 LOAN=5100 MORTDUE=73882 VALUE=96031 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=125.78740011 NINQ=1 CLNO=10 DEBTINC=34.446079222 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=125.78740011 IMP_CLNO=10 IMP_DEBTINC=34.446079222
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73882 IMP_NINQ=1 IMP_VALUE=96031 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=98
_dataobs_=213 BAD=0 LOAN=5200 MORTDUE=19000 VALUE=26000 REASON=DebtCon JOB=Other YOJ=0 DEROG=1 DELINQ=0 CLAGE=17.2 NINQ=10 CLNO=7 DEBTINC=. IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=17.2 IMP_CLNO=7 IMP_DEBTINC=33.786945547 IMP_DELINQ=0 IMP_DEROG=1
IMP_MORTDUE=19000 IMP_NINQ=10 IMP_VALUE=26000 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=102
_dataobs_=221 BAD=0 LOAN=5300 MORTDUE=. VALUE=49396 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=12.043670576 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=12.043670576 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=49396 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=109
_dataobs_=273 BAD=0 LOAN=5700 MORTDUE=. VALUE=68591 REASON=HomeImp JOB=Office YOJ=0 DEROG=0 DELINQ=0 CLAGE=69.645660473 NINQ=0 CLNO=4 DEBTINC=41.185039558 IMP_JOB=Office IMP_REASON=HomeImp IMP_CLAGE=69.645660473 IMP_CLNO=4 IMP_DEBTINC=41.185039558
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=68591 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=128
_dataobs_=279 BAD=1 LOAN=5700 MORTDUE=77213 VALUE=92661 REASON=DebtCon JOB=Sales YOJ=0 DEROG=0 DELINQ=0 CLAGE=97.133170952 NINQ=1 CLNO=16 DEBTINC=41.777888631 IMP_JOB=Sales IMP_REASON=DebtCon IMP_CLAGE=97.133170952 IMP_CLNO=16 IMP_DEBTINC=41.777888631
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=77213 IMP_NINQ=1 IMP_VALUE=92661 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=131
_dataobs_=284 BAD=0 LOAN=5700 MORTDUE=28116 VALUE=33450 REASON=DebtCon JOB=Other YOJ=0 DEROG=1 DELINQ=0 CLAGE=15.396587392 NINQ=9 CLNO=7 DEBTINC=30.017013296 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=15.396587392 IMP_CLNO=7 IMP_DEBTINC=30.017013296
IMP_DELINQ=0 IMP_DEROG=1 IMP_MORTDUE=28116 IMP_NINQ=9 IMP_VALUE=33450 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=133
_dataobs_=320 BAD=0 LOAN=6000 MORTDUE=69876 VALUE=94394.07 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=179.56666667 NINQ=0 CLNO=32 DEBTINC=. IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=179.56666667 IMP_CLNO=32 IMP_DEBTINC=33.786945547 IMP_DELINQ=1
IMP_DEROG=0 IMP_MORTDUE=69876 IMP_NINQ=0 IMP_VALUE=94394.07 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=153
_dataobs_=329 BAD=0 LOAN=6000 MORTDUE=79046 VALUE=103048 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=181.69653802 NINQ=0 CLNO=32 DEBTINC=37.289989924 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.69653802 IMP_CLNO=32 IMP_DEBTINC=37.289989924
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=79046 IMP_NINQ=0 IMP_VALUE=103048 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=160
_dataobs_=342 BAD=0 LOAN=6100 MORTDUE=. VALUE=46830 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=1 CLAGE=. NINQ=0 CLNO=0 DEBTINC=13.306013076 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=13.306013076 IMP_DELINQ=1 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=46830 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=166
_dataobs_=356 BAD=0 LOAN=6200 MORTDUE=73881 VALUE=98550 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=182.8787798 NINQ=0 CLNO=31 DEBTINC=37.19944569 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=182.8787798 IMP_CLNO=31 IMP_DEBTINC=37.19944569
IMP_DELINQ=1 IMP_DEROG=0 IMP_MORTDUE=73881 IMP_NINQ=0 IMP_VALUE=98550 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=172
_dataobs_=392 BAD=0 LOAN=6400 MORTDUE=44968 VALUE=62747 REASON=HomeImp JOB=Other YOJ=0 DEROG=1 DELINQ=. CLAGE=101.39144532 NINQ=. CLNO=12 DEBTINC=36.602947343 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=101.39144532 IMP_CLNO=12 IMP_DEBTINC=36.602947343
IMP_DELINQ=0.4622255303 IMP_DEROG=1 IMP_MORTDUE=44968 IMP_NINQ=1.1569852941 IMP_VALUE=62747 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=188
_dataobs_=419 BAD=0 LOAN=6600 MORTDUE=. VALUE=48800 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=12.219436152 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=12.219436152 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=48800 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=197
_dataobs_=423 BAD=0 LOAN=6600 MORTDUE=. VALUE=46516 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=14.845990728 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=14.845990728 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=46516 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=198
_dataobs_=454 BAD=0 LOAN=6800 MORTDUE=71666 VALUE=99913 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=196.46499893 NINQ=0 CLNO=31 DEBTINC=35.761604731 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=196.46499893 IMP_CLNO=31 IMP_DEBTINC=35.761604731
IMP_DELINQ=1 IMP_DEROG=0 IMP_MORTDUE=71666 IMP_NINQ=0 IMP_VALUE=99913 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=214
_dataobs_=471 BAD=0 LOAN=7000 MORTDUE=73873 VALUE=111781 REASON=DebtCon JOB=Office YOJ=0 DEROG=0 DELINQ=0 CLAGE=231.79991346 NINQ=0 CLNO=38 DEBTINC=19.273579455 IMP_JOB=Office IMP_REASON=DebtCon IMP_CLAGE=231.79991346 IMP_CLNO=38 IMP_DEBTINC=19.273579455
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73873 IMP_NINQ=0 IMP_VALUE=111781 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=220
_dataobs_=474 BAD=0 LOAN=7000 MORTDUE=78284 VALUE=98214 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=171.83838617 NINQ=0 CLNO=31 DEBTINC=36.247963031 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=171.83838617 IMP_CLNO=31 IMP_DEBTINC=36.247963031
IMP_DELINQ=1 IMP_DEROG=0 IMP_MORTDUE=78284 IMP_NINQ=0 IMP_VALUE=98214 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=223
WARNING: Limit set by ERRORS= option reached.  Further errors of this type will not be printed.
_dataobs_=516 BAD=0 LOAN=7100 MORTDUE=57863 VALUE=70969 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=65.872044812 NINQ=7 CLNO=21 DEBTINC=26.829490191 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=65.872044812 IMP_CLNO=21 IMP_DEBTINC=26.829490191
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=57863 IMP_NINQ=7 IMP_VALUE=70969 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=239
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
WORK.EM_DMDB WORK.EM_DMDB
WORK.EM_DMDB WORK.EM_DMDB WORK EM_DMDB
MPRINT(EM_DIAGRAM):    proc datasets lib=EMWS1 nolist;
MPRINT(EM_DIAGRAM):   modify Neural5_BAD_DD(type=PROFIT label= BAD);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural5: Determine decision variables for BAD;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.Neural5_SCORE;
MPRINT(EM_DIAGRAM):   set EMWS1.BINNING_TRAIN;
MPRINT(EM_DIAGRAM):   keep BAD;
MPRINT(EM_DIAGRAM):   keep 'P_BAD1'n;
MPRINT(EM_DIAGRAM):   'P_BAD1'n = 0.5;
MPRINT(EM_DIAGRAM):   keep 'P_BAD0'n;
MPRINT(EM_DIAGRAM):   'P_BAD0'n = 0.5;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   stop;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
_dataobs_=100 BAD=1 LOAN=4100 MORTDUE=. VALUE=19132 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=100.77465221 NINQ=0 CLNO=19 DEBTINC=33.840919904 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=100.77465221 IMP_CLNO=19 IMP_DEBTINC=33.840919904
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=19132 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=49
_dataobs_=119 BAD=0 LOAN=4500 MORTDUE=. VALUE=49044 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=11.652738796 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=11.652738796 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=49044 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=60
_dataobs_=206 BAD=0 LOAN=5100 MORTDUE=66834 VALUE=87361 REASON=HomeImp JOB=Other YOJ=0 DEROG=2 DELINQ=0 CLAGE=290.03410799 NINQ=0 CLNO=6 DEBTINC=38.766985071 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=290.03410799 IMP_CLNO=6 IMP_DEBTINC=38.766985071
IMP_DELINQ=0 IMP_DEROG=2 IMP_MORTDUE=66834 IMP_NINQ=0 IMP_VALUE=87361 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=97
_dataobs_=207 BAD=0 LOAN=5100 MORTDUE=73882 VALUE=96031 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=125.78740011 NINQ=1 CLNO=10 DEBTINC=34.446079222 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=125.78740011 IMP_CLNO=10 IMP_DEBTINC=34.446079222
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73882 IMP_NINQ=1 IMP_VALUE=96031 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=98
_dataobs_=213 BAD=0 LOAN=5200 MORTDUE=19000 VALUE=26000 REASON=DebtCon JOB=Other YOJ=0 DEROG=1 DELINQ=0 CLAGE=17.2 NINQ=10 CLNO=7 DEBTINC=. IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=17.2 IMP_CLNO=7 IMP_DEBTINC=33.786945547 IMP_DELINQ=0 IMP_DEROG=1
IMP_MORTDUE=19000 IMP_NINQ=10 IMP_VALUE=26000 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=102
_dataobs_=221 BAD=0 LOAN=5300 MORTDUE=. VALUE=49396 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=12.043670576 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=12.043670576 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=49396 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=109
_dataobs_=273 BAD=0 LOAN=5700 MORTDUE=. VALUE=68591 REASON=HomeImp JOB=Office YOJ=0 DEROG=0 DELINQ=0 CLAGE=69.645660473 NINQ=0 CLNO=4 DEBTINC=41.185039558 IMP_JOB=Office IMP_REASON=HomeImp IMP_CLAGE=69.645660473 IMP_CLNO=4 IMP_DEBTINC=41.185039558
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=68591 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=128
_dataobs_=279 BAD=1 LOAN=5700 MORTDUE=77213 VALUE=92661 REASON=DebtCon JOB=Sales YOJ=0 DEROG=0 DELINQ=0 CLAGE=97.133170952 NINQ=1 CLNO=16 DEBTINC=41.777888631 IMP_JOB=Sales IMP_REASON=DebtCon IMP_CLAGE=97.133170952 IMP_CLNO=16 IMP_DEBTINC=41.777888631
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=77213 IMP_NINQ=1 IMP_VALUE=92661 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=131
_dataobs_=284 BAD=0 LOAN=5700 MORTDUE=28116 VALUE=33450 REASON=DebtCon JOB=Other YOJ=0 DEROG=1 DELINQ=0 CLAGE=15.396587392 NINQ=9 CLNO=7 DEBTINC=30.017013296 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=15.396587392 IMP_CLNO=7 IMP_DEBTINC=30.017013296
IMP_DELINQ=0 IMP_DEROG=1 IMP_MORTDUE=28116 IMP_NINQ=9 IMP_VALUE=33450 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=133
_dataobs_=320 BAD=0 LOAN=6000 MORTDUE=69876 VALUE=94394.07 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=179.56666667 NINQ=0 CLNO=32 DEBTINC=. IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=179.56666667 IMP_CLNO=32 IMP_DEBTINC=33.786945547 IMP_DELINQ=1
IMP_DEROG=0 IMP_MORTDUE=69876 IMP_NINQ=0 IMP_VALUE=94394.07 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=153
_dataobs_=329 BAD=0 LOAN=6000 MORTDUE=79046 VALUE=103048 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=181.69653802 NINQ=0 CLNO=32 DEBTINC=37.289989924 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.69653802 IMP_CLNO=32 IMP_DEBTINC=37.289989924
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=79046 IMP_NINQ=0 IMP_VALUE=103048 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=160
_dataobs_=342 BAD=0 LOAN=6100 MORTDUE=. VALUE=46830 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=1 CLAGE=. NINQ=0 CLNO=0 DEBTINC=13.306013076 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=13.306013076 IMP_DELINQ=1 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=46830 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=166
_dataobs_=356 BAD=0 LOAN=6200 MORTDUE=73881 VALUE=98550 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=182.8787798 NINQ=0 CLNO=31 DEBTINC=37.19944569 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=182.8787798 IMP_CLNO=31 IMP_DEBTINC=37.19944569
IMP_DELINQ=1 IMP_DEROG=0 IMP_MORTDUE=73881 IMP_NINQ=0 IMP_VALUE=98550 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=172
_dataobs_=392 BAD=0 LOAN=6400 MORTDUE=44968 VALUE=62747 REASON=HomeImp JOB=Other YOJ=0 DEROG=1 DELINQ=. CLAGE=101.39144532 NINQ=. CLNO=12 DEBTINC=36.602947343 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=101.39144532 IMP_CLNO=12 IMP_DEBTINC=36.602947343
IMP_DELINQ=0.4622255303 IMP_DEROG=1 IMP_MORTDUE=44968 IMP_NINQ=1.1569852941 IMP_VALUE=62747 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=188
_dataobs_=419 BAD=0 LOAN=6600 MORTDUE=. VALUE=48800 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=12.219436152 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=12.219436152 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=48800 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=197
_dataobs_=423 BAD=0 LOAN=6600 MORTDUE=. VALUE=46516 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=14.845990728 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=14.845990728 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=46516 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=198
_dataobs_=454 BAD=0 LOAN=6800 MORTDUE=71666 VALUE=99913 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=196.46499893 NINQ=0 CLNO=31 DEBTINC=35.761604731 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=196.46499893 IMP_CLNO=31 IMP_DEBTINC=35.761604731
IMP_DELINQ=1 IMP_DEROG=0 IMP_MORTDUE=71666 IMP_NINQ=0 IMP_VALUE=99913 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=214
_dataobs_=471 BAD=0 LOAN=7000 MORTDUE=73873 VALUE=111781 REASON=DebtCon JOB=Office YOJ=0 DEROG=0 DELINQ=0 CLAGE=231.79991346 NINQ=0 CLNO=38 DEBTINC=19.273579455 IMP_JOB=Office IMP_REASON=DebtCon IMP_CLAGE=231.79991346 IMP_CLNO=38 IMP_DEBTINC=19.273579455
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73873 IMP_NINQ=0 IMP_VALUE=111781 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=220
_dataobs_=474 BAD=0 LOAN=7000 MORTDUE=78284 VALUE=98214 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=171.83838617 NINQ=0 CLNO=31 DEBTINC=36.247963031 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=171.83838617 IMP_CLNO=31 IMP_DEBTINC=36.247963031
IMP_DELINQ=1 IMP_DEROG=0 IMP_MORTDUE=78284 IMP_NINQ=0 IMP_VALUE=98214 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=223
WARNING: Limit set by ERRORS= option reached.  Further errors of this type will not be printed.
_dataobs_=516 BAD=0 LOAN=7100 MORTDUE=57863 VALUE=70969 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=65.872044812 NINQ=7 CLNO=21 DEBTINC=26.829490191 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=65.872044812 IMP_CLNO=21 IMP_DEBTINC=26.829490191
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=57863 IMP_NINQ=7 IMP_VALUE=70969 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=239
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_BAD_DM;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_BAD_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_ ^in('FREQ', 'BESTPROFIT', 'COMPUTEDPROFIT', 'EXPECTEDPROFIT', 'BESTLOSS', 'COMPUTEDLOSS', 'EXPECTEDLOSS', 'ROI', 'INVESTMENTCOST', 'MODELDECISION');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify BAD(type=PROFIT label= BAD);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_BAD_DM;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_BAD_DM end=eof;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if eof then do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
22422      data WORK.Neural5_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Neural5_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
22423      length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
22424      label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
22425         "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
22426      set EMWS1.NEURAL5_BAD_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.NEURAL5_BAD_DM( where=(_TYPE_="TARGET"));
22427      NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
22428      select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
22429      when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
22430      when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
22431      when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
22432      when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
22433      otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
22434      end;
MPRINT(EM_DIAGRAM):   end;
22435      output;
MPRINT(EM_DIAGRAM):   output;
22436      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_BAD_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.NEURAL5_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
22437      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22438      proc print data=WORK.Neural5_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Neural5_EVENT noobs label;
22439      var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
22440      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22441      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
22442      run;
 
NOTE: There were 1 observations read from the data set WORK.NEURAL5_EVENT.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22443      title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "BAD"."
22444      proc print data = EMWS1.Neural5_BAD_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Neural5_BAD_DM noobs label;
22445      var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
22446      where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
22447      label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
22448      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22449      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
22450      run;
 
NOTE: There were 7 observations read from the data set EMWS1.NEURAL5_BAD_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
22451      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural5: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M241SJNZ;
MPRINT(EM_DIAGRAM):   set WORK.M241SJNZ;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
22461      data WORK.M241SJNZ;
MPRINT(EM_DIAGRAM):    data WORK.M241SJNZ;
22462      set WORK.M241SJNZ end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M241SJNZ end=eof;
22463      output;
MPRINT(EM_DIAGRAM):   output;
22464      if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
22465      NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
22466      ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
22467      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
22468      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
22469      output;
MPRINT(EM_DIAGRAM):   output;
22470      end;
MPRINT(EM_DIAGRAM):   end;
22471      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.M241SJNZ.
NOTE: The data set WORK.M241SJNZ has 6 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS1.NEURAL5_BAD_DD.
NOTE: The data set WORK.BAD has 2 observations and 7 variables.
22472      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22473      * Neural5: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Neural5: Create decision matrix;
22474      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22475      data WORK.BAD(label="BAD");
MPRINT(EM_DIAGRAM):   data WORK.BAD(label="BAD");
22476        length   BAD                              $  32
22477                 COUNT                                8
22478                 DATAPRIOR                            8
22479                 TRAINPRIOR                           8
22480                 DECPRIOR                             8
22481                 DECISION1                            8
22482                 DECISION2                            8
22483                 ;
MPRINT(EM_DIAGRAM):   length BAD $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
22484
22485        label    COUNT="Level Counts"
22486                 DATAPRIOR="Data Proportions"
22487                 TRAINPRIOR="Training Proportions"
22488                 DECPRIOR="Decision Priors"
22489                 DECISION1="1"
22490                 DECISION2="0"
22491                 ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
22492      BAD="1"; COUNT=594; DATAPRIOR=0.19939577039274; TRAINPRIOR=0.19939577039274; DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   BAD="1";
MPRINT(EM_DIAGRAM):   COUNT=594;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.19939577039274;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.19939577039274;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
22493      output;
MPRINT(EM_DIAGRAM):   output;
22494      BAD="0"; COUNT=2385; DATAPRIOR=0.80060422960725; TRAINPRIOR=0.80060422960725; DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   BAD="0";
MPRINT(EM_DIAGRAM):   COUNT=2385;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.80060422960725;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.80060422960725;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
22495      output;
MPRINT(EM_DIAGRAM):   output;
22496      ;
MPRINT(EM_DIAGRAM):   ;
22497      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.BAD has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22498      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
22499      modify BAD(type=PROFIT label=BAD);
MPRINT(EM_DIAGRAM):   modify BAD(type=PROFIT label= BAD);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
22500      label DECISION1= '1';
22501      label DECISION2= '0';
22502      run;
 
NOTE: MODIFY was successful for WORK.BAD.DATA.
22503      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
22504      data EM_Neural5;
MPRINT(EM_DIAGRAM):   data EM_Neural5;
22505      set EMWS1.BINNING_TRAIN(keep=
22506      BAD GRP_IMP_CLAGE GRP_IMP_DEBTINC GRP_IMP_NINQ GRP_INDELINQ );
MPRINT(EM_DIAGRAM):   set EMWS1.BINNING_TRAIN(keep= BAD GRP_IMP_CLAGE GRP_IMP_DEBTINC GRP_IMP_NINQ GRP_INDELINQ );
22507      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=100 BAD=1 LOAN=4100 MORTDUE=. VALUE=19132 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=100.77465221 NINQ=0 CLNO=19 DEBTINC=33.840919904 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=100.77465221 IMP_CLNO=19 IMP_DEBTINC=33.840919904
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=19132 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=49
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=119 BAD=0 LOAN=4500 MORTDUE=. VALUE=49044 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=11.652738796 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=11.652738796 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=49044 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=60
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=206 BAD=0 LOAN=5100 MORTDUE=66834 VALUE=87361 REASON=HomeImp JOB=Other YOJ=0 DEROG=2 DELINQ=0 CLAGE=290.03410799 NINQ=0 CLNO=6 DEBTINC=38.766985071 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=290.03410799 IMP_CLNO=6 IMP_DEBTINC=38.766985071
IMP_DELINQ=0 IMP_DEROG=2 IMP_MORTDUE=66834 IMP_NINQ=0 IMP_VALUE=87361 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=97
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=207 BAD=0 LOAN=5100 MORTDUE=73882 VALUE=96031 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=125.78740011 NINQ=1 CLNO=10 DEBTINC=34.446079222 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=125.78740011 IMP_CLNO=10 IMP_DEBTINC=34.446079222
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73882 IMP_NINQ=1 IMP_VALUE=96031 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=98
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=213 BAD=0 LOAN=5200 MORTDUE=19000 VALUE=26000 REASON=DebtCon JOB=Other YOJ=0 DEROG=1 DELINQ=0 CLAGE=17.2 NINQ=10 CLNO=7 DEBTINC=. IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=17.2 IMP_CLNO=7 IMP_DEBTINC=33.786945547 IMP_DELINQ=0 IMP_DEROG=1
IMP_MORTDUE=19000 IMP_NINQ=10 IMP_VALUE=26000 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=102
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=221 BAD=0 LOAN=5300 MORTDUE=. VALUE=49396 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=12.043670576 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=12.043670576 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=49396 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=109
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=273 BAD=0 LOAN=5700 MORTDUE=. VALUE=68591 REASON=HomeImp JOB=Office YOJ=0 DEROG=0 DELINQ=0 CLAGE=69.645660473 NINQ=0 CLNO=4 DEBTINC=41.185039558 IMP_JOB=Office IMP_REASON=HomeImp IMP_CLAGE=69.645660473 IMP_CLNO=4 IMP_DEBTINC=41.185039558
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=68591 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=128
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=279 BAD=1 LOAN=5700 MORTDUE=77213 VALUE=92661 REASON=DebtCon JOB=Sales YOJ=0 DEROG=0 DELINQ=0 CLAGE=97.133170952 NINQ=1 CLNO=16 DEBTINC=41.777888631 IMP_JOB=Sales IMP_REASON=DebtCon IMP_CLAGE=97.133170952 IMP_CLNO=16 IMP_DEBTINC=41.777888631
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=77213 IMP_NINQ=1 IMP_VALUE=92661 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=131
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=284 BAD=0 LOAN=5700 MORTDUE=28116 VALUE=33450 REASON=DebtCon JOB=Other YOJ=0 DEROG=1 DELINQ=0 CLAGE=15.396587392 NINQ=9 CLNO=7 DEBTINC=30.017013296 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=15.396587392 IMP_CLNO=7 IMP_DEBTINC=30.017013296
IMP_DELINQ=0 IMP_DEROG=1 IMP_MORTDUE=28116 IMP_NINQ=9 IMP_VALUE=33450 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=133
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=320 BAD=0 LOAN=6000 MORTDUE=69876 VALUE=94394.07 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=179.56666667 NINQ=0 CLNO=32 DEBTINC=. IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=179.56666667 IMP_CLNO=32 IMP_DEBTINC=33.786945547 IMP_DELINQ=1
IMP_DEROG=0 IMP_MORTDUE=69876 IMP_NINQ=0 IMP_VALUE=94394.07 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=153
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=329 BAD=0 LOAN=6000 MORTDUE=79046 VALUE=103048 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=181.69653802 NINQ=0 CLNO=32 DEBTINC=37.289989924 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.69653802 IMP_CLNO=32 IMP_DEBTINC=37.289989924
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=79046 IMP_NINQ=0 IMP_VALUE=103048 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=160
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=342 BAD=0 LOAN=6100 MORTDUE=. VALUE=46830 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=1 CLAGE=. NINQ=0 CLNO=0 DEBTINC=13.306013076 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=13.306013076 IMP_DELINQ=1 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=46830 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=166
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=356 BAD=0 LOAN=6200 MORTDUE=73881 VALUE=98550 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=182.8787798 NINQ=0 CLNO=31 DEBTINC=37.19944569 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=182.8787798 IMP_CLNO=31 IMP_DEBTINC=37.19944569
IMP_DELINQ=1 IMP_DEROG=0 IMP_MORTDUE=73881 IMP_NINQ=0 IMP_VALUE=98550 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=172
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=392 BAD=0 LOAN=6400 MORTDUE=44968 VALUE=62747 REASON=HomeImp JOB=Other YOJ=0 DEROG=1 DELINQ=. CLAGE=101.39144532 NINQ=. CLNO=12 DEBTINC=36.602947343 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=101.39144532 IMP_CLNO=12 IMP_DEBTINC=36.602947343
IMP_DELINQ=0.4622255303 IMP_DEROG=1 IMP_MORTDUE=44968 IMP_NINQ=1.1569852941 IMP_VALUE=62747 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=188
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=419 BAD=0 LOAN=6600 MORTDUE=. VALUE=48800 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=12.219436152 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=12.219436152 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=48800 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=197
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=423 BAD=0 LOAN=6600 MORTDUE=. VALUE=46516 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=14.845990728 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=14.845990728 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=46516 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=198
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=454 BAD=0 LOAN=6800 MORTDUE=71666 VALUE=99913 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=196.46499893 NINQ=0 CLNO=31 DEBTINC=35.761604731 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=196.46499893 IMP_CLNO=31 IMP_DEBTINC=35.761604731
IMP_DELINQ=1 IMP_DEROG=0 IMP_MORTDUE=71666 IMP_NINQ=0 IMP_VALUE=99913 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=214
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=471 BAD=0 LOAN=7000 MORTDUE=73873 VALUE=111781 REASON=DebtCon JOB=Office YOJ=0 DEROG=0 DELINQ=0 CLAGE=231.79991346 NINQ=0 CLNO=38 DEBTINC=19.273579455 IMP_JOB=Office IMP_REASON=DebtCon IMP_CLAGE=231.79991346 IMP_CLNO=38 IMP_DEBTINC=19.273579455
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73873 IMP_NINQ=0 IMP_VALUE=111781 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=220
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=474 BAD=0 LOAN=7000 MORTDUE=78284 VALUE=98214 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=171.83838617 NINQ=0 CLNO=31 DEBTINC=36.247963031 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=171.83838617 IMP_CLNO=31 IMP_DEBTINC=36.247963031
IMP_DELINQ=1 IMP_DEROG=0 IMP_MORTDUE=78284 IMP_NINQ=0 IMP_VALUE=98214 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=223
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
WARNING: Limit set by ERRORS= option reached.  Further errors of this type will not be printed.
_dataobs_=516 BAD=0 LOAN=7100 MORTDUE=57863 VALUE=70969 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=65.872044812 NINQ=7 CLNO=21 DEBTINC=26.829490191 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=65.872044812 IMP_CLNO=21 IMP_DEBTINC=26.829490191
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=57863 IMP_NINQ=7 IMP_VALUE=70969 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=239
NOTE: There were 2979 observations read from the data set EMWS1.PART_TRAIN.
NOTE: Mathematical operations could not be performed at the following places. The results of the operations have been set to missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      209 at 83566:10
NOTE: There were 2979 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: View EMWS1.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.21 seconds
 
NOTE: There were 2979 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 2979 observations read from the data set EMWS1.BINNING_TRAIN.
NOTE: The data set WORK.EM_NEURAL5 has 2979 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Neural5: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22508      *------------------------------------------------------------* ;
22509      * Neural5: DMDBClass Macro ;
22510      *------------------------------------------------------------* ;
22511      %macro DMDBClass;
22512          BAD(DESC) GRP_IMP_CLAGE(ASC) GRP_IMP_DEBTINC(ASC) GRP_IMP_NINQ(ASC)
22513         GRP_INDELINQ(ASC)
22514      %mend DMDBClass;
22515      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22516      * Neural5: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Neural5: DMDBVar Macro ;
22517      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22518      %macro DMDBVar;
22519
22520      %mend DMDBVar;
22521      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22522      * Neural5: Create DMDB;
MPRINT(EM_DIAGRAM):   * Neural5: Create DMDB;
22523      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22524      proc dmdb batch data=WORK.EM_Neural5
22525      dmdbcat=WORK.Neural5_DMDB
22526      maxlevel = 513
22527      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_Neural5 dmdbcat=WORK.Neural5_DMDB maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
22528      class %DMDBClass;
MPRINT(DMDBCLASS):   BAD(DESC) GRP_IMP_CLAGE(ASC) GRP_IMP_DEBTINC(ASC) GRP_IMP_NINQ(ASC) GRP_INDELINQ(ASC)
MPRINT(EM_DIAGRAM):  ;
22529      var %DMDBVar;
MPRINT(EM_DIAGRAM):   var
MPRINT(EM_DIAGRAM):  ;
22530      target
22531      BAD
22532      ;
MPRINT(EM_DIAGRAM):   target BAD ;
22533      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2979   Memory used = 511K.
NOTE: There were 2979 observations read from the data set WORK.EM_NEURAL5.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
22534      quit;
22535      *--- end code ---*;
 
22536      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
22537      * Neural5: Interval Input Variables Macro ;
MPRINT(EM_DIAGRAM):   * Neural5: Interval Input Variables Macro ;
22538      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22539      %macro INTINPUTS;
22540
22541      %mend INTINPUTS;
22542      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22543      * Neural5: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Neural5: Binary Inputs Macro ;
22544      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22545      %macro BININPUTS;
22546
22547      %mend BININPUTS;
22548      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22549      * Neural5: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Neural5: Nominal Inputs Macro ;
22550      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22551      %macro NOMINPUTS;
22552
22553      %mend NOMINPUTS;
22554      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22555      * Neural5: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Neural5: Ordinal Inputs Macro ;
22556      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22557      %macro ORDINPUTS;
22558          GRP_IMP_CLAGE GRP_IMP_DEBTINC GRP_IMP_NINQ GRP_INDELINQ
22559      %mend ORDINPUTS;
22560      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22561      * Neural Network Training;
MPRINT(EM_DIAGRAM):   * Neural Network Training;
22562      ;
MPRINT(EM_DIAGRAM):   ;
22563      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22564      proc neural data=EM_Neural5 dmdbcat=WORK.Neural5_DMDB
22565      validdata = EMWS1.BINNING_VALIDATE
22566      random=12345
22567      ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_Neural5 dmdbcat=WORK.Neural5_DMDB validdata = EMWS1.BINNING_VALIDATE random=12345 ;
22568      nloptions
22569      ;
MPRINT(EM_DIAGRAM):   nloptions ;
22570      performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
22571      netopts
22572      decay=0;
MPRINT(EM_DIAGRAM):   netopts decay=0;
MPRINT(EM_DIAGRAM):   input
22573      input %ORDINPUTS / level=ordinal id=ord
MPRINT(ORDINPUTS):   GRP_IMP_CLAGE GRP_IMP_DEBTINC GRP_IMP_NINQ GRP_INDELINQ
22574      ;
MPRINT(EM_DIAGRAM):   / level=ordinal id=ord ;
22575      target BAD / level=NOMINAL id=BAD
22576      bias
22577      ;
MPRINT(EM_DIAGRAM):   target BAD / level=NOMINAL id=BAD bias ;
22578      arch MLP
22579      Hidden=5
22580      ;
MPRINT(EM_DIAGRAM):   arch MLP Hidden=5 ;
22581      Prelim 5 preiter=10
22582      pretime=3600
22583      Outest=EMWS1.Neural5_PRELIM_OUTEST
22584      ;
MPRINT(EM_DIAGRAM):   Prelim 5 preiter=10 pretime=3600 Outest=EMWS1.Neural5_PRELIM_OUTEST ;
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=93 BAD=0 LOAN=4000 MORTDUE=. VALUE=45760 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=. IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=33.786945547 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=45760 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=48
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=204 BAD=1 LOAN=5100 MORTDUE=15500 VALUE=34000 REASON=DebtCon JOB=Other YOJ=0 DEROG=1 DELINQ=2 CLAGE=86.233333333 NINQ=2 CLNO=13 DEBTINC=. IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=86.233333333 IMP_CLNO=13 IMP_DEBTINC=33.786945547 IMP_DELINQ=2
IMP_DEROG=1 IMP_MORTDUE=15500 IMP_NINQ=2 IMP_VALUE=34000 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=108
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=208 BAD=0 LOAN=5100 MORTDUE=74071 VALUE=97064 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=121.0759726 NINQ=2 CLNO=9 DEBTINC=36.401729548 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=121.0759726 IMP_CLNO=9 IMP_DEBTINC=36.401729548
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=74071 IMP_NINQ=2 IMP_VALUE=97064 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=110
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=217 BAD=1 LOAN=5200 MORTDUE=40564 VALUE=39527 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=157.77103572 NINQ=1 CLNO=13 DEBTINC=72.670433313 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=157.77103572 IMP_CLNO=13 IMP_DEBTINC=72.670433313
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=40564 IMP_NINQ=1 IMP_VALUE=39527 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=112
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=224 BAD=0 LOAN=5300 MORTDUE=75958 VALUE=91703 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=124.1821788 NINQ=1 CLNO=10 DEBTINC=34.599060194 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=124.1821788 IMP_CLNO=10 IMP_DEBTINC=34.599060194
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=75958 IMP_NINQ=1 IMP_VALUE=91703 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=114
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=227 BAD=0 LOAN=5300 MORTDUE=83552 VALUE=96809 REASON=DebtCon JOB=ProfExe YOJ=0 DEROG=. DELINQ=. CLAGE=. NINQ=. CLNO=. DEBTINC=28.423961906 IMP_JOB=ProfExe IMP_REASON=DebtCon IMP_CLAGE=181.15305208 IMP_CLNO=21.277078966 IMP_DEBTINC=28.423961906
IMP_DELINQ=0.4622255303 IMP_DEROG=0.2409592691 IMP_MORTDUE=83552 IMP_NINQ=1.1569852941 IMP_VALUE=96809 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=116
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=274 BAD=0 LOAN=5700 MORTDUE=26927 VALUE=35461 REASON=DebtCon JOB=Other YOJ=0 DEROG=1 DELINQ=0 CLAGE=21.799352154 NINQ=10 CLNO=6 DEBTINC=29.439664242 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=21.799352154 IMP_CLNO=6 IMP_DEBTINC=29.439664242
IMP_DELINQ=0 IMP_DEROG=1 IMP_MORTDUE=26927 IMP_NINQ=10 IMP_VALUE=35461 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=146
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=283 BAD=1 LOAN=5700 MORTDUE=74172 VALUE=79846 REASON=DebtCon JOB=ProfExe YOJ=0 DEROG=0 DELINQ=0 CLAGE=157.00977472 NINQ=0 CLNO=28 DEBTINC=47.415228659 IMP_JOB=ProfExe IMP_REASON=DebtCon IMP_CLAGE=157.00977472 IMP_CLNO=28 IMP_DEBTINC=47.415228659
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=74172 IMP_NINQ=0 IMP_VALUE=79846 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=151
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=330 BAD=0 LOAN=6000 MORTDUE=. VALUE=53190 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=15.174415003 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=15.174415003 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=53190 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=170
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=343 BAD=0 LOAN=6100 MORTDUE=78753 VALUE=95433 REASON=DebtCon JOB=ProfExe YOJ=0 DEROG=. DELINQ=. CLAGE=. NINQ=. CLNO=. DEBTINC=28.925117417 IMP_JOB=ProfExe IMP_REASON=DebtCon IMP_CLAGE=181.15305208 IMP_CLNO=21.277078966 IMP_DEBTINC=28.925117417
IMP_DELINQ=0.4622255303 IMP_DEROG=0.2409592691 IMP_MORTDUE=78753 IMP_NINQ=1.1569852941 IMP_VALUE=95433 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=177
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=344 BAD=0 LOAN=6100 MORTDUE=77265 VALUE=97944 REASON=DebtCon JOB=ProfExe YOJ=0 DEROG=. DELINQ=. CLAGE=. NINQ=. CLNO=. DEBTINC=28.876463055 IMP_JOB=ProfExe IMP_REASON=DebtCon IMP_CLAGE=181.15305208 IMP_CLNO=21.277078966 IMP_DEBTINC=28.876463055
IMP_DELINQ=0.4622255303 IMP_DEROG=0.2409592691 IMP_MORTDUE=77265 IMP_NINQ=1.1569852941 IMP_VALUE=97944 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=178
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=358 BAD=0 LOAN=6200 MORTDUE=75121 VALUE=96462 REASON=DebtCon JOB=ProfExe YOJ=0 DEROG=. DELINQ=. CLAGE=. NINQ=. CLNO=. DEBTINC=27.167655962 IMP_JOB=ProfExe IMP_REASON=DebtCon IMP_CLAGE=181.15305208 IMP_CLNO=21.277078966 IMP_DEBTINC=27.167655962
IMP_DELINQ=0.4622255303 IMP_DEROG=0.2409592691 IMP_MORTDUE=75121 IMP_NINQ=1.1569852941 IMP_VALUE=96462 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=186
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=382 BAD=0 LOAN=6400 MORTDUE=47251 VALUE=58157 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=. CLAGE=104.79246836 NINQ=. CLNO=13 DEBTINC=36.416886965 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=104.79246836 IMP_CLNO=13 IMP_DEBTINC=36.416886965
IMP_DELINQ=0.4622255303 IMP_DEROG=0 IMP_MORTDUE=47251 IMP_NINQ=1.1569852941 IMP_VALUE=58157 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=202
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=402 BAD=0 LOAN=6500 MORTDUE=78741 VALUE=90599 REASON=DebtCon JOB=ProfExe YOJ=0 DEROG=. DELINQ=. CLAGE=. NINQ=. CLNO=. DEBTINC=29.198860669 IMP_JOB=ProfExe IMP_REASON=DebtCon IMP_CLAGE=181.15305208 IMP_CLNO=21.277078966 IMP_DEBTINC=29.198860669
IMP_DELINQ=0.4622255303 IMP_DEROG=0.2409592691 IMP_MORTDUE=78741 IMP_NINQ=1.1569852941 IMP_VALUE=90599 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=211
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=416 BAD=0 LOAN=6500 MORTDUE=58689 VALUE=72557 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=94.00805286 NINQ=2 CLNO=18 DEBTINC=34.898413066 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=94.00805286 IMP_CLNO=18 IMP_DEBTINC=34.898413066
IMP_DELINQ=1 IMP_DEROG=0 IMP_MORTDUE=58689 IMP_NINQ=2 IMP_VALUE=72557 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=220
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=433 BAD=0 LOAN=6700 MORTDUE=69773 VALUE=83014 REASON=HomeImp JOB=Other YOJ=0 DEROG=1 DELINQ=0 CLAGE=263.17343429 NINQ=0 CLNO=5 DEBTINC=37.70699649 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=263.17343429 IMP_CLNO=5 IMP_DEBTINC=37.70699649
IMP_DELINQ=0 IMP_DEROG=1 IMP_MORTDUE=69773 IMP_NINQ=0 IMP_VALUE=83014 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=228
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=435 BAD=0 LOAN=6700 MORTDUE=48430 VALUE=64358 REASON=HomeImp JOB=Other YOJ=0 DEROG=1 DELINQ=. CLAGE=108.35174747 NINQ=. CLNO=13 DEBTINC=38.894194746 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=108.35174747 IMP_CLNO=13 IMP_DEBTINC=38.894194746
IMP_DELINQ=0.4622255303 IMP_DEROG=1 IMP_MORTDUE=48430 IMP_NINQ=1.1569852941 IMP_VALUE=64358 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=229
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=517 BAD=0 LOAN=7100 MORTDUE=64850 VALUE=76985 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=108.21718977 NINQ=0 CLNO=7 DEBTINC=36.337557557 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=108.21718977 IMP_CLNO=7 IMP_DEBTINC=36.337557557
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=64850 IMP_NINQ=0 IMP_VALUE=76985 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=278
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=533 BAD=0 LOAN=7200 MORTDUE=22832 VALUE=31666 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=38.003266851 NINQ=9 CLNO=7 DEBTINC=28.295681117 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=38.003266851 IMP_CLNO=7 IMP_DEBTINC=28.295681117
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=22832 IMP_NINQ=9 IMP_VALUE=31666 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=286
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
WARNING: Limit set by ERRORS= option reached.  Further errors of this type will not be printed.
_dataobs_=556 BAD=1 LOAN=7400 MORTDUE=71576 VALUE=89068 REASON=DebtCon JOB=Sales YOJ=0 DEROG=0 DELINQ=0 CLAGE=94.782230694 NINQ=0 CLNO=17 DEBTINC=42.803421995 IMP_JOB=Sales IMP_REASON=DebtCon IMP_CLAGE=94.782230694 IMP_CLNO=17 IMP_DEBTINC=42.803421995
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=71576 IMP_NINQ=0 IMP_VALUE=89068 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=297
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 10 iterations or 2147483647 function calls.
NOTE: Some of the active constraints have significant Lagrange Multipliers.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 10 iterations or 2147483647 function calls.
NOTE: Some of the active constraints have significant Lagrange Multipliers.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 10 iterations or 2147483647 function calls.
NOTE: Some of the active constraints have significant Lagrange Multipliers.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 10 iterations or 2147483647 function calls.
NOTE: Some of the active constraints have significant Lagrange Multipliers.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 10 iterations or 2147483647 function calls.
NOTE: Some of the active constraints have significant Lagrange Multipliers.
NOTE: The data set EMWS1.NEURAL5_PRELIM_OUTEST has 11 observations and 76 variables.
22585      save network=EMWS1.Neural5_NETWORK.dm_neural;
MPRINT(EM_DIAGRAM):   save network=EMWS1.Neural5_NETWORK.dm_neural;
NOTE: Entry EMWS1.NEURAL5_NETWORK.DM_NEURAL has been opened.
NOTE: Entry EMWS1.NEURAL5_NETWORK.DM_NEURAL has been closed.
22586      train Maxiter=50
22587      maxtime=14400
22588      Outest=EMWS1.Neural5_outest estiter=1
22589      Outfit=EMWS1.Neural5_OUTFIT
22590      ;
MPRINT(EM_DIAGRAM):   train Maxiter=50 maxtime=14400 Outest=EMWS1.Neural5_outest estiter=1 Outfit=EMWS1.Neural5_OUTFIT ;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 50 iterations or 2147483647 function calls.
NOTE: Some of the active constraints have significant Lagrange Multipliers.
NOTE: The data set EMWS1.NEURAL5_OUTEST has 114 observations and 76 variables.
NOTE: The data set EMWS1.NEURAL5_OUTFIT has 104 observations and 36 variables.
22591      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_NEURAL5 has 2979 observations and 5 variables.
NOTE: The data set EMWS1.BINNING_VALIDATE has . observations and 32 variables.
NOTE: There were 2981 observations read from the data set EMWS1.PART_VALIDATE.
NOTE: Mathematical operations could not be performed at the following places. The results of the operations have been set to missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      206 at 83588:10
NOTE: There were 2981 observations read from the data set EMWS1.IMPT_VALIDATE.
NOTE: View EMWS1.BINNING_VALIDATE.VIEW used (Total process time):
      real time           11.03 seconds
      cpu time            11.03 seconds
 
NOTE: There were 2981 observations read from the data set EMWS1.TRANS_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed pages 4-7.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           11.06 seconds
      cpu time            11.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
22592      quit;
 
22593      proc sort data=EMWS1.Neural5_OUTFIT(where=(_iter_ ne . and _NAME_="OVERALL")) out=fit_Neural5;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural5_OUTFIT(where=(_iter_ ne . and _NAME_="OVERALL")) out=fit_Neural5;
22594      by _VAVERR_;
MPRINT(EM_DIAGRAM):   by _VAVERR_;
22595      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS1.NEURAL5_OUTFIT.
      WHERE (_iter_ not = .) and (_NAME_='OVERALL');
NOTE: The data set WORK.FIT_NEURAL5 has 52 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22596      %GLOBAL ITER;
22597      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
22598      set fit_Neural5(obs=1);
MPRINT(EM_DIAGRAM):   set fit_Neural5(obs=1);
22599      call symput('ITER',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('ITER',put(_ITER_, 6.));
22600      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.FIT_NEURAL5.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22601      data EMWS1.Neural5_INITIAL;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_INITIAL;
22602      set EMWS1.Neural5_outest(where=(_ITER_ eq &ITER and _OBJ_ ne .));
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_outest(where=(_ITER_ eq 1 and _OBJ_ ne .));
22603      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_OUTEST.
      WHERE (_ITER_=1) and (_OBJ_ not = .);
NOTE: The data set EMWS1.NEURAL5_INITIAL has 1 observations and 76 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22604      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22605      * Neural Network Model Selection;
MPRINT(EM_DIAGRAM):   * Neural Network Model Selection;
22606      ;
MPRINT(EM_DIAGRAM):   ;
22607      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22608      proc neural data=EM_Neural5 dmdbcat=WORK.Neural5_DMDB
22609      validdata = EMWS1.BINNING_VALIDATE
22610      network = EMWS1.Neural5_NETWORK.dm_neural
22611      random=12345
22612      ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_Neural5 dmdbcat=WORK.Neural5_DMDB validdata = EMWS1.BINNING_VALIDATE network = EMWS1.Neural5_NETWORK.dm_neural random=12345 ;
NOTE: Entry EMWS1.NEURAL5_NETWORK.DM_NEURAL has been opened.
NOTE: Entry EMWS1.NEURAL5_NETWORK.DM_NEURAL has been closed.
22613      nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
22614      performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
22615      initial inest=EMWS1.Neural5_INITIAL;
MPRINT(EM_DIAGRAM):   initial inest=EMWS1.Neural5_INITIAL;
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=93 BAD=0 LOAN=4000 MORTDUE=. VALUE=45760 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=. IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=33.786945547 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=45760 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=48
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=204 BAD=1 LOAN=5100 MORTDUE=15500 VALUE=34000 REASON=DebtCon JOB=Other YOJ=0 DEROG=1 DELINQ=2 CLAGE=86.233333333 NINQ=2 CLNO=13 DEBTINC=. IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=86.233333333 IMP_CLNO=13 IMP_DEBTINC=33.786945547 IMP_DELINQ=2
IMP_DEROG=1 IMP_MORTDUE=15500 IMP_NINQ=2 IMP_VALUE=34000 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=108
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=208 BAD=0 LOAN=5100 MORTDUE=74071 VALUE=97064 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=121.0759726 NINQ=2 CLNO=9 DEBTINC=36.401729548 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=121.0759726 IMP_CLNO=9 IMP_DEBTINC=36.401729548
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=74071 IMP_NINQ=2 IMP_VALUE=97064 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=110
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=217 BAD=1 LOAN=5200 MORTDUE=40564 VALUE=39527 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=157.77103572 NINQ=1 CLNO=13 DEBTINC=72.670433313 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=157.77103572 IMP_CLNO=13 IMP_DEBTINC=72.670433313
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=40564 IMP_NINQ=1 IMP_VALUE=39527 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=112
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=224 BAD=0 LOAN=5300 MORTDUE=75958 VALUE=91703 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=124.1821788 NINQ=1 CLNO=10 DEBTINC=34.599060194 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=124.1821788 IMP_CLNO=10 IMP_DEBTINC=34.599060194
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=75958 IMP_NINQ=1 IMP_VALUE=91703 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=114
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=227 BAD=0 LOAN=5300 MORTDUE=83552 VALUE=96809 REASON=DebtCon JOB=ProfExe YOJ=0 DEROG=. DELINQ=. CLAGE=. NINQ=. CLNO=. DEBTINC=28.423961906 IMP_JOB=ProfExe IMP_REASON=DebtCon IMP_CLAGE=181.15305208 IMP_CLNO=21.277078966 IMP_DEBTINC=28.423961906
IMP_DELINQ=0.4622255303 IMP_DEROG=0.2409592691 IMP_MORTDUE=83552 IMP_NINQ=1.1569852941 IMP_VALUE=96809 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=116
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=274 BAD=0 LOAN=5700 MORTDUE=26927 VALUE=35461 REASON=DebtCon JOB=Other YOJ=0 DEROG=1 DELINQ=0 CLAGE=21.799352154 NINQ=10 CLNO=6 DEBTINC=29.439664242 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=21.799352154 IMP_CLNO=6 IMP_DEBTINC=29.439664242
IMP_DELINQ=0 IMP_DEROG=1 IMP_MORTDUE=26927 IMP_NINQ=10 IMP_VALUE=35461 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=146
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=283 BAD=1 LOAN=5700 MORTDUE=74172 VALUE=79846 REASON=DebtCon JOB=ProfExe YOJ=0 DEROG=0 DELINQ=0 CLAGE=157.00977472 NINQ=0 CLNO=28 DEBTINC=47.415228659 IMP_JOB=ProfExe IMP_REASON=DebtCon IMP_CLAGE=157.00977472 IMP_CLNO=28 IMP_DEBTINC=47.415228659
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=74172 IMP_NINQ=0 IMP_VALUE=79846 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=151
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=330 BAD=0 LOAN=6000 MORTDUE=. VALUE=53190 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=15.174415003 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=15.174415003 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=53190 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=170
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=343 BAD=0 LOAN=6100 MORTDUE=78753 VALUE=95433 REASON=DebtCon JOB=ProfExe YOJ=0 DEROG=. DELINQ=. CLAGE=. NINQ=. CLNO=. DEBTINC=28.925117417 IMP_JOB=ProfExe IMP_REASON=DebtCon IMP_CLAGE=181.15305208 IMP_CLNO=21.277078966 IMP_DEBTINC=28.925117417
IMP_DELINQ=0.4622255303 IMP_DEROG=0.2409592691 IMP_MORTDUE=78753 IMP_NINQ=1.1569852941 IMP_VALUE=95433 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=177
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=344 BAD=0 LOAN=6100 MORTDUE=77265 VALUE=97944 REASON=DebtCon JOB=ProfExe YOJ=0 DEROG=. DELINQ=. CLAGE=. NINQ=. CLNO=. DEBTINC=28.876463055 IMP_JOB=ProfExe IMP_REASON=DebtCon IMP_CLAGE=181.15305208 IMP_CLNO=21.277078966 IMP_DEBTINC=28.876463055
IMP_DELINQ=0.4622255303 IMP_DEROG=0.2409592691 IMP_MORTDUE=77265 IMP_NINQ=1.1569852941 IMP_VALUE=97944 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=178
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=358 BAD=0 LOAN=6200 MORTDUE=75121 VALUE=96462 REASON=DebtCon JOB=ProfExe YOJ=0 DEROG=. DELINQ=. CLAGE=. NINQ=. CLNO=. DEBTINC=27.167655962 IMP_JOB=ProfExe IMP_REASON=DebtCon IMP_CLAGE=181.15305208 IMP_CLNO=21.277078966 IMP_DEBTINC=27.167655962
IMP_DELINQ=0.4622255303 IMP_DEROG=0.2409592691 IMP_MORTDUE=75121 IMP_NINQ=1.1569852941 IMP_VALUE=96462 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=186
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=382 BAD=0 LOAN=6400 MORTDUE=47251 VALUE=58157 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=. CLAGE=104.79246836 NINQ=. CLNO=13 DEBTINC=36.416886965 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=104.79246836 IMP_CLNO=13 IMP_DEBTINC=36.416886965
IMP_DELINQ=0.4622255303 IMP_DEROG=0 IMP_MORTDUE=47251 IMP_NINQ=1.1569852941 IMP_VALUE=58157 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=202
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=402 BAD=0 LOAN=6500 MORTDUE=78741 VALUE=90599 REASON=DebtCon JOB=ProfExe YOJ=0 DEROG=. DELINQ=. CLAGE=. NINQ=. CLNO=. DEBTINC=29.198860669 IMP_JOB=ProfExe IMP_REASON=DebtCon IMP_CLAGE=181.15305208 IMP_CLNO=21.277078966 IMP_DEBTINC=29.198860669
IMP_DELINQ=0.4622255303 IMP_DEROG=0.2409592691 IMP_MORTDUE=78741 IMP_NINQ=1.1569852941 IMP_VALUE=90599 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=211
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=416 BAD=0 LOAN=6500 MORTDUE=58689 VALUE=72557 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=94.00805286 NINQ=2 CLNO=18 DEBTINC=34.898413066 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=94.00805286 IMP_CLNO=18 IMP_DEBTINC=34.898413066
IMP_DELINQ=1 IMP_DEROG=0 IMP_MORTDUE=58689 IMP_NINQ=2 IMP_VALUE=72557 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=220
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=433 BAD=0 LOAN=6700 MORTDUE=69773 VALUE=83014 REASON=HomeImp JOB=Other YOJ=0 DEROG=1 DELINQ=0 CLAGE=263.17343429 NINQ=0 CLNO=5 DEBTINC=37.70699649 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=263.17343429 IMP_CLNO=5 IMP_DEBTINC=37.70699649
IMP_DELINQ=0 IMP_DEROG=1 IMP_MORTDUE=69773 IMP_NINQ=0 IMP_VALUE=83014 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=228
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=435 BAD=0 LOAN=6700 MORTDUE=48430 VALUE=64358 REASON=HomeImp JOB=Other YOJ=0 DEROG=1 DELINQ=. CLAGE=108.35174747 NINQ=. CLNO=13 DEBTINC=38.894194746 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=108.35174747 IMP_CLNO=13 IMP_DEBTINC=38.894194746
IMP_DELINQ=0.4622255303 IMP_DEROG=1 IMP_MORTDUE=48430 IMP_NINQ=1.1569852941 IMP_VALUE=64358 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=229
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=517 BAD=0 LOAN=7100 MORTDUE=64850 VALUE=76985 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=108.21718977 NINQ=0 CLNO=7 DEBTINC=36.337557557 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=108.21718977 IMP_CLNO=7 IMP_DEBTINC=36.337557557
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=64850 IMP_NINQ=0 IMP_VALUE=76985 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=278
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=533 BAD=0 LOAN=7200 MORTDUE=22832 VALUE=31666 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=38.003266851 NINQ=9 CLNO=7 DEBTINC=28.295681117 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=38.003266851 IMP_CLNO=7 IMP_DEBTINC=28.295681117
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=22832 IMP_NINQ=9 IMP_VALUE=31666 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=286
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
WARNING: Limit set by ERRORS= option reached.  Further errors of this type will not be printed.
_dataobs_=556 BAD=1 LOAN=7400 MORTDUE=71576 VALUE=89068 REASON=DebtCon JOB=Sales YOJ=0 DEROG=0 DELINQ=0 CLAGE=94.782230694 NINQ=0 CLNO=17 DEBTINC=42.803421995 IMP_JOB=Sales IMP_REASON=DebtCon IMP_CLAGE=94.782230694 IMP_CLNO=17 IMP_DEBTINC=42.803421995
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=71576 IMP_NINQ=0 IMP_VALUE=89068 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=297
NOTE: The data set EMWS1.NEURAL5_INITIAL has 1 observations and 76 variables.
22616      train tech=NONE;
MPRINT(EM_DIAGRAM):   train tech=NONE;
NOTE: No optimization performed.
22617      code file="C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\SCORECODE.sas"
22618      group=Neural5
22619      ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\SCORECODE.sas" group=Neural5 ;
NOTE: External file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\SCORECODE.sas opened.
22620      ;
MPRINT(EM_DIAGRAM):   ;
22621      code file="C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\RESIDUALSCORECODE.sas"
22622      group=Neural5
22623      residual
22624      ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\RESIDUALSCORECODE.sas" group=Neural5 residual ;
NOTE: External file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\RESIDUALSCORECODE.sas opened.
22625      ;
MPRINT(EM_DIAGRAM):   ;
22626      score data=EMWS1.BINNING_TRAIN out=_NULL_
NOTE: View EMWS1.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
 
22627      outfit=WORK.FIT1
22628      role=TRAIN
22629      outkey=EMWS1.Neural5_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS1.BINNING_TRAIN out=_NULL_ outfit=WORK.FIT1 role=TRAIN outkey=EMWS1.Neural5_OUTKEY;
NOTE: The data set EMWS1.NEURAL5_OUTKEY has 27 observations and 8 variables.
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=100 BAD=1 LOAN=4100 MORTDUE=. VALUE=19132 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=100.77465221 NINQ=0 CLNO=19 DEBTINC=33.840919904 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=100.77465221 IMP_CLNO=19 IMP_DEBTINC=33.840919904
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=19132 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=49
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=119 BAD=0 LOAN=4500 MORTDUE=. VALUE=49044 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=11.652738796 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=11.652738796 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=49044 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=60
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=206 BAD=0 LOAN=5100 MORTDUE=66834 VALUE=87361 REASON=HomeImp JOB=Other YOJ=0 DEROG=2 DELINQ=0 CLAGE=290.03410799 NINQ=0 CLNO=6 DEBTINC=38.766985071 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=290.03410799 IMP_CLNO=6 IMP_DEBTINC=38.766985071
IMP_DELINQ=0 IMP_DEROG=2 IMP_MORTDUE=66834 IMP_NINQ=0 IMP_VALUE=87361 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=97
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=207 BAD=0 LOAN=5100 MORTDUE=73882 VALUE=96031 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=125.78740011 NINQ=1 CLNO=10 DEBTINC=34.446079222 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=125.78740011 IMP_CLNO=10 IMP_DEBTINC=34.446079222
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73882 IMP_NINQ=1 IMP_VALUE=96031 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=98
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=213 BAD=0 LOAN=5200 MORTDUE=19000 VALUE=26000 REASON=DebtCon JOB=Other YOJ=0 DEROG=1 DELINQ=0 CLAGE=17.2 NINQ=10 CLNO=7 DEBTINC=. IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=17.2 IMP_CLNO=7 IMP_DEBTINC=33.786945547 IMP_DELINQ=0 IMP_DEROG=1
IMP_MORTDUE=19000 IMP_NINQ=10 IMP_VALUE=26000 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=102
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=221 BAD=0 LOAN=5300 MORTDUE=. VALUE=49396 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=12.043670576 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=12.043670576 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=49396 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=109
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=273 BAD=0 LOAN=5700 MORTDUE=. VALUE=68591 REASON=HomeImp JOB=Office YOJ=0 DEROG=0 DELINQ=0 CLAGE=69.645660473 NINQ=0 CLNO=4 DEBTINC=41.185039558 IMP_JOB=Office IMP_REASON=HomeImp IMP_CLAGE=69.645660473 IMP_CLNO=4 IMP_DEBTINC=41.185039558
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=68591 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=128
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=279 BAD=1 LOAN=5700 MORTDUE=77213 VALUE=92661 REASON=DebtCon JOB=Sales YOJ=0 DEROG=0 DELINQ=0 CLAGE=97.133170952 NINQ=1 CLNO=16 DEBTINC=41.777888631 IMP_JOB=Sales IMP_REASON=DebtCon IMP_CLAGE=97.133170952 IMP_CLNO=16 IMP_DEBTINC=41.777888631
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=77213 IMP_NINQ=1 IMP_VALUE=92661 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=131
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=284 BAD=0 LOAN=5700 MORTDUE=28116 VALUE=33450 REASON=DebtCon JOB=Other YOJ=0 DEROG=1 DELINQ=0 CLAGE=15.396587392 NINQ=9 CLNO=7 DEBTINC=30.017013296 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=15.396587392 IMP_CLNO=7 IMP_DEBTINC=30.017013296
IMP_DELINQ=0 IMP_DEROG=1 IMP_MORTDUE=28116 IMP_NINQ=9 IMP_VALUE=33450 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=133
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=320 BAD=0 LOAN=6000 MORTDUE=69876 VALUE=94394.07 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=179.56666667 NINQ=0 CLNO=32 DEBTINC=. IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=179.56666667 IMP_CLNO=32 IMP_DEBTINC=33.786945547 IMP_DELINQ=1
IMP_DEROG=0 IMP_MORTDUE=69876 IMP_NINQ=0 IMP_VALUE=94394.07 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=153
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=329 BAD=0 LOAN=6000 MORTDUE=79046 VALUE=103048 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=181.69653802 NINQ=0 CLNO=32 DEBTINC=37.289989924 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.69653802 IMP_CLNO=32 IMP_DEBTINC=37.289989924
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=79046 IMP_NINQ=0 IMP_VALUE=103048 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=160
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=342 BAD=0 LOAN=6100 MORTDUE=. VALUE=46830 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=1 CLAGE=. NINQ=0 CLNO=0 DEBTINC=13.306013076 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=13.306013076 IMP_DELINQ=1 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=46830 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=166
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=356 BAD=0 LOAN=6200 MORTDUE=73881 VALUE=98550 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=182.8787798 NINQ=0 CLNO=31 DEBTINC=37.19944569 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=182.8787798 IMP_CLNO=31 IMP_DEBTINC=37.19944569
IMP_DELINQ=1 IMP_DEROG=0 IMP_MORTDUE=73881 IMP_NINQ=0 IMP_VALUE=98550 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=172
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=392 BAD=0 LOAN=6400 MORTDUE=44968 VALUE=62747 REASON=HomeImp JOB=Other YOJ=0 DEROG=1 DELINQ=. CLAGE=101.39144532 NINQ=. CLNO=12 DEBTINC=36.602947343 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=101.39144532 IMP_CLNO=12 IMP_DEBTINC=36.602947343
IMP_DELINQ=0.4622255303 IMP_DEROG=1 IMP_MORTDUE=44968 IMP_NINQ=1.1569852941 IMP_VALUE=62747 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=188
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=419 BAD=0 LOAN=6600 MORTDUE=. VALUE=48800 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=12.219436152 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=12.219436152 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=48800 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=197
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=423 BAD=0 LOAN=6600 MORTDUE=. VALUE=46516 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=14.845990728 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=14.845990728 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=46516 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=198
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=454 BAD=0 LOAN=6800 MORTDUE=71666 VALUE=99913 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=196.46499893 NINQ=0 CLNO=31 DEBTINC=35.761604731 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=196.46499893 IMP_CLNO=31 IMP_DEBTINC=35.761604731
IMP_DELINQ=1 IMP_DEROG=0 IMP_MORTDUE=71666 IMP_NINQ=0 IMP_VALUE=99913 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=214
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=471 BAD=0 LOAN=7000 MORTDUE=73873 VALUE=111781 REASON=DebtCon JOB=Office YOJ=0 DEROG=0 DELINQ=0 CLAGE=231.79991346 NINQ=0 CLNO=38 DEBTINC=19.273579455 IMP_JOB=Office IMP_REASON=DebtCon IMP_CLAGE=231.79991346 IMP_CLNO=38 IMP_DEBTINC=19.273579455
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73873 IMP_NINQ=0 IMP_VALUE=111781 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=220
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=474 BAD=0 LOAN=7000 MORTDUE=78284 VALUE=98214 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=171.83838617 NINQ=0 CLNO=31 DEBTINC=36.247963031 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=171.83838617 IMP_CLNO=31 IMP_DEBTINC=36.247963031
IMP_DELINQ=1 IMP_DEROG=0 IMP_MORTDUE=78284 IMP_NINQ=0 IMP_VALUE=98214 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=223
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
WARNING: Limit set by ERRORS= option reached.  Further errors of this type will not be printed.
_dataobs_=516 BAD=0 LOAN=7100 MORTDUE=57863 VALUE=70969 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=65.872044812 NINQ=7 CLNO=21 DEBTINC=26.829490191 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=65.872044812 IMP_CLNO=21 IMP_DEBTINC=26.829490191
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=57863 IMP_NINQ=7 IMP_VALUE=70969 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=239
NOTE: The data set EMWS1.BINNING_TRAIN has . observations and 32 variables.
NOTE: There were 2979 observations read from the data set EMWS1.PART_TRAIN.
NOTE: Mathematical operations could not be performed at the following places. The results of the operations have been set to missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      209 at 83566:10
NOTE: There were 2979 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 2979 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
22630      score data=EMWS1.BINNING_VALIDATE out=_NULL_
NOTE: View EMWS1.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.21 seconds
 
22631      outfit=WORK.FIT2
22632      role=VALID
22633      outkey=EMWS1.Neural5_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS1.BINNING_VALIDATE out=_NULL_ outfit=WORK.FIT2 role=VALID outkey=EMWS1.Neural5_OUTKEY;
NOTE: The data set EMWS1.NEURAL5_OUTKEY has 27 observations and 8 variables.
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=93 BAD=0 LOAN=4000 MORTDUE=. VALUE=45760 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=. IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=33.786945547 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=45760 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=48
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=204 BAD=1 LOAN=5100 MORTDUE=15500 VALUE=34000 REASON=DebtCon JOB=Other YOJ=0 DEROG=1 DELINQ=2 CLAGE=86.233333333 NINQ=2 CLNO=13 DEBTINC=. IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=86.233333333 IMP_CLNO=13 IMP_DEBTINC=33.786945547 IMP_DELINQ=2
IMP_DEROG=1 IMP_MORTDUE=15500 IMP_NINQ=2 IMP_VALUE=34000 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=108
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=208 BAD=0 LOAN=5100 MORTDUE=74071 VALUE=97064 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=121.0759726 NINQ=2 CLNO=9 DEBTINC=36.401729548 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=121.0759726 IMP_CLNO=9 IMP_DEBTINC=36.401729548
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=74071 IMP_NINQ=2 IMP_VALUE=97064 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=110
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=217 BAD=1 LOAN=5200 MORTDUE=40564 VALUE=39527 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=157.77103572 NINQ=1 CLNO=13 DEBTINC=72.670433313 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=157.77103572 IMP_CLNO=13 IMP_DEBTINC=72.670433313
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=40564 IMP_NINQ=1 IMP_VALUE=39527 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=112
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=224 BAD=0 LOAN=5300 MORTDUE=75958 VALUE=91703 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=124.1821788 NINQ=1 CLNO=10 DEBTINC=34.599060194 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=124.1821788 IMP_CLNO=10 IMP_DEBTINC=34.599060194
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=75958 IMP_NINQ=1 IMP_VALUE=91703 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=114
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=227 BAD=0 LOAN=5300 MORTDUE=83552 VALUE=96809 REASON=DebtCon JOB=ProfExe YOJ=0 DEROG=. DELINQ=. CLAGE=. NINQ=. CLNO=. DEBTINC=28.423961906 IMP_JOB=ProfExe IMP_REASON=DebtCon IMP_CLAGE=181.15305208 IMP_CLNO=21.277078966 IMP_DEBTINC=28.423961906
IMP_DELINQ=0.4622255303 IMP_DEROG=0.2409592691 IMP_MORTDUE=83552 IMP_NINQ=1.1569852941 IMP_VALUE=96809 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=116
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=274 BAD=0 LOAN=5700 MORTDUE=26927 VALUE=35461 REASON=DebtCon JOB=Other YOJ=0 DEROG=1 DELINQ=0 CLAGE=21.799352154 NINQ=10 CLNO=6 DEBTINC=29.439664242 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=21.799352154 IMP_CLNO=6 IMP_DEBTINC=29.439664242
IMP_DELINQ=0 IMP_DEROG=1 IMP_MORTDUE=26927 IMP_NINQ=10 IMP_VALUE=35461 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=146
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=283 BAD=1 LOAN=5700 MORTDUE=74172 VALUE=79846 REASON=DebtCon JOB=ProfExe YOJ=0 DEROG=0 DELINQ=0 CLAGE=157.00977472 NINQ=0 CLNO=28 DEBTINC=47.415228659 IMP_JOB=ProfExe IMP_REASON=DebtCon IMP_CLAGE=157.00977472 IMP_CLNO=28 IMP_DEBTINC=47.415228659
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=74172 IMP_NINQ=0 IMP_VALUE=79846 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=151
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=330 BAD=0 LOAN=6000 MORTDUE=. VALUE=53190 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=15.174415003 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=15.174415003 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=53190 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=170
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=343 BAD=0 LOAN=6100 MORTDUE=78753 VALUE=95433 REASON=DebtCon JOB=ProfExe YOJ=0 DEROG=. DELINQ=. CLAGE=. NINQ=. CLNO=. DEBTINC=28.925117417 IMP_JOB=ProfExe IMP_REASON=DebtCon IMP_CLAGE=181.15305208 IMP_CLNO=21.277078966 IMP_DEBTINC=28.925117417
IMP_DELINQ=0.4622255303 IMP_DEROG=0.2409592691 IMP_MORTDUE=78753 IMP_NINQ=1.1569852941 IMP_VALUE=95433 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=177
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=344 BAD=0 LOAN=6100 MORTDUE=77265 VALUE=97944 REASON=DebtCon JOB=ProfExe YOJ=0 DEROG=. DELINQ=. CLAGE=. NINQ=. CLNO=. DEBTINC=28.876463055 IMP_JOB=ProfExe IMP_REASON=DebtCon IMP_CLAGE=181.15305208 IMP_CLNO=21.277078966 IMP_DEBTINC=28.876463055
IMP_DELINQ=0.4622255303 IMP_DEROG=0.2409592691 IMP_MORTDUE=77265 IMP_NINQ=1.1569852941 IMP_VALUE=97944 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=178
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=358 BAD=0 LOAN=6200 MORTDUE=75121 VALUE=96462 REASON=DebtCon JOB=ProfExe YOJ=0 DEROG=. DELINQ=. CLAGE=. NINQ=. CLNO=. DEBTINC=27.167655962 IMP_JOB=ProfExe IMP_REASON=DebtCon IMP_CLAGE=181.15305208 IMP_CLNO=21.277078966 IMP_DEBTINC=27.167655962
IMP_DELINQ=0.4622255303 IMP_DEROG=0.2409592691 IMP_MORTDUE=75121 IMP_NINQ=1.1569852941 IMP_VALUE=96462 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=186
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=382 BAD=0 LOAN=6400 MORTDUE=47251 VALUE=58157 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=. CLAGE=104.79246836 NINQ=. CLNO=13 DEBTINC=36.416886965 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=104.79246836 IMP_CLNO=13 IMP_DEBTINC=36.416886965
IMP_DELINQ=0.4622255303 IMP_DEROG=0 IMP_MORTDUE=47251 IMP_NINQ=1.1569852941 IMP_VALUE=58157 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=202
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=402 BAD=0 LOAN=6500 MORTDUE=78741 VALUE=90599 REASON=DebtCon JOB=ProfExe YOJ=0 DEROG=. DELINQ=. CLAGE=. NINQ=. CLNO=. DEBTINC=29.198860669 IMP_JOB=ProfExe IMP_REASON=DebtCon IMP_CLAGE=181.15305208 IMP_CLNO=21.277078966 IMP_DEBTINC=29.198860669
IMP_DELINQ=0.4622255303 IMP_DEROG=0.2409592691 IMP_MORTDUE=78741 IMP_NINQ=1.1569852941 IMP_VALUE=90599 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=211
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=416 BAD=0 LOAN=6500 MORTDUE=58689 VALUE=72557 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=94.00805286 NINQ=2 CLNO=18 DEBTINC=34.898413066 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=94.00805286 IMP_CLNO=18 IMP_DEBTINC=34.898413066
IMP_DELINQ=1 IMP_DEROG=0 IMP_MORTDUE=58689 IMP_NINQ=2 IMP_VALUE=72557 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=220
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=433 BAD=0 LOAN=6700 MORTDUE=69773 VALUE=83014 REASON=HomeImp JOB=Other YOJ=0 DEROG=1 DELINQ=0 CLAGE=263.17343429 NINQ=0 CLNO=5 DEBTINC=37.70699649 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=263.17343429 IMP_CLNO=5 IMP_DEBTINC=37.70699649
IMP_DELINQ=0 IMP_DEROG=1 IMP_MORTDUE=69773 IMP_NINQ=0 IMP_VALUE=83014 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=228
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=435 BAD=0 LOAN=6700 MORTDUE=48430 VALUE=64358 REASON=HomeImp JOB=Other YOJ=0 DEROG=1 DELINQ=. CLAGE=108.35174747 NINQ=. CLNO=13 DEBTINC=38.894194746 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=108.35174747 IMP_CLNO=13 IMP_DEBTINC=38.894194746
IMP_DELINQ=0.4622255303 IMP_DEROG=1 IMP_MORTDUE=48430 IMP_NINQ=1.1569852941 IMP_VALUE=64358 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=229
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=517 BAD=0 LOAN=7100 MORTDUE=64850 VALUE=76985 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=108.21718977 NINQ=0 CLNO=7 DEBTINC=36.337557557 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=108.21718977 IMP_CLNO=7 IMP_DEBTINC=36.337557557
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=64850 IMP_NINQ=0 IMP_VALUE=76985 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=278
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=533 BAD=0 LOAN=7200 MORTDUE=22832 VALUE=31666 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=38.003266851 NINQ=9 CLNO=7 DEBTINC=28.295681117 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=38.003266851 IMP_CLNO=7 IMP_DEBTINC=28.295681117
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=22832 IMP_NINQ=9 IMP_VALUE=31666 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=286
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
WARNING: Limit set by ERRORS= option reached.  Further errors of this type will not be printed.
_dataobs_=556 BAD=1 LOAN=7400 MORTDUE=71576 VALUE=89068 REASON=DebtCon JOB=Sales YOJ=0 DEROG=0 DELINQ=0 CLAGE=94.782230694 NINQ=0 CLNO=17 DEBTINC=42.803421995 IMP_JOB=Sales IMP_REASON=DebtCon IMP_CLAGE=94.782230694 IMP_CLNO=17 IMP_DEBTINC=42.803421995
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=71576 IMP_NINQ=0 IMP_VALUE=89068 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=297
NOTE: The data set EMWS1.BINNING_VALIDATE has . observations and 32 variables.
NOTE: There were 2981 observations read from the data set EMWS1.PART_VALIDATE.
NOTE: Mathematical operations could not be performed at the following places. The results of the operations have been set to missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      206 at 83588:10
NOTE: There were 2981 observations read from the data set EMWS1.IMPT_VALIDATE.
NOTE: There were 2981 observations read from the data set EMWS1.TRANS_VALIDATE.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
22634      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_NEURAL5 has 2979 observations and 5 variables.
NOTE: The data set EMWS1.BINNING_VALIDATE has . observations and 32 variables.
NOTE: There were 2981 observations read from the data set EMWS1.PART_VALIDATE.
NOTE: Mathematical operations could not be performed at the following places. The results of the operations have been set to missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      206 at 83588:10
NOTE: There were 2981 observations read from the data set EMWS1.IMPT_VALIDATE.
NOTE: View EMWS1.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.90 seconds
      cpu time            0.87 seconds
 
NOTE: There were 2981 observations read from the data set EMWS1.TRANS_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.95 seconds
      cpu time            0.92 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
22635      quit;
22636      data EMWS1.Neural5_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_OUTFIT;
22637      merge WORK.FIT1 WORK.FIT2;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2;
22638      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: The data set EMWS1.NEURAL5_OUTFIT has 2 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22639      data EMWS1.Neural5_EMESTIMATE;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_EMESTIMATE;
22640      set EMWS1.Neural5_outest;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_outest;
22641      if _type_ ^in('HESSIAN' 'GRAD');
MPRINT(EM_DIAGRAM):   if _type_ ^in('HESSIAN' 'GRAD');
22642      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 114 observations read from the data set EMWS1.NEURAL5_OUTEST.
NOTE: The data set EMWS1.NEURAL5_EMESTIMATE has 52 observations and 76 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22643      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
22644      delete EM_Neural5;
MPRINT(EM_DIAGRAM):   delete EM_Neural5;
22645      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_NEURAL5 (memtype=DATA).
22646      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
22647      data EMWS1.Neural5_PLOTDS(where=(_iter_ ne . and _NAME_="OVERALL"));
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_PLOTDS(where=(_iter_ ne . and _NAME_="OVERALL"));
22648      set fit_Neural5;
MPRINT(EM_DIAGRAM):   set fit_Neural5;
22649      attrib _ITER_ label="%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   attrib _ITER_ label="Training Iterations";
22650      attrib _NAME_ label="%sysfunc(sasmsg(sashelp.dmine, rpt_varsel_label_name  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   attrib _NAME_ label="Name";
22651      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK.FIT_NEURAL5.
NOTE: The data set EMWS1.NEURAL5_PLOTDS has 52 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
22652      proc sort data=EMWS1.Neural5_PLOTDS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural5_PLOTDS;
22653      by _ITER_;
MPRINT(EM_DIAGRAM):   by _ITER_;
22654      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS1.NEURAL5_PLOTDS.
NOTE: The data set EMWS1.NEURAL5_PLOTDS has 52 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22655      data tempweight (drop= _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_ _averr_ _p_num_ where=(_type_ eq "PARMS" and _iter_ eq 1) );
MPRINT(EM_DIAGRAM):    data tempweight (drop= _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_ _averr_ _p_num_ where=(_type_ eq "PARMS" and _iter_ eq 1) );
22656      set EMWS1.Neural5_EMESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMESTIMATE;
22657      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS1.NEURAL5_EMESTIMATE.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 68 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22658      proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
22659      by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
22660      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 68 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22661      proc transpose data=tempweight out=EMWS1.Neural5_WEIGHTDS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight out=EMWS1.Neural5_WEIGHTDS;
22662      by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
22663      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS1.NEURAL5_WEIGHTDS has 66 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
22664      data EMWS1.Neural5_WEIGHTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_WEIGHTDS;
22665      set EMWS1.Neural5_WEIGHTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_WEIGHTDS;
22666      FROM = trim(left(scan(_LABEL_, 1, '->')));
MPRINT(EM_DIAGRAM):   FROM = trim(left(scan(_LABEL_, 1, '->')));
22667      TO = trim(left(scan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = trim(left(scan(_LABEL_, 2, '>')));
22668      WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
22669      if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
22670      label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  , NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  , NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  , NOQUOTE))" WEIGHT =
22671         "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT = "Weight";
22672      keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
22673      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 66 observations read from the data set EMWS1.NEURAL5_WEIGHTDS.
NOTE: The data set EMWS1.NEURAL5_WEIGHTDS has 61 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
22674      proc sort data=EMWS1.Neural5_WEIGHTDS nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural5_WEIGHTDS nodupkey;
22675      by _LABEL_;
MPRINT(EM_DIAGRAM):   by _LABEL_;
22676      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 61 observations read from the data set EMWS1.NEURAL5_WEIGHTDS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS1.NEURAL5_WEIGHTDS has 61 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 04, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "07:50:37" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                November 04, 2015
Time:                07:50:37
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1555QEF "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1555QEF new;
MPRINT(EM_DIAGRAM):   run;
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
22778      data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
22779      set EMWS1.Neural5_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_OUTKEY;
22780      if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
22781      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS1.NEURAL5_OUTKEY.
NOTE: The data set WORK.OUTKEY has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22782      filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural5: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22783      *------------------------------------------------------------*;
22784      * Neural5: Scoring DATA data;
22785      *------------------------------------------------------------*;
22786      data EMWS1.Neural5_TRAIN
22787      / view=EMWS1.Neural5_TRAIN
22788      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_TRAIN / view=EMWS1.Neural5_TRAIN ;
22789      set EMWS1.BINNING_TRAIN
22790      ;
MPRINT(EM_DIAGRAM):   set EMWS1.BINNING_TRAIN ;
22791      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas.
22792     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
22793     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
22794     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
22795     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
22796     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
22797     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
22798     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
22799     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
22800     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
22801     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
22802     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
22803     +LENGTH _WARN_ $4
22804     +      F_BAD  $ 12
22805     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_BAD $ 12 ;
22806     +      label GRP_IMP_CLAGE2 = 'Dummy: GRP_IMP_CLAGE=2' ;
MPRINT(EM_DIAGRAM):   label GRP_IMP_CLAGE2 = 'Dummy: GRP_IMP_CLAGE=2' ;
22807     +
22808     +      label GRP_IMP_CLAGE3 = 'Dummy: GRP_IMP_CLAGE=3' ;
MPRINT(EM_DIAGRAM):   label GRP_IMP_CLAGE3 = 'Dummy: GRP_IMP_CLAGE=3' ;
22809     +
22810     +      label GRP_IMP_CLAGE4 = 'Dummy: GRP_IMP_CLAGE=4' ;
MPRINT(EM_DIAGRAM):   label GRP_IMP_CLAGE4 = 'Dummy: GRP_IMP_CLAGE=4' ;
22811     +
22812     +      label GRP_IMP_DEBTINC2 = 'Dummy: GRP_IMP_DEBTINC=2' ;
MPRINT(EM_DIAGRAM):   label GRP_IMP_DEBTINC2 = 'Dummy: GRP_IMP_DEBTINC=2' ;
22813     +
22814     +      label GRP_IMP_DEBTINC3 = 'Dummy: GRP_IMP_DEBTINC=3' ;
MPRINT(EM_DIAGRAM):   label GRP_IMP_DEBTINC3 = 'Dummy: GRP_IMP_DEBTINC=3' ;
22815     +
22816     +      label GRP_IMP_DEBTINC4 = 'Dummy: GRP_IMP_DEBTINC=4' ;
MPRINT(EM_DIAGRAM):   label GRP_IMP_DEBTINC4 = 'Dummy: GRP_IMP_DEBTINC=4' ;
22817     +
22818     +      label GRP_IMP_NINQ1 = 'Dummy: GRP_IMP_NINQ=1' ;
MPRINT(EM_DIAGRAM):   label GRP_IMP_NINQ1 = 'Dummy: GRP_IMP_NINQ=1' ;
22819     +
22820     +      label GRP_IMP_NINQ2 = 'Dummy: GRP_IMP_NINQ=2' ;
MPRINT(EM_DIAGRAM):   label GRP_IMP_NINQ2 = 'Dummy: GRP_IMP_NINQ=2' ;
22821     +
22822     +      label GRP_IMP_NINQ3 = 'Dummy: GRP_IMP_NINQ=3' ;
MPRINT(EM_DIAGRAM):   label GRP_IMP_NINQ3 = 'Dummy: GRP_IMP_NINQ=3' ;
22823     +
22824     +      label GRP_INDELINQ3 = 'Dummy: GRP_INDELINQ=3' ;
MPRINT(EM_DIAGRAM):   label GRP_INDELINQ3 = 'Dummy: GRP_INDELINQ=3' ;
22825     +
22826     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
22827     +
22828     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
22829     +
22830     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
22831     +
22832     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
22833     +
22834     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
22835     +
22836     +      label I_BAD = 'Into: BAD' ;
MPRINT(EM_DIAGRAM):   label I_BAD = 'Into: BAD' ;
22837     +
22838     +      label F_BAD = 'From: BAD' ;
MPRINT(EM_DIAGRAM):   label F_BAD = 'From: BAD' ;
22839     +
22840     +      label U_BAD = 'Unnormalized Into: BAD' ;
MPRINT(EM_DIAGRAM):   label U_BAD = 'Unnormalized Into: BAD' ;
22841     +
22842     +      label P_BAD1 = 'Predicted: BAD=1' ;
MPRINT(EM_DIAGRAM):   label P_BAD1 = 'Predicted: BAD=1' ;
22843     +
22844     +      label R_BAD1 = 'Residual: BAD=1' ;
MPRINT(EM_DIAGRAM):   label R_BAD1 = 'Residual: BAD=1' ;
22845     +
22846     +      label P_BAD0 = 'Predicted: BAD=0' ;
MPRINT(EM_DIAGRAM):   label P_BAD0 = 'Predicted: BAD=0' ;
22847     +
22848     +      label R_BAD0 = 'Residual: BAD=0' ;
MPRINT(EM_DIAGRAM):   label R_BAD0 = 'Residual: BAD=0' ;
22849     +
22850     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
22851     +
22852     +*** Generate dummy variables for GRP_IMP_CLAGE ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_IMP_CLAGE ;
22853     +drop GRP_IMP_CLAGE2 GRP_IMP_CLAGE3 GRP_IMP_CLAGE4 ;
MPRINT(EM_DIAGRAM):   drop GRP_IMP_CLAGE2 GRP_IMP_CLAGE3 GRP_IMP_CLAGE4 ;
22854     +if missing( GRP_IMP_CLAGE ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_IMP_CLAGE ) then do;
22855     +   GRP_IMP_CLAGE2 = .;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE2 = .;
22856     +   GRP_IMP_CLAGE3 = .;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE3 = .;
22857     +   GRP_IMP_CLAGE4 = .;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE4 = .;
22858     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22859     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22860     +end;
MPRINT(EM_DIAGRAM):   end;
22861     +else do;
MPRINT(EM_DIAGRAM):   else do;
22862     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
22863     +   _dm12 = put( GRP_IMP_CLAGE , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_IMP_CLAGE , BEST12. );
22864     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   end;
22865     +   if _dm12 = '3'  then do;
22866     +      GRP_IMP_CLAGE2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
22867     +      GRP_IMP_CLAGE3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE2 = 0.63245553203367;
22868     +      GRP_IMP_CLAGE4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE3 = 0.63245553203367;
22869     +   end;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE4 = 0.63245553203367;
22870     +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   end;
22871     +      GRP_IMP_CLAGE2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
22872     +      GRP_IMP_CLAGE3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE2 = -0.63245553203367;
22873     +      GRP_IMP_CLAGE4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE3 = -0.63245553203367;
22874     +   end;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE4 = -0.63245553203367;
22875     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   end;
22876     +      GRP_IMP_CLAGE2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
22877     +      GRP_IMP_CLAGE3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE2 = 0.63245553203367;
22878     +      GRP_IMP_CLAGE4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE3 = 0.63245553203367;
22879     +   end;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE4 = -0.63245553203367;
22880     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   end;
22881     +      GRP_IMP_CLAGE2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   else do;
22882     +      GRP_IMP_CLAGE3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE2 = .;
22883     +      GRP_IMP_CLAGE4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE3 = .;
22884     +   end;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE4 = .;
22885     +   else do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22886     +      GRP_IMP_CLAGE2 = .;
MPRINT(EM_DIAGRAM):   end;
22887     +      GRP_IMP_CLAGE3 = .;
MPRINT(EM_DIAGRAM):   end;
22888     +      GRP_IMP_CLAGE4 = .;
22889     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_IMP_DEBTINC ;
22890     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop GRP_IMP_DEBTINC2 GRP_IMP_DEBTINC3 GRP_IMP_DEBTINC4 ;
22891     +   end;
MPRINT(EM_DIAGRAM):   if missing( GRP_IMP_DEBTINC ) then do;
22892     +end;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC2 = .;
22893     +
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC3 = .;
22894     +*** Generate dummy variables for GRP_IMP_DEBTINC ;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC4 = .;
22895     +drop GRP_IMP_DEBTINC2 GRP_IMP_DEBTINC3 GRP_IMP_DEBTINC4 ;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22896     +if missing( GRP_IMP_DEBTINC ) then do;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22897     +   GRP_IMP_DEBTINC2 = .;
MPRINT(EM_DIAGRAM):   end;
22898     +   GRP_IMP_DEBTINC3 = .;
22899     +   GRP_IMP_DEBTINC4 = .;
MPRINT(EM_DIAGRAM):   else do;
22900     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
22901     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
22902     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_IMP_DEBTINC , BEST12. );
22903     +else do;
22904     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
22905     +   _dm12 = put( GRP_IMP_DEBTINC , BEST12. );
22906     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   end;
22907     +   if _dm12 = '3'  then do;
22908     +      GRP_IMP_DEBTINC2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
22909     +      GRP_IMP_DEBTINC3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC2 = -0.63245553203367;
22910     +      GRP_IMP_DEBTINC4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC3 = -0.63245553203367;
22911     +   end;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC4 = -0.63245553203367;
22912     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   end;
22913     +      GRP_IMP_DEBTINC2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
22914     +      GRP_IMP_DEBTINC3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC2 = 0.63245553203367;
22915     +      GRP_IMP_DEBTINC4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC3 = 0.63245553203367;
22916     +   end;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC4 = 0.63245553203367;
22917     +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   end;
22918     +      GRP_IMP_DEBTINC2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
22919     +      GRP_IMP_DEBTINC3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC2 = 0.63245553203367;
22920     +      GRP_IMP_DEBTINC4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC3 = 0.63245553203367;
22921     +   end;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC4 = -0.63245553203367;
22922     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   end;
22923     +      GRP_IMP_DEBTINC2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   else do;
22924     +      GRP_IMP_DEBTINC3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC2 = .;
22925     +      GRP_IMP_DEBTINC4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC3 = .;
22926     +   end;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC4 = .;
22927     +   else do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22928     +      GRP_IMP_DEBTINC2 = .;
MPRINT(EM_DIAGRAM):   end;
22929     +      GRP_IMP_DEBTINC3 = .;
MPRINT(EM_DIAGRAM):   end;
22930     +      GRP_IMP_DEBTINC4 = .;
22931     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_IMP_NINQ ;
22932     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop GRP_IMP_NINQ1 GRP_IMP_NINQ2 GRP_IMP_NINQ3 ;
22933     +   end;
MPRINT(EM_DIAGRAM):   if missing( GRP_IMP_NINQ ) then do;
22934     +end;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ1 = .;
22935     +
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ2 = .;
22936     +*** Generate dummy variables for GRP_IMP_NINQ ;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ3 = .;
22937     +drop GRP_IMP_NINQ1 GRP_IMP_NINQ2 GRP_IMP_NINQ3 ;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22938     +if missing( GRP_IMP_NINQ ) then do;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22939     +   GRP_IMP_NINQ1 = .;
MPRINT(EM_DIAGRAM):   end;
22940     +   GRP_IMP_NINQ2 = .;
22941     +   GRP_IMP_NINQ3 = .;
MPRINT(EM_DIAGRAM):   else do;
22942     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
22943     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
22944     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_IMP_NINQ , BEST12. );
22945     +else do;
22946     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
22947     +   _dm12 = put( GRP_IMP_NINQ , BEST12. );
22948     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ1 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   end;
22949     +   if _dm12 = '1'  then do;
22950     +      GRP_IMP_NINQ1 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
22951     +      GRP_IMP_NINQ2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ1 = 0.63245553203367;
22952     +      GRP_IMP_NINQ3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ2 = -0.63245553203367;
22953     +   end;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ3 = -0.63245553203367;
22954     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   end;
22955     +      GRP_IMP_NINQ1 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
22956     +      GRP_IMP_NINQ2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ1 = 0.63245553203367;
22957     +      GRP_IMP_NINQ3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ2 = 0.63245553203367;
22958     +   end;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ3 = 0.63245553203367;
22959     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   end;
22960     +      GRP_IMP_NINQ1 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
22961     +      GRP_IMP_NINQ2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ1 = 0.63245553203367;
22962     +      GRP_IMP_NINQ3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ2 = 0.63245553203367;
22963     +   end;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ3 = -0.63245553203367;
22964     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   end;
22965     +      GRP_IMP_NINQ1 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   else do;
22966     +      GRP_IMP_NINQ2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ1 = .;
22967     +      GRP_IMP_NINQ3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ2 = .;
22968     +   end;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ3 = .;
22969     +   else do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22970     +      GRP_IMP_NINQ1 = .;
MPRINT(EM_DIAGRAM):   end;
22971     +      GRP_IMP_NINQ2 = .;
MPRINT(EM_DIAGRAM):   end;
22972     +      GRP_IMP_NINQ3 = .;
22973     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_INDELINQ ;
22974     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop GRP_INDELINQ3 ;
22975     +   end;
MPRINT(EM_DIAGRAM):   if missing( GRP_INDELINQ ) then do;
22976     +end;
MPRINT(EM_DIAGRAM):   GRP_INDELINQ3 = .;
22977     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22978     +*** Generate dummy variables for GRP_INDELINQ ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22979     +drop GRP_INDELINQ3 ;
MPRINT(EM_DIAGRAM):   end;
22980     +if missing( GRP_INDELINQ ) then do;
22981     +   GRP_INDELINQ3 = .;
MPRINT(EM_DIAGRAM):   else do;
22982     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
22983     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
22984     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_INDELINQ , BEST12. );
22985     +else do;
22986     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
22987     +   _dm12 = put( GRP_INDELINQ , BEST12. );
22988     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   GRP_INDELINQ3 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
22989     +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   GRP_INDELINQ3 = 1;
22990     +      GRP_INDELINQ3 = -1;
MPRINT(EM_DIAGRAM):   end;
22991     +   end;
22992     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   GRP_INDELINQ3 = .;
22993     +      GRP_INDELINQ3 = 1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22994     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22995     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22996     +      GRP_INDELINQ3 = .;
MPRINT(EM_DIAGRAM):   *** *************************;
22997     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Writing the Node ord ;
22998     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   *** *************************;
22999     +   end;
MPRINT(EM_DIAGRAM):   *** *************************;
23000     +end;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
23001     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23002     +*** Writing the Node ord ;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
23003     +*** *************************;
23004     +*** *************************;
23005     +*** Writing the Node H1 ;
23006     +*** *************************;
23007     +IF _DM_BAD EQ 0 THEN DO;
23008     +   H11  =     0.84162425217187 * GRP_IMP_CLAGE2  +     0.91394613895235 *
23009     +        GRP_IMP_CLAGE3  +     0.91372436571234 * GRP_IMP_CLAGE4
MPRINT(EM_DIAGRAM):   H11 = 0.84162425217187 * GRP_IMP_CLAGE2 + 0.91394613895235 * GRP_IMP_CLAGE3 + 0.91372436571234 * GRP_IMP_CLAGE4 + 1.21199529798407 * GRP_IMP_DEBTINC2 + 0.10023735854587 * GRP_IMP_DEBTINC3 + 1.0000000827403E-10 * GRP_IMP_DEBTINC4 +
0.4030166160329 * GRP_IMP_NINQ1 + 0.34466117671511 * GRP_IMP_NINQ2 + 9.9999994396249E-11 * GRP_IMP_NINQ3 + 1.0000000827403E-10 * GRP_INDELINQ3 ;
23010     +          +     1.21199529798407 * GRP_IMP_DEBTINC2  +     0.10023735854587 *
23011     +        GRP_IMP_DEBTINC3  +  1.0000000827403E-10 * GRP_IMP_DEBTINC4
23012     +          +      0.4030166160329 * GRP_IMP_NINQ1  +     0.34466117671511 *
23013     +        GRP_IMP_NINQ2  +  9.9999994396249E-11 * GRP_IMP_NINQ3
23014     +          +  1.0000000827403E-10 * GRP_INDELINQ3 ;
23015     +   H12  =     0.44318412836719 * GRP_IMP_CLAGE2  +     2.04152352764679 *
23016     +        GRP_IMP_CLAGE3  +  1.0000000827403E-10 * GRP_IMP_CLAGE4
MPRINT(EM_DIAGRAM):   H12 = 0.44318412836719 * GRP_IMP_CLAGE2 + 2.04152352764679 * GRP_IMP_CLAGE3 + 1.0000000827403E-10 * GRP_IMP_CLAGE4 + 1.86395164971817 * GRP_IMP_DEBTINC2 + 1.0000000827403E-10 * GRP_IMP_DEBTINC3 + 9.9999994396249E-11 *
GRP_IMP_DEBTINC4 + 0.32412764649444 * GRP_IMP_NINQ1 + 0.19578732841955 * GRP_IMP_NINQ2 + 0.92053217056657 * GRP_IMP_NINQ3 + 1.0000000133514E-10 * GRP_INDELINQ3 ;
23017     +          +     1.86395164971817 * GRP_IMP_DEBTINC2  +  1.0000000827403E-10 *
23018     +        GRP_IMP_DEBTINC3  +  9.9999994396249E-11 * GRP_IMP_DEBTINC4
23019     +          +     0.32412764649444 * GRP_IMP_NINQ1  +     0.19578732841955 *
23020     +        GRP_IMP_NINQ2  +     0.92053217056657 * GRP_IMP_NINQ3
23021     +          +  1.0000000133514E-10 * GRP_INDELINQ3 ;
23022     +   H13  =     0.28161058010309 * GRP_IMP_CLAGE2  +     0.89606737229768 *
23023     +        GRP_IMP_CLAGE3  +  1.0000000827403E-10 * GRP_IMP_CLAGE4
MPRINT(EM_DIAGRAM):   H13 = 0.28161058010309 * GRP_IMP_CLAGE2 + 0.89606737229768 * GRP_IMP_CLAGE3 + 1.0000000827403E-10 * GRP_IMP_CLAGE4 + 1.44402290031604 * GRP_IMP_DEBTINC2 + 1.0000000133514E-10 * GRP_IMP_DEBTINC3 + 0.40839697317136 * GRP_IMP_DEBTINC4 +
1.0000000827403E-10 * GRP_IMP_NINQ1 + 0.65521944084878 * GRP_IMP_NINQ2 + 1.0000000133514E-10 * GRP_IMP_NINQ3 + 1.52717150748592 * GRP_INDELINQ3 ;
23024     +          +     1.44402290031604 * GRP_IMP_DEBTINC2  +  1.0000000133514E-10 *
23025     +        GRP_IMP_DEBTINC3  +     0.40839697317136 * GRP_IMP_DEBTINC4
23026     +          +  1.0000000827403E-10 * GRP_IMP_NINQ1  +     0.65521944084878 *
23027     +        GRP_IMP_NINQ2  +  1.0000000133514E-10 * GRP_IMP_NINQ3
23028     +          +     1.52717150748592 * GRP_INDELINQ3 ;
23029     +   H14  =  1.0000000133514E-10 * GRP_IMP_CLAGE2  +     0.42156928311284 *
23030     +        GRP_IMP_CLAGE3  +     0.20105839863856 * GRP_IMP_CLAGE4
MPRINT(EM_DIAGRAM):   H14 = 1.0000000133514E-10 * GRP_IMP_CLAGE2 + 0.42156928311284 * GRP_IMP_CLAGE3 + 0.20105839863856 * GRP_IMP_CLAGE4 + 0.31105435980584 * GRP_IMP_DEBTINC2 + 0.50830792932042 * GRP_IMP_DEBTINC3 + 1.0000000827403E-10 * GRP_IMP_DEBTINC4 +
0.04419961855017 * GRP_IMP_NINQ1 + 0.02908901113418 * GRP_IMP_NINQ2 + 0.07418371374931 * GRP_IMP_NINQ3 + 0.0380118013461 * GRP_INDELINQ3 ;
23031     +          +     0.31105435980584 * GRP_IMP_DEBTINC2  +     0.50830792932042 *
23032     +        GRP_IMP_DEBTINC3  +  1.0000000827403E-10 * GRP_IMP_DEBTINC4
23033     +          +     0.04419961855017 * GRP_IMP_NINQ1  +     0.02908901113418 *
23034     +        GRP_IMP_NINQ2  +     0.07418371374931 * GRP_IMP_NINQ3
23035     +          +      0.0380118013461 * GRP_INDELINQ3 ;
23036     +   H15  =  1.0000000133514E-10 * GRP_IMP_CLAGE2  +  9.9999994396249E-11 *
23037     +        GRP_IMP_CLAGE3  +     0.61981433688837 * GRP_IMP_CLAGE4
MPRINT(EM_DIAGRAM):   H15 = 1.0000000133514E-10 * GRP_IMP_CLAGE2 + 9.9999994396249E-11 * GRP_IMP_CLAGE3 + 0.61981433688837 * GRP_IMP_CLAGE4 + 1.3235985600726 * GRP_IMP_DEBTINC2 + 1.0000000827403E-10 * GRP_IMP_DEBTINC3 + 0.63969853377089 * GRP_IMP_DEBTINC4
+ 9.9999994396249E-11 * GRP_IMP_NINQ1 + 0.43670668517942 * GRP_IMP_NINQ2 + 0.12517306001487 * GRP_IMP_NINQ3 + 0.4202953626148 * GRP_INDELINQ3 ;
23038     +          +      1.3235985600726 * GRP_IMP_DEBTINC2  +  1.0000000827403E-10 *
MPRINT(EM_DIAGRAM):   H11 = 1.27322598653348 + H11 ;
23039     +        GRP_IMP_DEBTINC3  +     0.63969853377089 * GRP_IMP_DEBTINC4
MPRINT(EM_DIAGRAM):   H12 = 1.00173288370604 + H12 ;
23040     +          +  9.9999994396249E-11 * GRP_IMP_NINQ1  +     0.43670668517942 *
MPRINT(EM_DIAGRAM):   H13 = -2.19477141796525 + H13 ;
23041     +        GRP_IMP_NINQ2  +     0.12517306001487 * GRP_IMP_NINQ3
MPRINT(EM_DIAGRAM):   H14 = -0.41073547330617 + H14 ;
23042     +          +      0.4202953626148 * GRP_INDELINQ3 ;
MPRINT(EM_DIAGRAM):   H15 = 1.52044566991639 + H15 ;
23043     +   H11  =     1.27322598653348 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
23044     +   H12  =     1.00173288370604 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
23045     +   H13  =    -2.19477141796525 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
23046     +   H14  =    -0.41073547330617 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
23047     +   H15  =     1.52044566991639 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
23048     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   END;
23049     +   H12  = TANH(H12 );
23050     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   ELSE DO;
23051     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H11 = .;
23052     +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H12 = .;
23053     +END;
MPRINT(EM_DIAGRAM):   H13 = .;
23054     +ELSE DO;
MPRINT(EM_DIAGRAM):   H14 = .;
MPRINT(EM_DIAGRAM):   H15 = .;
23055     +   H11  = .;
MPRINT(EM_DIAGRAM):   END;
23056     +   H12  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
23057     +   H13  = .;
MPRINT(EM_DIAGRAM):   *** Writing the Node BAD ;
23058     +   H14  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
23059     +   H15  = .;
23060     +END;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for BAD ;
23061     +*** *************************;
MPRINT(EM_DIAGRAM):   drop BAD1 BAD0 ;
23062     +*** Writing the Node BAD ;
MPRINT(EM_DIAGRAM):   label F_BAD = 'From: BAD' ;
23063     +*** *************************;
23064     +
MPRINT(EM_DIAGRAM):   length F_BAD $ 12;
23065     +*** Generate dummy variables for BAD ;
23066     +drop BAD1 BAD0 ;
MPRINT(EM_DIAGRAM):   F_BAD = put( BAD , BEST12. );
23067     +label F_BAD = 'From: BAD' ;
23068     +length F_BAD $ 12;
MPRINT(DMNORMIP):   call dmnorm(F_BAD,
23069     +F_BAD = put( BAD , BEST12. );
23070     +%DMNORMIP( F_BAD )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if missing( BAD ) then do;
MPRINT(EM_DIAGRAM):   BAD1 = .;
MPRINT(EM_DIAGRAM):   BAD0 = .;
MPRINT(EM_DIAGRAM):   end;
23071     +if missing( BAD ) then do;
MPRINT(EM_DIAGRAM):   else do;
23072     +   BAD1 = .;
MPRINT(EM_DIAGRAM):   if F_BAD = '0' then do;
23073     +   BAD0 = .;
MPRINT(EM_DIAGRAM):   BAD1 = 0;
23074     +end;
MPRINT(EM_DIAGRAM):   BAD0 = 1;
23075     +else do;
MPRINT(EM_DIAGRAM):   end;
23076     +   if F_BAD = '0'  then do;
MPRINT(EM_DIAGRAM):   else if F_BAD = '1' then do;
23077     +      BAD1 = 0;
MPRINT(EM_DIAGRAM):   BAD1 = 1;
23078     +      BAD0 = 1;
MPRINT(EM_DIAGRAM):   BAD0 = 0;
23079     +   end;
MPRINT(EM_DIAGRAM):   end;
23080     +   else if F_BAD = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
23081     +      BAD1 = 1;
MPRINT(EM_DIAGRAM):   BAD1 = .;
23082     +      BAD0 = 0;
MPRINT(EM_DIAGRAM):   BAD0 = .;
23083     +   end;
MPRINT(EM_DIAGRAM):   end;
23084     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
23085     +      BAD1 = .;
23086     +      BAD0 = .;
23087     +   end;
MPRINT(EM_DIAGRAM):   P_BAD1 = -2.64403957786331 * H11 + 2.41620588643142 * H12 + 1.12237375231097 * H13 + -3.79942630995982 * H14 + 2.96546954408798 * H15 ;
23088     +end;
MPRINT(EM_DIAGRAM):   P_BAD1 = -3.74774044260044 + P_BAD1 ;
23089     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_BAD0 = 0;
23090     +   P_BAD1  =    -2.64403957786331 * H11  +     2.41620588643142 * H12
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_BAD1 , P_BAD0 );
23091     +          +     1.12237375231097 * H13  +    -3.79942630995982 * H14
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
23092     +          +     2.96546954408798 * H15 ;
MPRINT(EM_DIAGRAM):   P_BAD1 = EXP(P_BAD1 - _MAX_);
23093     +   P_BAD1  =    -3.74774044260044 + P_BAD1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_BAD1 ;
23094     +   P_BAD0  = 0;
MPRINT(EM_DIAGRAM):   P_BAD0 = EXP(P_BAD0 - _MAX_);
23095     +   _MAX_ = MAX (P_BAD1 , P_BAD0 );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_BAD0 ;
23096     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_BAD1 = P_BAD1 / _SUM_;
23097     +   P_BAD1  = EXP(P_BAD1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_BAD0 = P_BAD0 / _SUM_;
23098     +   _SUM_ = _SUM_ + P_BAD1 ;
MPRINT(EM_DIAGRAM):   END;
23099     +   P_BAD0  = EXP(P_BAD0  - _MAX_);
23100     +   _SUM_ = _SUM_ + P_BAD0 ;
MPRINT(EM_DIAGRAM):   ELSE DO;
23101     +   P_BAD1  = P_BAD1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_BAD1 = .;
23102     +   P_BAD0  = P_BAD0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_BAD0 = .;
23103     +END;
MPRINT(EM_DIAGRAM):   END;
23104     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_BAD1 = 0.19939577039274;
23105     +   P_BAD1  = .;
MPRINT(EM_DIAGRAM):   P_BAD0 = 0.80060422960725;
23106     +   P_BAD0  = .;
MPRINT(EM_DIAGRAM):   END;
23107     +END;
MPRINT(EM_DIAGRAM):   *** *****************************;
23108     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node BAD ;
23109     +   P_BAD1  =     0.19939577039274;
MPRINT(EM_DIAGRAM):   *** ******************************;
23110     +   P_BAD0  =     0.80060422960725;
MPRINT(EM_DIAGRAM):   IF MISSING( BAD1 ) THEN R_BAD1 = . ;
23111     +END;
23112     +*** *****************************;
MPRINT(EM_DIAGRAM):   ELSE R_BAD1 = BAD1 - P_BAD1 ;
23113     +*** Writing the Residuals  of the Node BAD ;
MPRINT(EM_DIAGRAM):   IF MISSING( BAD0 ) THEN R_BAD0 = . ;
23114     +*** ******************************;
23115     +IF MISSING( BAD1 ) THEN R_BAD1  = . ;
MPRINT(EM_DIAGRAM):   ELSE R_BAD0 = BAD0 - P_BAD0 ;
23116     +ELSE R_BAD1  = BAD1  - P_BAD1 ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_BAD AND U_BAD ;
23117     +IF MISSING( BAD0 ) THEN R_BAD0  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
23118     +ELSE R_BAD0  = BAD0  - P_BAD0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_BAD1 ;
MPRINT(EM_DIAGRAM):   I_BAD = "1           " ;
23119     +*** *************************;
MPRINT(EM_DIAGRAM):   U_BAD = 1;
23120     +*** Writing the I_BAD  AND U_BAD ;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_BAD0 ) THEN DO;
23121     +*** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_BAD0 ;
23122     +_MAXP_ = P_BAD1 ;
MPRINT(EM_DIAGRAM):   I_BAD = "0           " ;
23123     +I_BAD  = "1           " ;
MPRINT(EM_DIAGRAM):   U_BAD = 0;
23124     +U_BAD  =                    1;
MPRINT(EM_DIAGRAM):   END;
23125     +IF( _MAXP_ LT P_BAD0  ) THEN DO;
MPRINT(EM_DIAGRAM):   ********************************;
23126     +   _MAXP_ = P_BAD0 ;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
23127     +   I_BAD  = "0           " ;
MPRINT(EM_DIAGRAM):   ********************************;
23128     +   U_BAD  =                    0;
23129     +END;
23130     +********************************;
23131     +*** End Scoring Code for Neural;
23132     +********************************;
23133     +drop
23134     +H11
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
23135     +H12
23136     +H13
23137     +H14
23138     +H15
23139     +;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
23140      run;
 
NOTE: DATA STEP view saved on file EMWS1.NEURAL5_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
23141      quit;
23142      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
23143      filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural5: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23144      *------------------------------------------------------------*;
23145      * Neural5: Scoring VALIDATE data;
23146      *------------------------------------------------------------*;
23147      data EMWS1.Neural5_VALIDATE
23148      / view=EMWS1.Neural5_VALIDATE
23149      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_VALIDATE / view=EMWS1.Neural5_VALIDATE ;
23150      set EMWS1.BINNING_VALIDATE
23151      ;
MPRINT(EM_DIAGRAM):   set EMWS1.BINNING_VALIDATE ;
23152      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas.
23153     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
23154     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
23155     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
23156     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
23157     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
23158     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
23159     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
23160     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
23161     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
23162     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
23163     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
23164     +LENGTH _WARN_ $4
23165     +      F_BAD  $ 12
23166     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_BAD $ 12 ;
23167     +      label GRP_IMP_CLAGE2 = 'Dummy: GRP_IMP_CLAGE=2' ;
MPRINT(EM_DIAGRAM):   label GRP_IMP_CLAGE2 = 'Dummy: GRP_IMP_CLAGE=2' ;
23168     +
23169     +      label GRP_IMP_CLAGE3 = 'Dummy: GRP_IMP_CLAGE=3' ;
MPRINT(EM_DIAGRAM):   label GRP_IMP_CLAGE3 = 'Dummy: GRP_IMP_CLAGE=3' ;
23170     +
23171     +      label GRP_IMP_CLAGE4 = 'Dummy: GRP_IMP_CLAGE=4' ;
MPRINT(EM_DIAGRAM):   label GRP_IMP_CLAGE4 = 'Dummy: GRP_IMP_CLAGE=4' ;
23172     +
23173     +      label GRP_IMP_DEBTINC2 = 'Dummy: GRP_IMP_DEBTINC=2' ;
MPRINT(EM_DIAGRAM):   label GRP_IMP_DEBTINC2 = 'Dummy: GRP_IMP_DEBTINC=2' ;
23174     +
23175     +      label GRP_IMP_DEBTINC3 = 'Dummy: GRP_IMP_DEBTINC=3' ;
MPRINT(EM_DIAGRAM):   label GRP_IMP_DEBTINC3 = 'Dummy: GRP_IMP_DEBTINC=3' ;
23176     +
23177     +      label GRP_IMP_DEBTINC4 = 'Dummy: GRP_IMP_DEBTINC=4' ;
MPRINT(EM_DIAGRAM):   label GRP_IMP_DEBTINC4 = 'Dummy: GRP_IMP_DEBTINC=4' ;
23178     +
23179     +      label GRP_IMP_NINQ1 = 'Dummy: GRP_IMP_NINQ=1' ;
MPRINT(EM_DIAGRAM):   label GRP_IMP_NINQ1 = 'Dummy: GRP_IMP_NINQ=1' ;
23180     +
23181     +      label GRP_IMP_NINQ2 = 'Dummy: GRP_IMP_NINQ=2' ;
MPRINT(EM_DIAGRAM):   label GRP_IMP_NINQ2 = 'Dummy: GRP_IMP_NINQ=2' ;
23182     +
23183     +      label GRP_IMP_NINQ3 = 'Dummy: GRP_IMP_NINQ=3' ;
MPRINT(EM_DIAGRAM):   label GRP_IMP_NINQ3 = 'Dummy: GRP_IMP_NINQ=3' ;
23184     +
23185     +      label GRP_INDELINQ3 = 'Dummy: GRP_INDELINQ=3' ;
MPRINT(EM_DIAGRAM):   label GRP_INDELINQ3 = 'Dummy: GRP_INDELINQ=3' ;
23186     +
23187     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
23188     +
23189     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
23190     +
23191     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
23192     +
23193     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
23194     +
23195     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
23196     +
23197     +      label I_BAD = 'Into: BAD' ;
MPRINT(EM_DIAGRAM):   label I_BAD = 'Into: BAD' ;
23198     +
23199     +      label F_BAD = 'From: BAD' ;
MPRINT(EM_DIAGRAM):   label F_BAD = 'From: BAD' ;
23200     +
23201     +      label U_BAD = 'Unnormalized Into: BAD' ;
MPRINT(EM_DIAGRAM):   label U_BAD = 'Unnormalized Into: BAD' ;
23202     +
23203     +      label P_BAD1 = 'Predicted: BAD=1' ;
MPRINT(EM_DIAGRAM):   label P_BAD1 = 'Predicted: BAD=1' ;
23204     +
23205     +      label R_BAD1 = 'Residual: BAD=1' ;
MPRINT(EM_DIAGRAM):   label R_BAD1 = 'Residual: BAD=1' ;
23206     +
23207     +      label P_BAD0 = 'Predicted: BAD=0' ;
MPRINT(EM_DIAGRAM):   label P_BAD0 = 'Predicted: BAD=0' ;
23208     +
23209     +      label R_BAD0 = 'Residual: BAD=0' ;
MPRINT(EM_DIAGRAM):   label R_BAD0 = 'Residual: BAD=0' ;
23210     +
23211     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
23212     +
23213     +*** Generate dummy variables for GRP_IMP_CLAGE ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_IMP_CLAGE ;
23214     +drop GRP_IMP_CLAGE2 GRP_IMP_CLAGE3 GRP_IMP_CLAGE4 ;
MPRINT(EM_DIAGRAM):   drop GRP_IMP_CLAGE2 GRP_IMP_CLAGE3 GRP_IMP_CLAGE4 ;
23215     +if missing( GRP_IMP_CLAGE ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_IMP_CLAGE ) then do;
23216     +   GRP_IMP_CLAGE2 = .;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE2 = .;
23217     +   GRP_IMP_CLAGE3 = .;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE3 = .;
23218     +   GRP_IMP_CLAGE4 = .;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE4 = .;
23219     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23220     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23221     +end;
MPRINT(EM_DIAGRAM):   end;
23222     +else do;
MPRINT(EM_DIAGRAM):   else do;
23223     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
23224     +   _dm12 = put( GRP_IMP_CLAGE , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_IMP_CLAGE , BEST12. );
23225     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23226     +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
23227     +      GRP_IMP_CLAGE2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE2 = 0.63245553203367;
23228     +      GRP_IMP_CLAGE3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE3 = -0.63245553203367;
23229     +      GRP_IMP_CLAGE4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE4 = -0.63245553203367;
23230     +   end;
MPRINT(EM_DIAGRAM):   end;
23231     +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
23232     +      GRP_IMP_CLAGE2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE2 = 0.63245553203367;
23233     +      GRP_IMP_CLAGE3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE3 = 0.63245553203367;
23234     +      GRP_IMP_CLAGE4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE4 = 0.63245553203367;
23235     +   end;
MPRINT(EM_DIAGRAM):   end;
23236     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
23237     +      GRP_IMP_CLAGE2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE2 = -0.63245553203367;
23238     +      GRP_IMP_CLAGE3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE3 = -0.63245553203367;
23239     +      GRP_IMP_CLAGE4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE4 = -0.63245553203367;
23240     +   end;
MPRINT(EM_DIAGRAM):   end;
23241     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
23242     +      GRP_IMP_CLAGE2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE2 = 0.63245553203367;
23243     +      GRP_IMP_CLAGE3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE3 = 0.63245553203367;
23244     +      GRP_IMP_CLAGE4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE4 = -0.63245553203367;
23245     +   end;
MPRINT(EM_DIAGRAM):   end;
23246     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23247     +      GRP_IMP_CLAGE2 = .;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE2 = .;
23248     +      GRP_IMP_CLAGE3 = .;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE3 = .;
23249     +      GRP_IMP_CLAGE4 = .;
MPRINT(EM_DIAGRAM):   GRP_IMP_CLAGE4 = .;
23250     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23251     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23252     +   end;
MPRINT(EM_DIAGRAM):   end;
23253     +end;
MPRINT(EM_DIAGRAM):   end;
23254     +
23255     +*** Generate dummy variables for GRP_IMP_DEBTINC ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_IMP_DEBTINC ;
23256     +drop GRP_IMP_DEBTINC2 GRP_IMP_DEBTINC3 GRP_IMP_DEBTINC4 ;
MPRINT(EM_DIAGRAM):   drop GRP_IMP_DEBTINC2 GRP_IMP_DEBTINC3 GRP_IMP_DEBTINC4 ;
23257     +if missing( GRP_IMP_DEBTINC ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_IMP_DEBTINC ) then do;
23258     +   GRP_IMP_DEBTINC2 = .;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC2 = .;
23259     +   GRP_IMP_DEBTINC3 = .;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC3 = .;
23260     +   GRP_IMP_DEBTINC4 = .;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC4 = .;
23261     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23262     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23263     +end;
MPRINT(EM_DIAGRAM):   end;
23264     +else do;
MPRINT(EM_DIAGRAM):   else do;
23265     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
23266     +   _dm12 = put( GRP_IMP_DEBTINC , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_IMP_DEBTINC , BEST12. );
23267     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23268     +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
23269     +      GRP_IMP_DEBTINC2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC2 = 0.63245553203367;
23270     +      GRP_IMP_DEBTINC3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC3 = -0.63245553203367;
23271     +      GRP_IMP_DEBTINC4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC4 = -0.63245553203367;
23272     +   end;
MPRINT(EM_DIAGRAM):   end;
23273     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
23274     +      GRP_IMP_DEBTINC2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC2 = -0.63245553203367;
23275     +      GRP_IMP_DEBTINC3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC3 = -0.63245553203367;
23276     +      GRP_IMP_DEBTINC4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC4 = -0.63245553203367;
23277     +   end;
MPRINT(EM_DIAGRAM):   end;
23278     +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
23279     +      GRP_IMP_DEBTINC2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC2 = 0.63245553203367;
23280     +      GRP_IMP_DEBTINC3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC3 = 0.63245553203367;
23281     +      GRP_IMP_DEBTINC4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC4 = 0.63245553203367;
23282     +   end;
MPRINT(EM_DIAGRAM):   end;
23283     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
23284     +      GRP_IMP_DEBTINC2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC2 = 0.63245553203367;
23285     +      GRP_IMP_DEBTINC3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC3 = 0.63245553203367;
23286     +      GRP_IMP_DEBTINC4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC4 = -0.63245553203367;
23287     +   end;
MPRINT(EM_DIAGRAM):   end;
23288     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23289     +      GRP_IMP_DEBTINC2 = .;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC2 = .;
23290     +      GRP_IMP_DEBTINC3 = .;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC3 = .;
23291     +      GRP_IMP_DEBTINC4 = .;
MPRINT(EM_DIAGRAM):   GRP_IMP_DEBTINC4 = .;
23292     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23293     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23294     +   end;
MPRINT(EM_DIAGRAM):   end;
23295     +end;
MPRINT(EM_DIAGRAM):   end;
23296     +
23297     +*** Generate dummy variables for GRP_IMP_NINQ ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_IMP_NINQ ;
23298     +drop GRP_IMP_NINQ1 GRP_IMP_NINQ2 GRP_IMP_NINQ3 ;
MPRINT(EM_DIAGRAM):   drop GRP_IMP_NINQ1 GRP_IMP_NINQ2 GRP_IMP_NINQ3 ;
23299     +if missing( GRP_IMP_NINQ ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_IMP_NINQ ) then do;
23300     +   GRP_IMP_NINQ1 = .;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ1 = .;
23301     +   GRP_IMP_NINQ2 = .;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ2 = .;
23302     +   GRP_IMP_NINQ3 = .;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ3 = .;
23303     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23304     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23305     +end;
MPRINT(EM_DIAGRAM):   end;
23306     +else do;
MPRINT(EM_DIAGRAM):   else do;
23307     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
23308     +   _dm12 = put( GRP_IMP_NINQ , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_IMP_NINQ , BEST12. );
23309     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23310     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
23311     +      GRP_IMP_NINQ1 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ1 = -0.63245553203367;
23312     +      GRP_IMP_NINQ2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ2 = -0.63245553203367;
23313     +      GRP_IMP_NINQ3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ3 = -0.63245553203367;
23314     +   end;
MPRINT(EM_DIAGRAM):   end;
23315     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
23316     +      GRP_IMP_NINQ1 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ1 = 0.63245553203367;
23317     +      GRP_IMP_NINQ2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ2 = -0.63245553203367;
23318     +      GRP_IMP_NINQ3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ3 = -0.63245553203367;
23319     +   end;
MPRINT(EM_DIAGRAM):   end;
23320     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
23321     +      GRP_IMP_NINQ1 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ1 = 0.63245553203367;
23322     +      GRP_IMP_NINQ2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ2 = 0.63245553203367;
23323     +      GRP_IMP_NINQ3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ3 = 0.63245553203367;
23324     +   end;
MPRINT(EM_DIAGRAM):   end;
23325     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
23326     +      GRP_IMP_NINQ1 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ1 = 0.63245553203367;
23327     +      GRP_IMP_NINQ2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ2 = 0.63245553203367;
23328     +      GRP_IMP_NINQ3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ3 = -0.63245553203367;
23329     +   end;
MPRINT(EM_DIAGRAM):   end;
23330     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23331     +      GRP_IMP_NINQ1 = .;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ1 = .;
23332     +      GRP_IMP_NINQ2 = .;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ2 = .;
23333     +      GRP_IMP_NINQ3 = .;
MPRINT(EM_DIAGRAM):   GRP_IMP_NINQ3 = .;
23334     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23335     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23336     +   end;
MPRINT(EM_DIAGRAM):   end;
23337     +end;
MPRINT(EM_DIAGRAM):   end;
23338     +
23339     +*** Generate dummy variables for GRP_INDELINQ ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_INDELINQ ;
23340     +drop GRP_INDELINQ3 ;
MPRINT(EM_DIAGRAM):   drop GRP_INDELINQ3 ;
23341     +if missing( GRP_INDELINQ ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_INDELINQ ) then do;
23342     +   GRP_INDELINQ3 = .;
MPRINT(EM_DIAGRAM):   GRP_INDELINQ3 = .;
23343     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23344     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23345     +end;
MPRINT(EM_DIAGRAM):   end;
23346     +else do;
MPRINT(EM_DIAGRAM):   else do;
23347     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
23348     +   _dm12 = put( GRP_INDELINQ , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_INDELINQ , BEST12. );
23349     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23350     +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
23351     +      GRP_INDELINQ3 = -1;
MPRINT(EM_DIAGRAM):   GRP_INDELINQ3 = -1;
23352     +   end;
MPRINT(EM_DIAGRAM):   end;
23353     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
23354     +      GRP_INDELINQ3 = 1;
MPRINT(EM_DIAGRAM):   GRP_INDELINQ3 = 1;
23355     +   end;
MPRINT(EM_DIAGRAM):   end;
23356     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23357     +      GRP_INDELINQ3 = .;
MPRINT(EM_DIAGRAM):   GRP_INDELINQ3 = .;
23358     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23359     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23360     +   end;
MPRINT(EM_DIAGRAM):   end;
23361     +end;
MPRINT(EM_DIAGRAM):   end;
23362     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23363     +*** Writing the Node ord ;
MPRINT(EM_DIAGRAM):   *** Writing the Node ord ;
23364     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23365     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23366     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
23367     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23368     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
23369     +   H11  =     0.84162425217187 * GRP_IMP_CLAGE2  +     0.91394613895235 *
23370     +        GRP_IMP_CLAGE3  +     0.91372436571234 * GRP_IMP_CLAGE4
23371     +          +     1.21199529798407 * GRP_IMP_DEBTINC2  +     0.10023735854587 *
23372     +        GRP_IMP_DEBTINC3  +  1.0000000827403E-10 * GRP_IMP_DEBTINC4
23373     +          +      0.4030166160329 * GRP_IMP_NINQ1  +     0.34466117671511 *
23374     +        GRP_IMP_NINQ2  +  9.9999994396249E-11 * GRP_IMP_NINQ3
23375     +          +  1.0000000827403E-10 * GRP_INDELINQ3 ;
MPRINT(EM_DIAGRAM):   H11 = 0.84162425217187 * GRP_IMP_CLAGE2 + 0.91394613895235 * GRP_IMP_CLAGE3 + 0.91372436571234 * GRP_IMP_CLAGE4 + 1.21199529798407 * GRP_IMP_DEBTINC2 + 0.10023735854587 * GRP_IMP_DEBTINC3 + 1.0000000827403E-10 * GRP_IMP_DEBTINC4 +
0.4030166160329 * GRP_IMP_NINQ1 + 0.34466117671511 * GRP_IMP_NINQ2 + 9.9999994396249E-11 * GRP_IMP_NINQ3 + 1.0000000827403E-10 * GRP_INDELINQ3 ;
23376     +   H12  =     0.44318412836719 * GRP_IMP_CLAGE2  +     2.04152352764679 *
23377     +        GRP_IMP_CLAGE3  +  1.0000000827403E-10 * GRP_IMP_CLAGE4
23378     +          +     1.86395164971817 * GRP_IMP_DEBTINC2  +  1.0000000827403E-10 *
23379     +        GRP_IMP_DEBTINC3  +  9.9999994396249E-11 * GRP_IMP_DEBTINC4
23380     +          +     0.32412764649444 * GRP_IMP_NINQ1  +     0.19578732841955 *
23381     +        GRP_IMP_NINQ2  +     0.92053217056657 * GRP_IMP_NINQ3
23382     +          +  1.0000000133514E-10 * GRP_INDELINQ3 ;
MPRINT(EM_DIAGRAM):   H12 = 0.44318412836719 * GRP_IMP_CLAGE2 + 2.04152352764679 * GRP_IMP_CLAGE3 + 1.0000000827403E-10 * GRP_IMP_CLAGE4 + 1.86395164971817 * GRP_IMP_DEBTINC2 + 1.0000000827403E-10 * GRP_IMP_DEBTINC3 + 9.9999994396249E-11 *
GRP_IMP_DEBTINC4 + 0.32412764649444 * GRP_IMP_NINQ1 + 0.19578732841955 * GRP_IMP_NINQ2 + 0.92053217056657 * GRP_IMP_NINQ3 + 1.0000000133514E-10 * GRP_INDELINQ3 ;
23383     +   H13  =     0.28161058010309 * GRP_IMP_CLAGE2  +     0.89606737229768 *
23384     +        GRP_IMP_CLAGE3  +  1.0000000827403E-10 * GRP_IMP_CLAGE4
23385     +          +     1.44402290031604 * GRP_IMP_DEBTINC2  +  1.0000000133514E-10 *
23386     +        GRP_IMP_DEBTINC3  +     0.40839697317136 * GRP_IMP_DEBTINC4
23387     +          +  1.0000000827403E-10 * GRP_IMP_NINQ1  +     0.65521944084878 *
23388     +        GRP_IMP_NINQ2  +  1.0000000133514E-10 * GRP_IMP_NINQ3
23389     +          +     1.52717150748592 * GRP_INDELINQ3 ;
MPRINT(EM_DIAGRAM):   H13 = 0.28161058010309 * GRP_IMP_CLAGE2 + 0.89606737229768 * GRP_IMP_CLAGE3 + 1.0000000827403E-10 * GRP_IMP_CLAGE4 + 1.44402290031604 * GRP_IMP_DEBTINC2 + 1.0000000133514E-10 * GRP_IMP_DEBTINC3 + 0.40839697317136 * GRP_IMP_DEBTINC4 +
1.0000000827403E-10 * GRP_IMP_NINQ1 + 0.65521944084878 * GRP_IMP_NINQ2 + 1.0000000133514E-10 * GRP_IMP_NINQ3 + 1.52717150748592 * GRP_INDELINQ3 ;
23390     +   H14  =  1.0000000133514E-10 * GRP_IMP_CLAGE2  +     0.42156928311284 *
23391     +        GRP_IMP_CLAGE3  +     0.20105839863856 * GRP_IMP_CLAGE4
23392     +          +     0.31105435980584 * GRP_IMP_DEBTINC2  +     0.50830792932042 *
23393     +        GRP_IMP_DEBTINC3  +  1.0000000827403E-10 * GRP_IMP_DEBTINC4
23394     +          +     0.04419961855017 * GRP_IMP_NINQ1  +     0.02908901113418 *
23395     +        GRP_IMP_NINQ2  +     0.07418371374931 * GRP_IMP_NINQ3
23396     +          +      0.0380118013461 * GRP_INDELINQ3 ;
MPRINT(EM_DIAGRAM):   H14 = 1.0000000133514E-10 * GRP_IMP_CLAGE2 + 0.42156928311284 * GRP_IMP_CLAGE3 + 0.20105839863856 * GRP_IMP_CLAGE4 + 0.31105435980584 * GRP_IMP_DEBTINC2 + 0.50830792932042 * GRP_IMP_DEBTINC3 + 1.0000000827403E-10 * GRP_IMP_DEBTINC4 +
0.04419961855017 * GRP_IMP_NINQ1 + 0.02908901113418 * GRP_IMP_NINQ2 + 0.07418371374931 * GRP_IMP_NINQ3 + 0.0380118013461 * GRP_INDELINQ3 ;
23397     +   H15  =  1.0000000133514E-10 * GRP_IMP_CLAGE2  +  9.9999994396249E-11 *
23398     +        GRP_IMP_CLAGE3  +     0.61981433688837 * GRP_IMP_CLAGE4
23399     +          +      1.3235985600726 * GRP_IMP_DEBTINC2  +  1.0000000827403E-10 *
23400     +        GRP_IMP_DEBTINC3  +     0.63969853377089 * GRP_IMP_DEBTINC4
23401     +          +  9.9999994396249E-11 * GRP_IMP_NINQ1  +     0.43670668517942 *
23402     +        GRP_IMP_NINQ2  +     0.12517306001487 * GRP_IMP_NINQ3
23403     +          +      0.4202953626148 * GRP_INDELINQ3 ;
MPRINT(EM_DIAGRAM):   H15 = 1.0000000133514E-10 * GRP_IMP_CLAGE2 + 9.9999994396249E-11 * GRP_IMP_CLAGE3 + 0.61981433688837 * GRP_IMP_CLAGE4 + 1.3235985600726 * GRP_IMP_DEBTINC2 + 1.0000000827403E-10 * GRP_IMP_DEBTINC3 + 0.63969853377089 * GRP_IMP_DEBTINC4
+ 9.9999994396249E-11 * GRP_IMP_NINQ1 + 0.43670668517942 * GRP_IMP_NINQ2 + 0.12517306001487 * GRP_IMP_NINQ3 + 0.4202953626148 * GRP_INDELINQ3 ;
23404     +   H11  =     1.27322598653348 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.27322598653348 + H11 ;
23405     +   H12  =     1.00173288370604 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.00173288370604 + H12 ;
23406     +   H13  =    -2.19477141796525 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -2.19477141796525 + H13 ;
23407     +   H14  =    -0.41073547330617 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.41073547330617 + H14 ;
23408     +   H15  =     1.52044566991639 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.52044566991639 + H15 ;
23409     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
23410     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
23411     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
23412     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
23413     +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
23414     +END;
MPRINT(EM_DIAGRAM):   END;
23415     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23416     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
23417     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
23418     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
23419     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
23420     +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
23421     +END;
MPRINT(EM_DIAGRAM):   END;
23422     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23423     +*** Writing the Node BAD ;
MPRINT(EM_DIAGRAM):   *** Writing the Node BAD ;
23424     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23425     +
23426     +*** Generate dummy variables for BAD ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for BAD ;
23427     +drop BAD1 BAD0 ;
MPRINT(EM_DIAGRAM):   drop BAD1 BAD0 ;
23428     +label F_BAD = 'From: BAD' ;
MPRINT(EM_DIAGRAM):   label F_BAD = 'From: BAD' ;
23429     +length F_BAD $ 12;
MPRINT(EM_DIAGRAM):   length F_BAD $ 12;
23430     +F_BAD = put( BAD , BEST12. );
MPRINT(EM_DIAGRAM):   F_BAD = put( BAD , BEST12. );
23431     +%DMNORMIP( F_BAD )
MPRINT(DMNORMIP):   call dmnorm(F_BAD,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23432     +if missing( BAD ) then do;
MPRINT(EM_DIAGRAM):   if missing( BAD ) then do;
23433     +   BAD1 = .;
MPRINT(EM_DIAGRAM):   BAD1 = .;
23434     +   BAD0 = .;
MPRINT(EM_DIAGRAM):   BAD0 = .;
23435     +end;
MPRINT(EM_DIAGRAM):   end;
23436     +else do;
MPRINT(EM_DIAGRAM):   else do;
23437     +   if F_BAD = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_BAD = '0' then do;
23438     +      BAD1 = 0;
MPRINT(EM_DIAGRAM):   BAD1 = 0;
23439     +      BAD0 = 1;
MPRINT(EM_DIAGRAM):   BAD0 = 1;
23440     +   end;
MPRINT(EM_DIAGRAM):   end;
23441     +   else if F_BAD = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_BAD = '1' then do;
23442     +      BAD1 = 1;
MPRINT(EM_DIAGRAM):   BAD1 = 1;
23443     +      BAD0 = 0;
MPRINT(EM_DIAGRAM):   BAD0 = 0;
23444     +   end;
MPRINT(EM_DIAGRAM):   end;
23445     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23446     +      BAD1 = .;
MPRINT(EM_DIAGRAM):   BAD1 = .;
23447     +      BAD0 = .;
MPRINT(EM_DIAGRAM):   BAD0 = .;
23448     +   end;
MPRINT(EM_DIAGRAM):   end;
23449     +end;
MPRINT(EM_DIAGRAM):   end;
23450     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
23451     +   P_BAD1  =    -2.64403957786331 * H11  +     2.41620588643142 * H12
23452     +          +     1.12237375231097 * H13  +    -3.79942630995982 * H14
23453     +          +     2.96546954408798 * H15 ;
MPRINT(EM_DIAGRAM):   P_BAD1 = -2.64403957786331 * H11 + 2.41620588643142 * H12 + 1.12237375231097 * H13 + -3.79942630995982 * H14 + 2.96546954408798 * H15 ;
23454     +   P_BAD1  =    -3.74774044260044 + P_BAD1 ;
MPRINT(EM_DIAGRAM):   P_BAD1 = -3.74774044260044 + P_BAD1 ;
23455     +   P_BAD0  = 0;
MPRINT(EM_DIAGRAM):   P_BAD0 = 0;
23456     +   _MAX_ = MAX (P_BAD1 , P_BAD0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_BAD1 , P_BAD0 );
23457     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
23458     +   P_BAD1  = EXP(P_BAD1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_BAD1 = EXP(P_BAD1 - _MAX_);
23459     +   _SUM_ = _SUM_ + P_BAD1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_BAD1 ;
23460     +   P_BAD0  = EXP(P_BAD0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_BAD0 = EXP(P_BAD0 - _MAX_);
23461     +   _SUM_ = _SUM_ + P_BAD0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_BAD0 ;
23462     +   P_BAD1  = P_BAD1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_BAD1 = P_BAD1 / _SUM_;
23463     +   P_BAD0  = P_BAD0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_BAD0 = P_BAD0 / _SUM_;
23464     +END;
MPRINT(EM_DIAGRAM):   END;
23465     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23466     +   P_BAD1  = .;
MPRINT(EM_DIAGRAM):   P_BAD1 = .;
23467     +   P_BAD0  = .;
MPRINT(EM_DIAGRAM):   P_BAD0 = .;
23468     +END;
MPRINT(EM_DIAGRAM):   END;
23469     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
23470     +   P_BAD1  =     0.19939577039274;
MPRINT(EM_DIAGRAM):   P_BAD1 = 0.19939577039274;
23471     +   P_BAD0  =     0.80060422960725;
MPRINT(EM_DIAGRAM):   P_BAD0 = 0.80060422960725;
23472     +END;
MPRINT(EM_DIAGRAM):   END;
23473     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
23474     +*** Writing the Residuals  of the Node BAD ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node BAD ;
23475     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
23476     +IF MISSING( BAD1 ) THEN R_BAD1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( BAD1 ) THEN R_BAD1 = . ;
23477     +ELSE R_BAD1  = BAD1  - P_BAD1 ;
MPRINT(EM_DIAGRAM):   ELSE R_BAD1 = BAD1 - P_BAD1 ;
23478     +IF MISSING( BAD0 ) THEN R_BAD0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( BAD0 ) THEN R_BAD0 = . ;
23479     +ELSE R_BAD0  = BAD0  - P_BAD0 ;
MPRINT(EM_DIAGRAM):   ELSE R_BAD0 = BAD0 - P_BAD0 ;
23480     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23481     +*** Writing the I_BAD  AND U_BAD ;
MPRINT(EM_DIAGRAM):   *** Writing the I_BAD AND U_BAD ;
23482     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23483     +_MAXP_ = P_BAD1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_BAD1 ;
23484     +I_BAD  = "1           " ;
MPRINT(EM_DIAGRAM):   I_BAD = "1           " ;
23485     +U_BAD  =                    1;
MPRINT(EM_DIAGRAM):   U_BAD = 1;
23486     +IF( _MAXP_ LT P_BAD0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_BAD0 ) THEN DO;
23487     +   _MAXP_ = P_BAD0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_BAD0 ;
23488     +   I_BAD  = "0           " ;
MPRINT(EM_DIAGRAM):   I_BAD = "0           " ;
23489     +   U_BAD  =                    0;
MPRINT(EM_DIAGRAM):   U_BAD = 0;
23490     +END;
MPRINT(EM_DIAGRAM):   END;
23491     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
23492     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
23493     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
23494     +drop
23495     +H11
23496     +H12
23497     +H13
23498     +H14
23499     +H15
23500     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
23501      run;
 
NOTE: DATA STEP view saved on file EMWS1.NEURAL5_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
23502      quit;
23503      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
23504      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23505      * Neural5: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural5: Computing metadata for TRAIN data;
23506      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.NEURAL5_TRAIN.VIEW used (Total process time):
      real time           0.26 seconds
      cpu time            0.26 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Neural5_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Neural5_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Neural5_TRAIN out=WORK.M2H8_SSM noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2H8_SSM;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2H8_SSM(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2H8_SSM;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2H8_SSM;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0V7HRAT NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0V7HRAT;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0V7HRAT;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M22WO6EI(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0V7HRAT;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0V7HRAT;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0V7HRAT;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0V7HRAT;
MPRINT(EMADVISECOLUMNS):   set WORK.M0V7HRAT;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural5";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_BAD1") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("R_BAD1") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("P_BAD0") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("R_BAD0") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("F_BAD") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("I_BAD") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("U_BAD") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("BAD") model = "Neural5";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural5: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
23841      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
23842      set EMWS1.Neural5_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMINFO;
23843      where DATA='Neural5' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural5' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
23844      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.NEURAL5_EMINFO.
      WHERE (DATA='Neural5') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23845      data EMWS1.Neural5_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_EMINFO;
23846      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
23847      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
23848      cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.NEURAL5_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
23852      run;
23853      data EMWS1.Neural5_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_EMINFO;
23854      set EMWS1.Neural5_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMINFO WORK.MODELTEMP_INFO;
23855      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.NEURAL5_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.NEURAL5_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23856      proc sort data = EMWS1.Neural5_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural5_EMINFO NOTHREADS;
23857      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
23858      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.NEURAL5_EMINFO.
NOTE: The data set EMWS1.NEURAL5_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23859      proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
23860      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
23861      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23862      proc sort data = EMWS1.Neural5_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Neural5_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
23863      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
23864      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.NEURAL5_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23865      data EMWS1.Neural5_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_EMINFO;
23866      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
23867      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
23868      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.NEURAL5_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23869      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
23870      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
23871      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
23872      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS1.NEURAL5_TRAIN.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.25 seconds
 
NOTE: View EMWS1.NEURAL5_VALIDATE.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.24 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 04, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "07:50:39" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                November 04, 2015
Time:                07:50:39
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O26QIQ5J "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Neural5\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O26QIQ5J new;
MPRINT(EM_DIAGRAM):   run;
23896      data EMWS1.Neural5_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_EMOUTFIT(rename=(_NAME_=TARGET));
23897      set EMWS1.Neural5_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_OUTFIT(where=(_NAME_ eq 'OVERALL'));
23898      label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
23899      if _NAME_='OVERALL' then _NAME_='BAD';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='BAD';
23900      drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
23901      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS1.NEURAL5_EMOUTFIT has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
23902      proc sort data=EMWS1.Neural5_EMOUTFIT nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural5_EMOUTFIT nodupkey;
23903      by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
23904      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_EMOUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS1.NEURAL5_EMOUTFIT has 1 observations and 35 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23905      data EMWS1.Neural5_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_EMOUTFIT;
23906      set EMWS1.Neural5_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMOUTFIT;
23907      length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
23908      label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
23909      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable TargetLabel is uninitialized.
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_EMOUTFIT.
NOTE: The data set EMWS1.NEURAL5_EMOUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
23910      proc sort data=EMWS1.Neural5_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural5_EMREPORTFIT nothreads;
23911      by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
23912      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.NEURAL5_EMREPORTFIT.
NOTE: The data set EMWS1.NEURAL5_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
23913      %let _EMwarndup = 0;
23914      %let _EMtargetdup =;
23915      %let _EMASEtargetdup =;
23916      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23917      set EMWS1.Neural5_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMOUTFIT;
23918      if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
23919      call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
23920      call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
23921      call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
23922      end;
MPRINT(EM_DIAGRAM):   end;
23923      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
23924      proc sort data=EMWS1.BINNING_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.BINNING_CMeta_TRAIN out=WORK.SUBSETINMETA;
23925      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
23926      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set EMWS1.BINNING_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 18 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23927      proc sort data=EMWS1.Neural5_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural5_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
23928      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
23929      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set EMWS1.NEURAL5_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 17 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23930      data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
23931      merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
23932      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
23933      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 17 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 18 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23934      data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
23935      set EMWS1.Neural5_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_CMeta_TRAIN;
23936      where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
23937      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.NEURAL5_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23938      data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
23939      set EMWS1.Neural5_TRAIN(keep=
23940      F_BAD
23941      I_BAD
23942      P_BAD0
23943      P_BAD1
23944      R_BAD0
23945      R_BAD1
23946      U_BAD
23947      _WARN_
23948      BAD
23949      );
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_TRAIN(keep= F_BAD I_BAD P_BAD0 P_BAD1 R_BAD0 R_BAD1 U_BAD _WARN_ BAD );
23950      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=100 BAD=1 LOAN=4100 MORTDUE=. VALUE=19132 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=100.77465221 NINQ=0 CLNO=19 DEBTINC=33.840919904 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=100.77465221 IMP_CLNO=19 IMP_DEBTINC=33.840919904
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=19132 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=49
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=119 BAD=0 LOAN=4500 MORTDUE=. VALUE=49044 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=11.652738796 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=11.652738796 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=49044 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=60
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=206 BAD=0 LOAN=5100 MORTDUE=66834 VALUE=87361 REASON=HomeImp JOB=Other YOJ=0 DEROG=2 DELINQ=0 CLAGE=290.03410799 NINQ=0 CLNO=6 DEBTINC=38.766985071 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=290.03410799 IMP_CLNO=6 IMP_DEBTINC=38.766985071
IMP_DELINQ=0 IMP_DEROG=2 IMP_MORTDUE=66834 IMP_NINQ=0 IMP_VALUE=87361 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=97
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=207 BAD=0 LOAN=5100 MORTDUE=73882 VALUE=96031 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=125.78740011 NINQ=1 CLNO=10 DEBTINC=34.446079222 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=125.78740011 IMP_CLNO=10 IMP_DEBTINC=34.446079222
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73882 IMP_NINQ=1 IMP_VALUE=96031 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=98
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=213 BAD=0 LOAN=5200 MORTDUE=19000 VALUE=26000 REASON=DebtCon JOB=Other YOJ=0 DEROG=1 DELINQ=0 CLAGE=17.2 NINQ=10 CLNO=7 DEBTINC=. IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=17.2 IMP_CLNO=7 IMP_DEBTINC=33.786945547 IMP_DELINQ=0 IMP_DEROG=1
IMP_MORTDUE=19000 IMP_NINQ=10 IMP_VALUE=26000 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=102
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=221 BAD=0 LOAN=5300 MORTDUE=. VALUE=49396 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=12.043670576 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=12.043670576 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=49396 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=109
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=273 BAD=0 LOAN=5700 MORTDUE=. VALUE=68591 REASON=HomeImp JOB=Office YOJ=0 DEROG=0 DELINQ=0 CLAGE=69.645660473 NINQ=0 CLNO=4 DEBTINC=41.185039558 IMP_JOB=Office IMP_REASON=HomeImp IMP_CLAGE=69.645660473 IMP_CLNO=4 IMP_DEBTINC=41.185039558
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=68591 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=128
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=279 BAD=1 LOAN=5700 MORTDUE=77213 VALUE=92661 REASON=DebtCon JOB=Sales YOJ=0 DEROG=0 DELINQ=0 CLAGE=97.133170952 NINQ=1 CLNO=16 DEBTINC=41.777888631 IMP_JOB=Sales IMP_REASON=DebtCon IMP_CLAGE=97.133170952 IMP_CLNO=16 IMP_DEBTINC=41.777888631
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=77213 IMP_NINQ=1 IMP_VALUE=92661 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=131
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=284 BAD=0 LOAN=5700 MORTDUE=28116 VALUE=33450 REASON=DebtCon JOB=Other YOJ=0 DEROG=1 DELINQ=0 CLAGE=15.396587392 NINQ=9 CLNO=7 DEBTINC=30.017013296 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=15.396587392 IMP_CLNO=7 IMP_DEBTINC=30.017013296
IMP_DELINQ=0 IMP_DEROG=1 IMP_MORTDUE=28116 IMP_NINQ=9 IMP_VALUE=33450 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=133
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=320 BAD=0 LOAN=6000 MORTDUE=69876 VALUE=94394.07 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=179.56666667 NINQ=0 CLNO=32 DEBTINC=. IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=179.56666667 IMP_CLNO=32 IMP_DEBTINC=33.786945547 IMP_DELINQ=1
IMP_DEROG=0 IMP_MORTDUE=69876 IMP_NINQ=0 IMP_VALUE=94394.07 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=153
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=329 BAD=0 LOAN=6000 MORTDUE=79046 VALUE=103048 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=181.69653802 NINQ=0 CLNO=32 DEBTINC=37.289989924 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.69653802 IMP_CLNO=32 IMP_DEBTINC=37.289989924
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=79046 IMP_NINQ=0 IMP_VALUE=103048 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=160
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=342 BAD=0 LOAN=6100 MORTDUE=. VALUE=46830 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=1 CLAGE=. NINQ=0 CLNO=0 DEBTINC=13.306013076 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=13.306013076 IMP_DELINQ=1 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=46830 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=166
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=356 BAD=0 LOAN=6200 MORTDUE=73881 VALUE=98550 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=182.8787798 NINQ=0 CLNO=31 DEBTINC=37.19944569 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=182.8787798 IMP_CLNO=31 IMP_DEBTINC=37.19944569
IMP_DELINQ=1 IMP_DEROG=0 IMP_MORTDUE=73881 IMP_NINQ=0 IMP_VALUE=98550 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=172
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=392 BAD=0 LOAN=6400 MORTDUE=44968 VALUE=62747 REASON=HomeImp JOB=Other YOJ=0 DEROG=1 DELINQ=. CLAGE=101.39144532 NINQ=. CLNO=12 DEBTINC=36.602947343 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=101.39144532 IMP_CLNO=12 IMP_DEBTINC=36.602947343
IMP_DELINQ=0.4622255303 IMP_DEROG=1 IMP_MORTDUE=44968 IMP_NINQ=1.1569852941 IMP_VALUE=62747 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=188
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=419 BAD=0 LOAN=6600 MORTDUE=. VALUE=48800 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=12.219436152 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=12.219436152 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=48800 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=197
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=423 BAD=0 LOAN=6600 MORTDUE=. VALUE=46516 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0 CLAGE=. NINQ=0 CLNO=0 DEBTINC=14.845990728 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=14.845990728 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=46516 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=198
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=454 BAD=0 LOAN=6800 MORTDUE=71666 VALUE=99913 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=196.46499893 NINQ=0 CLNO=31 DEBTINC=35.761604731 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=196.46499893 IMP_CLNO=31 IMP_DEBTINC=35.761604731
IMP_DELINQ=1 IMP_DEROG=0 IMP_MORTDUE=71666 IMP_NINQ=0 IMP_VALUE=99913 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=214
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=471 BAD=0 LOAN=7000 MORTDUE=73873 VALUE=111781 REASON=DebtCon JOB=Office YOJ=0 DEROG=0 DELINQ=0 CLAGE=231.79991346 NINQ=0 CLNO=38 DEBTINC=19.273579455 IMP_JOB=Office IMP_REASON=DebtCon IMP_CLAGE=231.79991346 IMP_CLNO=38 IMP_DEBTINC=19.273579455
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73873 IMP_NINQ=0 IMP_VALUE=111781 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=220
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
_dataobs_=474 BAD=0 LOAN=7000 MORTDUE=78284 VALUE=98214 REASON=HomeImp JOB=Other YOJ=0 DEROG=0 DELINQ=1 CLAGE=171.83838617 NINQ=0 CLNO=31 DEBTINC=36.247963031 IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=171.83838617 IMP_CLNO=31 IMP_DEBTINC=36.247963031
IMP_DELINQ=1 IMP_DEROG=0 IMP_MORTDUE=78284 IMP_NINQ=0 IMP_VALUE=98214 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=223
NOTE: Invalid argument to function LOG(0) at line 83566 column 10.
WARNING: Limit set by ERRORS= option reached.  Further errors of this type will not be printed.
_dataobs_=516 BAD=0 LOAN=7100 MORTDUE=57863 VALUE=70969 REASON=DebtCon JOB=Other YOJ=0 DEROG=0 DELINQ=0 CLAGE=65.872044812 NINQ=7 CLNO=21 DEBTINC=26.829490191 IMP_JOB=Other IMP_REASON=DebtCon IMP_CLAGE=65.872044812 IMP_CLNO=21 IMP_DEBTINC=26.829490191
IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=57863 IMP_NINQ=7 IMP_VALUE=70969 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=239
NOTE: There were 2979 observations read from the data set EMWS1.PART_TRAIN.
NOTE: Mathematical operations could not be performed at the following places. The results of the operations have been set to missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      209 at 83566:10
NOTE: There were 2979 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 2979 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View EMWS1.NEURAL5_TRAIN.VIEW used (Total process time):
      real time           0.29 seconds
      cpu time            0.29 seconds
 
NOTE: There were 2979 observations read from the data set EMWS1.BINNING_TRAIN.
NOTE: There were 2979 observations read from the data set EMWS1.NEURAL5_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2979 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.32 seconds
      cpu time            0.32 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_BAD*F_BAD / out = WORK.Neural5_12XTG_U nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Neural5_12XTG_U;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32 CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Neural5_12XTG_U(rename=(F_BAD=FROM I_BAD=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "BAD";
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Neural5_12XTG_U;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Neural5_12XTG_U;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_ _LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_BAD_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_BAD") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_BAD") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_BAD ;
 
MPRINT(EM_ASSESS):   VAR P_BAD1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_BAD") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_BAD1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_BAD P_BAD1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_BAD ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_BAD1 NTARGET _tmpfreqvar_ WHERE = (NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_BAD1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT
MAXPROB MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST (KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS
SCR_CP_EVENTS SCR_P_NONEVENTS SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0 NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0 FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 -
EVENTS100 NONEVENTS1 - NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.1993957704 _NEVENTS 594 _NNONEVENTS 2385 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1 SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100 SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2979));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_BAD1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_BAD1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_BAD1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_BAD1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_BAD1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_BAD1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_BAD1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_BAD1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_BAD1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_BAD1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0040863817 OVLMAX 0.8593571327 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2979 * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP / NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2979)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS)) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2979 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2979 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 - SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2979;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 - SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2979;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 - SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2979;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 - SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2979;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 - SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2979;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 - SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2979;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 - SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2979;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 - SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2979;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 - SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2979;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 - SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2979;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 - SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2979;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 - SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2979;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 - SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2979;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 - SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2979;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 - SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2979;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 - SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2979;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 - SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2979;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 - SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2979;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 - SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2979;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2979;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "BAD";
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "BAD";
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
28212      data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
28213      set EMWS1.Neural5_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_CMeta_TRAIN;
28214      where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
28214    ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
28215      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.NEURAL5_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
28216      data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
28217      set EMWS1.Neural5_VALIDATE(keep=
28218      F_BAD
28219      I_BAD
28220      P_BAD0
28221      P_BAD1
28222      R_BAD0
28223      R_BAD1
28224      U_BAD
28225      _WARN_
28226      BAD
28227      );
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_VALIDATE(keep= F_BAD I_BAD P_BAD0 P_BAD1 R_BAD0 R_BAD1
U_BAD _WARN_ BAD );
28228      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=93 BAD=0 LOAN=4000 MORTDUE=. VALUE=45760 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0
CLAGE=. NINQ=0 CLNO=0 DEBTINC=. IMP_JOB=Other IMP_REASON=HomeImp IMP_CLAGE=181.15305208
IMP_CLNO=0 IMP_DEBTINC=33.786945547 IMP_DELINQ=0 IMP_DEROG=0 IMP_MORTDUE=73574.90271 IMP_NINQ=0
IMP_VALUE=45760 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=48
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=204 BAD=1 LOAN=5100 MORTDUE=15500 VALUE=34000 REASON=DebtCon JOB=Other YOJ=0 DEROG=1
DELINQ=2 CLAGE=86.233333333 NINQ=2 CLNO=13 DEBTINC=. IMP_JOB=Other IMP_REASON=DebtCon
IMP_CLAGE=86.233333333 IMP_CLNO=13 IMP_DEBTINC=33.786945547 IMP_DELINQ=2 IMP_DEROG=1
IMP_MORTDUE=15500 IMP_NINQ=2 IMP_VALUE=34000 IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1
_N_=108
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=208 BAD=0 LOAN=5100 MORTDUE=74071 VALUE=97064 REASON=DebtCon JOB=Other YOJ=0 DEROG=0
DELINQ=0 CLAGE=121.0759726 NINQ=2 CLNO=9 DEBTINC=36.401729548 IMP_JOB=Other IMP_REASON=DebtCon
IMP_CLAGE=121.0759726 IMP_CLNO=9 IMP_DEBTINC=36.401729548 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=74071 IMP_NINQ=2 IMP_VALUE=97064 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1
_N_=110
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=217 BAD=1 LOAN=5200 MORTDUE=40564 VALUE=39527 REASON=HomeImp JOB=Other YOJ=0 DEROG=0
DELINQ=0 CLAGE=157.77103572 NINQ=1 CLNO=13 DEBTINC=72.670433313 IMP_JOB=Other
IMP_REASON=HomeImp IMP_CLAGE=157.77103572 IMP_CLNO=13 IMP_DEBTINC=72.670433313 IMP_DELINQ=0
IMP_DEROG=0 IMP_MORTDUE=40564 IMP_NINQ=1 IMP_VALUE=39527 IMP_YOJ=0 INDELINQ=0 INDEROG=0
LOG_yoj=. _ERROR_=1 _N_=112
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=224 BAD=0 LOAN=5300 MORTDUE=75958 VALUE=91703 REASON=DebtCon JOB=Other YOJ=0 DEROG=0
DELINQ=0 CLAGE=124.1821788 NINQ=1 CLNO=10 DEBTINC=34.599060194 IMP_JOB=Other IMP_REASON=DebtCon
IMP_CLAGE=124.1821788 IMP_CLNO=10 IMP_DEBTINC=34.599060194 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=75958 IMP_NINQ=1 IMP_VALUE=91703 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1
_N_=114
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=227 BAD=0 LOAN=5300 MORTDUE=83552 VALUE=96809 REASON=DebtCon JOB=ProfExe YOJ=0
DEROG=. DELINQ=. CLAGE=. NINQ=. CLNO=. DEBTINC=28.423961906 IMP_JOB=ProfExe IMP_REASON=DebtCon
IMP_CLAGE=181.15305208 IMP_CLNO=21.277078966 IMP_DEBTINC=28.423961906 IMP_DELINQ=0.4622255303
IMP_DEROG=0.2409592691 IMP_MORTDUE=83552 IMP_NINQ=1.1569852941 IMP_VALUE=96809 IMP_YOJ=0
INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=116
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=274 BAD=0 LOAN=5700 MORTDUE=26927 VALUE=35461 REASON=DebtCon JOB=Other YOJ=0 DEROG=1
DELINQ=0 CLAGE=21.799352154 NINQ=10 CLNO=6 DEBTINC=29.439664242 IMP_JOB=Other
IMP_REASON=DebtCon IMP_CLAGE=21.799352154 IMP_CLNO=6 IMP_DEBTINC=29.439664242 IMP_DELINQ=0
IMP_DEROG=1 IMP_MORTDUE=26927 IMP_NINQ=10 IMP_VALUE=35461 IMP_YOJ=0 INDELINQ=0 INDEROG=1
LOG_yoj=. _ERROR_=1 _N_=146
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=283 BAD=1 LOAN=5700 MORTDUE=74172 VALUE=79846 REASON=DebtCon JOB=ProfExe YOJ=0
DEROG=0 DELINQ=0 CLAGE=157.00977472 NINQ=0 CLNO=28 DEBTINC=47.415228659 IMP_JOB=ProfExe
IMP_REASON=DebtCon IMP_CLAGE=157.00977472 IMP_CLNO=28 IMP_DEBTINC=47.415228659 IMP_DELINQ=0
IMP_DEROG=0 IMP_MORTDUE=74172 IMP_NINQ=0 IMP_VALUE=79846 IMP_YOJ=0 INDELINQ=0 INDEROG=0
LOG_yoj=. _ERROR_=1 _N_=151
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=330 BAD=0 LOAN=6000 MORTDUE=. VALUE=53190 REASON=HomeImp JOB=  YOJ=0 DEROG=0 DELINQ=0
CLAGE=. NINQ=0 CLNO=0 DEBTINC=15.174415003 IMP_JOB=Other IMP_REASON=HomeImp
IMP_CLAGE=181.15305208 IMP_CLNO=0 IMP_DEBTINC=15.174415003 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=73574.90271 IMP_NINQ=0 IMP_VALUE=53190 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=.
_ERROR_=1 _N_=170
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=343 BAD=0 LOAN=6100 MORTDUE=78753 VALUE=95433 REASON=DebtCon JOB=ProfExe YOJ=0
DEROG=. DELINQ=. CLAGE=. NINQ=. CLNO=. DEBTINC=28.925117417 IMP_JOB=ProfExe IMP_REASON=DebtCon
IMP_CLAGE=181.15305208 IMP_CLNO=21.277078966 IMP_DEBTINC=28.925117417 IMP_DELINQ=0.4622255303
IMP_DEROG=0.2409592691 IMP_MORTDUE=78753 IMP_NINQ=1.1569852941 IMP_VALUE=95433 IMP_YOJ=0
INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=177
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=344 BAD=0 LOAN=6100 MORTDUE=77265 VALUE=97944 REASON=DebtCon JOB=ProfExe YOJ=0
DEROG=. DELINQ=. CLAGE=. NINQ=. CLNO=. DEBTINC=28.876463055 IMP_JOB=ProfExe IMP_REASON=DebtCon
IMP_CLAGE=181.15305208 IMP_CLNO=21.277078966 IMP_DEBTINC=28.876463055 IMP_DELINQ=0.4622255303
IMP_DEROG=0.2409592691 IMP_MORTDUE=77265 IMP_NINQ=1.1569852941 IMP_VALUE=97944 IMP_YOJ=0
INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=178
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=358 BAD=0 LOAN=6200 MORTDUE=75121 VALUE=96462 REASON=DebtCon JOB=ProfExe YOJ=0
DEROG=. DELINQ=. CLAGE=. NINQ=. CLNO=. DEBTINC=27.167655962 IMP_JOB=ProfExe IMP_REASON=DebtCon
IMP_CLAGE=181.15305208 IMP_CLNO=21.277078966 IMP_DEBTINC=27.167655962 IMP_DELINQ=0.4622255303
IMP_DEROG=0.2409592691 IMP_MORTDUE=75121 IMP_NINQ=1.1569852941 IMP_VALUE=96462 IMP_YOJ=0
INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=186
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=382 BAD=0 LOAN=6400 MORTDUE=47251 VALUE=58157 REASON=HomeImp JOB=Other YOJ=0 DEROG=0
DELINQ=. CLAGE=104.79246836 NINQ=. CLNO=13 DEBTINC=36.416886965 IMP_JOB=Other
IMP_REASON=HomeImp IMP_CLAGE=104.79246836 IMP_CLNO=13 IMP_DEBTINC=36.416886965
IMP_DELINQ=0.4622255303 IMP_DEROG=0 IMP_MORTDUE=47251 IMP_NINQ=1.1569852941 IMP_VALUE=58157
IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1 _N_=202
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=402 BAD=0 LOAN=6500 MORTDUE=78741 VALUE=90599 REASON=DebtCon JOB=ProfExe YOJ=0
DEROG=. DELINQ=. CLAGE=. NINQ=. CLNO=. DEBTINC=29.198860669 IMP_JOB=ProfExe IMP_REASON=DebtCon
IMP_CLAGE=181.15305208 IMP_CLNO=21.277078966 IMP_DEBTINC=29.198860669 IMP_DELINQ=0.4622255303
IMP_DEROG=0.2409592691 IMP_MORTDUE=78741 IMP_NINQ=1.1569852941 IMP_VALUE=90599 IMP_YOJ=0
INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=211
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=416 BAD=0 LOAN=6500 MORTDUE=58689 VALUE=72557 REASON=DebtCon JOB=Other YOJ=0 DEROG=0
DELINQ=1 CLAGE=94.00805286 NINQ=2 CLNO=18 DEBTINC=34.898413066 IMP_JOB=Other IMP_REASON=DebtCon
IMP_CLAGE=94.00805286 IMP_CLNO=18 IMP_DEBTINC=34.898413066 IMP_DELINQ=1 IMP_DEROG=0
IMP_MORTDUE=58689 IMP_NINQ=2 IMP_VALUE=72557 IMP_YOJ=0 INDELINQ=1 INDEROG=0 LOG_yoj=. _ERROR_=1
_N_=220
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=433 BAD=0 LOAN=6700 MORTDUE=69773 VALUE=83014 REASON=HomeImp JOB=Other YOJ=0 DEROG=1
DELINQ=0 CLAGE=263.17343429 NINQ=0 CLNO=5 DEBTINC=37.70699649 IMP_JOB=Other IMP_REASON=HomeImp
IMP_CLAGE=263.17343429 IMP_CLNO=5 IMP_DEBTINC=37.70699649 IMP_DELINQ=0 IMP_DEROG=1
IMP_MORTDUE=69773 IMP_NINQ=0 IMP_VALUE=83014 IMP_YOJ=0 INDELINQ=0 INDEROG=1 LOG_yoj=. _ERROR_=1
_N_=228
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=435 BAD=0 LOAN=6700 MORTDUE=48430 VALUE=64358 REASON=HomeImp JOB=Other YOJ=0 DEROG=1
DELINQ=. CLAGE=108.35174747 NINQ=. CLNO=13 DEBTINC=38.894194746 IMP_JOB=Other
IMP_REASON=HomeImp IMP_CLAGE=108.35174747 IMP_CLNO=13 IMP_DEBTINC=38.894194746
IMP_DELINQ=0.4622255303 IMP_DEROG=1 IMP_MORTDUE=48430 IMP_NINQ=1.1569852941 IMP_VALUE=64358
IMP_YOJ=0 INDELINQ=1 INDEROG=1 LOG_yoj=. _ERROR_=1 _N_=229
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=517 BAD=0 LOAN=7100 MORTDUE=64850 VALUE=76985 REASON=HomeImp JOB=Other YOJ=0 DEROG=0
DELINQ=0 CLAGE=108.21718977 NINQ=0 CLNO=7 DEBTINC=36.337557557 IMP_JOB=Other IMP_REASON=HomeImp
IMP_CLAGE=108.21718977 IMP_CLNO=7 IMP_DEBTINC=36.337557557 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=64850 IMP_NINQ=0 IMP_VALUE=76985 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1
_N_=278
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
_dataobs_=533 BAD=0 LOAN=7200 MORTDUE=22832 VALUE=31666 REASON=DebtCon JOB=Other YOJ=0 DEROG=0
DELINQ=0 CLAGE=38.003266851 NINQ=9 CLNO=7 DEBTINC=28.295681117 IMP_JOB=Other IMP_REASON=DebtCon
IMP_CLAGE=38.003266851 IMP_CLNO=7 IMP_DEBTINC=28.295681117 IMP_DELINQ=0 IMP_DEROG=0
IMP_MORTDUE=22832 IMP_NINQ=9 IMP_VALUE=31666 IMP_YOJ=0 INDELINQ=0 INDEROG=0 LOG_yoj=. _ERROR_=1
_N_=286
NOTE: Invalid argument to function LOG(0) at line 83588 column 10.
WARNING: Limit set by ERRORS= option reached.  Further errors of this type will not be printed.
_dataobs_=556 BAD=1 LOAN=7400 MORTDUE=71576 VALUE=89068 REASON=DebtCon JOB=Sales YOJ=0 DEROG=0
DELINQ=0 CLAGE=94.782230694 NINQ=0 CLNO=17 DEBTINC=42.803421995 IMP_JOB=Sales
IMP_REASON=DebtCon IMP_CLAGE=94.782230694 IMP_CLNO=17 IMP_DEBTINC=42.803421995 IMP_DELINQ=0
IMP_DEROG=0 IMP_MORTDUE=71576 IMP_NINQ=0 IMP_VALUE=89068 IMP_YOJ=0 INDELINQ=0 INDEROG=0
LOG_yoj=. _ERROR_=1 _N_=297
NOTE: There were 2981 observations read from the data set EMWS1.PART_VALIDATE.
NOTE: Mathematical operations could not be performed at the following places. The results of
      the operations have been set to missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      206 at 83588:10
NOTE: There were 2981 observations read from the data set EMWS1.IMPT_VALIDATE.
NOTE: There were 2981 observations read from the data set EMWS1.TRANS_VALIDATE.
NOTE: View EMWS1.NEURAL5_VALIDATE.VIEW used (Total process time):
      real time           0.29 seconds
      cpu time            0.29 seconds
 
NOTE: There were 2981 observations read from the data set EMWS1.BINNING_VALIDATE.
NOTE: There were 2981 observations read from the data set EMWS1.NEURAL5_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2981 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.32 seconds
      cpu time            0.32 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_BAD*F_BAD / out = WORK.Neural5_3JJEMQL nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Neural5_3JJEMQL;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Neural5_3JJEMQL(rename=(F_BAD=FROM I_BAD=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "BAD";
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMCLASSIFICATION WORK.Neural5_3JJEMQL;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Neural5_3JJEMQL;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_BAD_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_BAD") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_BAD") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_BAD ;
 
MPRINT(EM_ASSESS):   VAR P_BAD1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_BAD") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_BAD1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_BAD P_BAD1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_BAD ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_BAD1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_BAD1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.1995974505 _NEVENTS
595 _NNONEVENTS 2386 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2981));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_BAD1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_BAD1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_BAD1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_BAD1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_BAD1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_BAD1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_BAD1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_BAD1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_BAD1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_BAD1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0040863817 OVLMAX 0.8593571327 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2981 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2981)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2981 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2981 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2981;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2981;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2981;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2981;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2981;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2981;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2981;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2981;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2981;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2981;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2981;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2981;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2981;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2981;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2981;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2981;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2981;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2981;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2981;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2981;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "BAD";
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "BAD";
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
32499      %let _cn = %sysfunc(getoption(CENTER));
32500      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
32501      proc print data=EMWS1.Neural5_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural5_EMREPORTFIT noobs label;
32502      var STAT LABEL TRAIN
32503      VALIDATE
32504      ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
32505      by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
32506      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
32507      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
32508      run;
 
NOTE: There were 21 observations read from the data set EMWS1.NEURAL5_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 8.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
32509      title10;
MPRINT(EM_DIAGRAM):   title10;
32510      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
32511      proc sort data=EMWS1.Neural5_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural5_EMCLASSIFICATION nothreads;
32512      by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
32513      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.NEURAL5_EMCLASSIFICATION.
NOTE: The data set EMWS1.NEURAL5_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
32514      %let _cn = %sysfunc(getoption(CENTER));
32515      options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
32516      proc print data=EMWS1.Neural5_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural5_EMCLASSIFICATION noobs label;
32517      var from into pct_row pct_col count percent
32518      ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
32519      by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
32520      label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
32521      label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
32522      label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
32523      label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
32524      label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
32525      label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
32526      where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
32527      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
32528      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
32529      run;
 
NOTE: There were 8 observations read from the data set EMWS1.NEURAL5_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 9.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
32530      title9;
MPRINT(EM_DIAGRAM):   title9;
32531      title10;
MPRINT(EM_DIAGRAM):   title10;
32532      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
32533      %let _cn = %sysfunc(getoption(CENTER));
32534      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
32535      data EMWS1.Neural5_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_EMEVENTREPORT;
32536      length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
32536    ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
32537      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
32537    !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
32537    ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
32537    ! FALSEEVENT
32538      = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
32538    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
32538    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
32539         "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
32540      FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
32541      FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
32542      TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
32543      TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
32544      set EMWS1.Neural5_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMEVENTREPORT;
32545      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.NEURAL5_EMEVENTREPORT.
NOTE: The data set EMWS1.NEURAL5_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
32546      proc print data=EMWS1.Neural5_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural5_EMEVENTREPORT noobs label;
32547      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
32548      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
32549      by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
32550      run;
 
NOTE: There were 2 observations read from the data set EMWS1.NEURAL5_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 10.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
32551      title10;
MPRINT(EM_DIAGRAM):   title10;
32552      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
32553      proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
32554      modify Neural5_EMRANK;
MPRINT(EM_DIAGRAM):   modify Neural5_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
32555      label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
32556      label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
32556    ! ;
MPRINT(EM_DIAGRAM):   run;
32557      run;
 
NOTE: MODIFY was successful for EMWS1.NEURAL5_EMRANK.DATA.
32558      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
32559      %let _cn = %sysfunc(getoption(CENTER));
32560      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
32561      proc print data=EMWS1.Neural5_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural5_EMRANK label noobs;
32562      var
32563      decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
32564      by
32565      notsorted DATAROLE
32566      notsorted TARGET
32567      notsorted TARGETLABEL
32568      ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
32569      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
32570      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
32571      run;
 
NOTE: There were 40 observations read from the data set EMWS1.NEURAL5_EMRANK.
NOTE: The PROCEDURE PRINT printed page 11.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
32572      title10;
MPRINT(EM_DIAGRAM):   title10;
32573      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
32574      proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
32575      modify Neural5_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Neural5_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
32576      label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
32576    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
32577      label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
32577    ! ;
MPRINT(EM_DIAGRAM):   run;
32578      run;
 
NOTE: MODIFY was successful for EMWS1.NEURAL5_EMSCOREDIST.DATA.
32579      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural5_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "BAD" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
