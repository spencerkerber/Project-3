MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 04, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "07:38:29" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                November 04, 2015
Time:                07:38:29
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1ZHPRFS "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Ids\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1ZHPRFS new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Ids\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 04, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "07:38:29" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                sakerb01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70080760";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M1P120413";
MPRINT(EM_DIAGRAM):   put "EM Version:          13.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Ids\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Ids\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Ids\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Ids\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 04, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "07:38:29" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                sakerb01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Ids\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Ids\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Ids\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_3\Workspaces\EMWS1\Ids\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
20656      proc freq data=EMWS1.Ids_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Ids_VariableSet noprint;
20657      table ROLE*LEVEL/out=WORK.IdsMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.IdsMETA;
20658      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS1.IDS_VARIABLESET.
NOTE: The data set WORK.IDSMETA has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.10 seconds
      cpu time            0.06 seconds
      

20659      proc print data=WORK.IdsMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.IdsMETA label noobs;
20660      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
20661      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
20662      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
20663      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
20664      run;

NOTE: There were 3 observations read from the data set WORK.IDSMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.12 seconds
      cpu time            0.04 seconds
      

20665      title10;
MPRINT(EM_DIAGRAM):   title10;
20666      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
20667      rc = libref("SAMPSIO");
MPRINT(EM_DIAGRAM):   rc = libref("SAMPSIO");
20668      call symput('_librc', strip(put(rc, best.)));
MPRINT(EM_DIAGRAM):   call symput('_librc', strip(put(rc, best.)));
20669      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20670      %let _engineTable =;
20671      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
20672      dsid = open("SAMPSIO.HMEQ");
MPRINT(EM_DIAGRAM):   dsid = open("SAMPSIO.HMEQ");
20673      if dsid then do;
MPRINT(EM_DIAGRAM):   if dsid then do;
20674      call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
20675      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
20676      end;
MPRINT(EM_DIAGRAM):   end;
20677      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20678      %let _lasrFile=;
20679      %let _sasiolaFile=;
20680      data null_;
MPRINT(EM_DIAGRAM):    data null_;
20681      length lasrfile sasiolaFile $2000;
MPRINT(EM_DIAGRAM):   length lasrfile sasiolaFile $2000;
20682      LASRFile = pathname("EMWS1")!!"\"!!"HPDM\"!!"hpdmlasr";
MPRINT(EM_DIAGRAM):   LASRFile = pathname("EMWS1")!!"\"!!"HPDM\"!!"hpdmlasr";
20683      SASIOLAFile = pathname("EMWS1")!!"\"!!"HPDM\"!!'sasiola.sas';
MPRINT(EM_DIAGRAM):   SASIOLAFile = pathname("EMWS1")!!"\"!!"HPDM\"!!'sasiola.sas';
20684      call symput('_lasrFile', strip(lasrfile));
MPRINT(EM_DIAGRAM):   call symput('_lasrFile', strip(lasrfile));
20685      call symput('_sasiolaFile', strip(sasiolafile));
MPRINT(EM_DIAGRAM):   call symput('_sasiolaFile', strip(sasiolafile));
20686      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.NULL_ has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

20687      %let _UseGrid = 0;
20688      %hpdm_performance(data=SAMPSIO.HMEQ, isGrid=_UseGrid);
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
20689      %put &_UseGrid;
0
20690      %let em_idskey =;
20691      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
20692      set EMWS1.Ids_VariableSet;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_VariableSet;
20693      where ROLE = 'KEY';
MPRINT(EM_DIAGRAM):   where ROLE = 'KEY';
20694      call symput('em_idskey', strip(name));
MPRINT(EM_DIAGRAM):   call symput('em_idskey', strip(name));
20695      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.IDS_VARIABLESET.
      WHERE ROLE='KEY';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20696      %let emexceptionstring=;
20697      %EmAdviseColumns(SAMPSIO.HMEQ, adviseMode=BASIC, applyIntervalLevelLowerLimit=N, applyMaxPercentMissing=N, applyMaxClassLevels=N, identifyEmptyColumns=N, maxLevelDetection=0, outdata=EMWS1.Ids_EMCMETADEFAULT, newdataflag=N);
MPRINT(EM_DIAGRAM):   
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;

20698      %let SYSCC = 0;
20699      %let _dsidTable = 0;
20700      %let _engineTable =;
20701      data _null_;
MPRINT(EMADVISECOLUMNS):    data _null_;
20702      dsid = open('SAMPSIO.HMEQ');
MPRINT(EMADVISECOLUMNS):   dsid = open('SAMPSIO.HMEQ');
20703      call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
20704      if dsid then do;
MPRINT(EMADVISECOLUMNS):   if dsid then do;
20705      call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
20706      dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
20707      end;
MPRINT(EMADVISECOLUMNS):   end;
20708      run;
MPRINT(EMADVISECOLUMNS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20709      options fmterr;
MPRINT(EMADVISECOLUMNS):    options fmterr;
20710      data _metaTestView;
MPRINT(EMADVISECOLUMNS):   data _metaTestView;
20711      set SAMPSIO.HMEQ;
MPRINT(EMADVISECOLUMNS):   set SAMPSIO.HMEQ;
20712      if _N_=1 then do;
MPRINT(EMADVISECOLUMNS):   if _N_=1 then do;
20713      output;
MPRINT(EMADVISECOLUMNS):   output;
20714      stop;
MPRINT(EMADVISECOLUMNS):   stop;
20715      end;
MPRINT(EMADVISECOLUMNS):   end;
20716      run;
MPRINT(EMADVISECOLUMNS):   run;

NOTE: There were 1 observations read from the data set SAMPSIO.HMEQ.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

20717      proc contents data=SAMPSIO.HMEQ
20718      out=WORK.M10USIKE noprint;
MPRINT(EMADVISECOLUMNS):    proc contents data=SAMPSIO.HMEQ out=WORK.M10USIKE noprint;
20719      run;
MPRINT(EMADVISECOLUMNS):   run;

NOTE: The data set WORK.M10USIKE has 13 observations and 41 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20720      data WORK.M10USIKE;
MPRINT(EMADVISECOLUMNS):    data WORK.M10USIKE;
20721      length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
20722      label NAME =;
MPRINT(EMADVISECOLUMNS):   label NAME =;
20723      set WORK.M10USIKE(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   set WORK.M10USIKE(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
20724      if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
20725      else type = 'C';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
20726      if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
20727      if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
20728      else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
20729      end;
MPRINT(EMADVISECOLUMNS):   end;
20730      else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
20731      if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
20732      if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
20733      else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
20734      end;
MPRINT(EMADVISECOLUMNS):   end;
20735      else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
20736      if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
20737      else index = "Y";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
20738      indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
20739      drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
20740      run;
MPRINT(EMADVISECOLUMNS):   run;

NOTE: There were 13 observations read from the data set WORK.M10USIKE.
NOTE: The data set WORK.M10USIKE has 13 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20741      data WORK.M111QR42;
MPRINT(EMADVISECOLUMNS):    data WORK.M111QR42;
20742      length UNAME $64;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
20743      set WORK.M111QR42;
MPRINT(EMADVISECOLUMNS):   set WORK.M111QR42;
20744      UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
20745      run;
MPRINT(EMADVISECOLUMNS):   run;

NOTE: There were 13 observations read from the data set WORK.M111QR42.
NOTE: The data set WORK.M111QR42 has 13 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20746      data WORK.M10USIKE;
MPRINT(EMADVISECOLUMNS):    data WORK.M10USIKE;
20747      length UNAME $64;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
20748      set WORK.M10USIKE;
MPRINT(EMADVISECOLUMNS):   set WORK.M10USIKE;
20749      UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
20750      run;
MPRINT(EMADVISECOLUMNS):   run;

NOTE: There were 13 observations read from the data set WORK.M10USIKE.
NOTE: The data set WORK.M10USIKE has 13 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M10USIKE NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort data=WORK.M111QR42 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   data WORK.M111QR42;
MPRINT(EMADVISECOLUMNS):   merge WORK.M111QR42(in=_a) WORK.M10USIKE(in=_b);
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   if _a and ^_b then delete;
MPRINT(EMADVISECOLUMNS):   run;
20762      data WORK.M111QR42;
MPRINT(EMADVISECOLUMNS):    data WORK.M111QR42;
20763      drop UNAME;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
20764      set WORK.M111QR42;
MPRINT(EMADVISECOLUMNS):   set WORK.M111QR42;
20765      run;
MPRINT(EMADVISECOLUMNS):   run;

NOTE: There were 13 observations read from the data set WORK.M111QR42.
NOTE: The data set WORK.M111QR42 has 13 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EMADVISECOLUMNS):    data WORK.M0XT7JV_(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M111QR42;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M111QR42;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M111QR42;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M111QR42;
MPRINT(EMADVISECOLUMNS):   set WORK.M111QR42;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.57 seconds
      cpu time            0.54 seconds
      

MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;

21004      %EmAdviseTable(SAMPSIO.HMEQ, outdata=EMWS1.Ids_EMTMETADEFAULT, newdataflag=N);
MPRINT(EM_DIAGRAM):   
MPRINT(EMADVISETABLE):   proc display c=sashelp.emmeta.advisetable.scl;
MPRINT(EMADVISETABLE):   run;

21005      %let SYSCC = 0;
21006      data EMWS1.Ids_EMTMETADEFAULT;
MPRINT(EMADVISETABLE):    data EMWS1.Ids_EMTMETADEFAULT;
21007      set EMWS1.Ids_EMTMETADEFAULT;
MPRINT(EMADVISETABLE):   set EMWS1.Ids_EMTMETADEFAULT;
21008      length LIBNAME $8;
MPRINT(EMADVISETABLE):   length LIBNAME $8;
21009      LIBNAME = "SAMPSIO";
MPRINT(EMADVISETABLE):   LIBNAME = "SAMPSIO";
21010      run;
MPRINT(EMADVISETABLE):   run;

NOTE: There were 1 observations read from the data set EMWS1.IDS_EMTMETADEFAULT.
NOTE: The data set EMWS1.IDS_EMTMETADEFAULT has 1 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EMADVISETABLE):    data _null_;
MPRINT(EMADVISETABLE):   dsid = open("SAMPSIO.HMEQ");
MPRINT(EMADVISETABLE):   call symput("_DSID", put(dsid,BEST.));
MPRINT(EMADVISETABLE):   if dsid > 0 then dsid = close(dsid);
MPRINT(EMADVISETABLE):   run;
MPRINT(EMADVISETABLE):    ods output enginehost=em_tablehost;
MPRINT(EMADVISETABLE):   ods listing close;
MPRINT(EMADVISETABLE):   proc contents data=SAMPSIO.HMEQ;
MPRINT(EMADVISETABLE):   run;
MPRINT(EMADVISETABLE):   ods listing;
MPRINT(EMADVISETABLE):    data WORK.M3EGXOQE;
MPRINT(EMADVISETABLE):   length MEMNAME $ 32 MEMTYPE $ 8 MEMLABEL $ 256 TYPEMEM $ 8 ENGINE $ 8 CRDATE 8 MODATE 8 NOBS 8 NCOLS 8 NBYTES 8 ROLE $ 20 USEEXTERNALDATA $1 SAMPLINGRATE 8 SEGMENT $ 20;
MPRINT(EMADVISETABLE):   set WORK.M3EGXOQE(obs=1);
MPRINT(EMADVISETABLE):   nobs = 5960;
MPRINT(EMADVISETABLE):   ncols = 13;
MPRINT(EMADVISETABLE):   nbytes = 656384;
MPRINT(EMADVISETABLE):   memname = "HMEQ";
MPRINT(EMADVISETABLE):   memtype = "DATA    ";
MPRINT(EMADVISETABLE):   memlabel = "";
MPRINT(EMADVISETABLE):   typemem = "DATA    ";
MPRINT(EMADVISETABLE):   engine = "V9      ";
MPRINT(EMADVISETABLE):   crdate = 1709070775.072;
MPRINT(EMADVISETABLE):   modate = 1709070775.072;
MPRINT(EMADVISETABLE):   format crdate datetime16.;
MPRINT(EMADVISETABLE):   format modate datetime16.;
MPRINT(EMADVISETABLE):   if role = ' ' then role = 'TRAIN';
MPRINT(EMADVISETABLE):   output;
MPRINT(EMADVISETABLE):   run;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.25 seconds
      cpu time            0.23 seconds
      

MPRINT(EMADVISETABLE):   
MPRINT(EM_DIAGRAM):  ;

21039      data EMWS1.Ids_EMCMETADEFAULT;
MPRINT(EM_DIAGRAM):    data EMWS1.Ids_EMCMETADEFAULT;
21040      set EMWS1.Ids_EMCMETADEFAULT;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMCMETADEFAULT;
21041      label DROP = "%sysfunc(sasmsg(sashelp.dmine, meta_drop_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DROP = "Drop";
21042      if DROP='' then DROP='N';
MPRINT(EM_DIAGRAM):   if DROP='' then DROP='N';
21043      if type='C' and level='INTERVAL' then level='NOMINAL';
MPRINT(EM_DIAGRAM):   if type='C' and level='INTERVAL' then level='NOMINAL';
21044      if type='C' and role='FREQ' then role='INPUT';
MPRINT(EM_DIAGRAM):   if type='C' and role='FREQ' then role='INPUT';
21045      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS1.IDS_EMCMETADEFAULT.
NOTE: The data set EMWS1.IDS_EMCMETADEFAULT has 13 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

21046      proc sort data=EMWS1.Ids_EMCMETADEFAULT;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Ids_EMCMETADEFAULT;
21047      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21048      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS1.IDS_EMCMETADEFAULT.
NOTE: The data set EMWS1.IDS_EMCMETADEFAULT has 13 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

21049      proc sort data=EMWS1.Ids_VariableSet;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Ids_VariableSet;
21050      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21051      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS1.IDS_VARIABLESET.
NOTE: The data set EMWS1.IDS_VARIABLESET has 13 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

21052      data EMWS1.Ids_VariableSet;
MPRINT(EM_DIAGRAM):   data EMWS1.Ids_VariableSet;
21053      merge EMWS1.Ids_EMCMETADEFAULT(in=_a) EMWS1.Ids_VariableSet(keep=NAME ROLE LEVEL ORDER DROP TYPE LOWERLIMIT UPPERLIMIT rename=(TYPE=OLDTYPE) in=_b);
MPRINT(EM_DIAGRAM):   merge EMWS1.Ids_EMCMETADEFAULT(in=_a) EMWS1.Ids_VariableSet(keep=NAME ROLE LEVEL ORDER DROP TYPE LOWERLIMIT UPPERLIMIT rename=(TYPE=OLDTYPE) in=_b);
21054      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21055      if ^_a and _b then delete;
MPRINT(EM_DIAGRAM):   if ^_a and _b then delete;
21056      if type='C' and level='INTERVAL' then level='NOMINAL';
MPRINT(EM_DIAGRAM):   if type='C' and level='INTERVAL' then level='NOMINAL';
21057      if type='C' and role='FREQ' then role='INPUT';
MPRINT(EM_DIAGRAM):   if type='C' and role='FREQ' then role='INPUT';
21058      if (type ne oldtype) and (_a and _b) then do;
MPRINT(EM_DIAGRAM):   if (type ne oldtype) and (_a and _b) then do;
21059      if type ='N' then level='INTERVAL';
MPRINT(EM_DIAGRAM):   if type ='N' then level='INTERVAL';
21060      end;
MPRINT(EM_DIAGRAM):   end;
21061      drop oldtype;
MPRINT(EM_DIAGRAM):   drop oldtype;
21062      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS1.IDS_EMCMETADEFAULT.
NOTE: There were 13 observations read from the data set EMWS1.IDS_VARIABLESET.
NOTE: The data set EMWS1.IDS_VARIABLESET has 13 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

21063      data EMWS1.Ids_CMeta_DATA;
MPRINT(EM_DIAGRAM):    data EMWS1.Ids_CMeta_DATA;
21064      set WORK.M0BCRN4V;
MPRINT(EM_DIAGRAM):   set WORK.M0BCRN4V;
21065      drop DROP;
MPRINT(EM_DIAGRAM):   drop DROP;
21066      where DROP='N';
MPRINT(EM_DIAGRAM):   where DROP='N';
21067      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK.M0BCRN4V.
      WHERE DROP='N';
NOTE: The data set EMWS1.IDS_CMETA_DATA has 13 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

*------------------------------------------------------------* 
Ids: Using "SAMPSIO.HMEQ" data source 
*------------------------------------------------------------* 
21068      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21069      * Ids: Creating DATA data;
MPRINT(EM_DIAGRAM):   * Ids: Creating DATA data;
21070      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21071      data EMWS1.Ids_DATA (label="")
21072      / view=EMWS1.Ids_DATA
21073      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Ids_DATA (label="") / view=EMWS1.Ids_DATA ;
21074      set SAMPSIO.HMEQ;
MPRINT(EM_DIAGRAM):   set SAMPSIO.HMEQ;
21075      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file EMWS1.IDS_DATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

21076      data WORK.IDSOUTPUT;
MPRINT(EM_DIAGRAM):    data WORK.IDSOUTPUT;
21077      length ATTRIBUTE $20 LABEL $50 VALUE $50;
MPRINT(EM_DIAGRAM):   length ATTRIBUTE $20 LABEL $50 VALUE $50;
21078      label LABEL= "%sysfunc(sasmsg(sashelp.dmine, rpt_attribute_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label LABEL= "Attribute";
21079      label VALUE= "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,       NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VALUE= "Value";
21080      ATTRIBUTE = 'OUTPUT';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'OUTPUT';
21081      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labeloutput_value , NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "Output Table";
21082      VALUE = "EMWS1.Ids_DATA";
MPRINT(EM_DIAGRAM):   VALUE = "EMWS1.Ids_DATA";
21083      output;
MPRINT(EM_DIAGRAM):   output;
21084      ATTRIBUTE = 'OUTPUTTYPE';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'OUTPUTTYPE';
21085      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labeloutputtype_value, NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "Output Type";
21086      VALUE = "View";
MPRINT(EM_DIAGRAM):   VALUE = "View";
21087      output;
MPRINT(EM_DIAGRAM):   output;
21088      ATTRIBUTE = 'DROPVARS';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'DROPVARS';
21089      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labeldropvars_value, NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "Dropped Variables";
21090      VALUE = "0";
MPRINT(EM_DIAGRAM):   VALUE = "0";
21091      output;
MPRINT(EM_DIAGRAM):   output;
21092      ATTRIBUTE = 'ROLE';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'ROLE';
21093      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labelrole_value , NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "Data Mining Role";
21094      VALUE = "Raw";
MPRINT(EM_DIAGRAM):   VALUE = "Raw";
21095      output;
MPRINT(EM_DIAGRAM):   output;
21096      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.IDSOUTPUT has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

21097      proc print data=WORK.IDSOUTPUT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.IDSOUTPUT noobs label;
21098      var label value;
MPRINT(EM_DIAGRAM):   var label value;
21099      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
21100      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_outTableAttr_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Output Table Attributes";
MPRINT(EM_DIAGRAM):   run;
21101      run;

NOTE: There were 4 observations read from the data set WORK.IDSOUTPUT.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

21102      title10;
MPRINT(EM_DIAGRAM):   title10;
21103      proc contents noprint data=SAMPSIO.HMEQ out=WORK.IDSCONTENT(drop=NAME TYPE LENGTH VARNUM LABEL FORMAT FORMATL FORMATD INFORMAT INFORML INFORMD JUST NPOS);
MPRINT(EM_DIAGRAM):    proc contents noprint data=SAMPSIO.HMEQ out=WORK.IDSCONTENT(drop=NAME TYPE LENGTH VARNUM LABEL FORMAT FORMATL FORMATD INFORMAT INFORML INFORMD JUST NPOS);
21104      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.IDSCONTENT has 13 observations and 28 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

21105      data WORK.IDSCONTENT;
MPRINT(EM_DIAGRAM):   data WORK.IDSCONTENT;
21106      set WORK.IDSCONTENT end=eof;
MPRINT(EM_DIAGRAM):   set WORK.IDSCONTENT end=eof;
21107      if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
21108      NVARS = _n_;
MPRINT(EM_DIAGRAM):   NVARS = _n_;
21109      output;
MPRINT(EM_DIAGRAM):   output;
21110      end;
MPRINT(EM_DIAGRAM):   end;
21111      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK.IDSCONTENT.
NOTE: The data set WORK.IDSCONTENT has 1 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

21112      data WORK.IDSOUTPUT(keep=ATTRIBUTE LABEL VALUE);
MPRINT(EM_DIAGRAM):   data WORK.IDSOUTPUT(keep=ATTRIBUTE LABEL VALUE);
21113      length ATTRIBUTE $20 LABEL $50 VALUE $80;
MPRINT(EM_DIAGRAM):   length ATTRIBUTE $20 LABEL $50 VALUE $80;
21114      label LABEL= "%sysfunc(sasmsg(sashelp.dmine, rpt_attribute_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label LABEL= "Attribute";
21115      label VALUE= "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,       NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VALUE= "Value";
21116      ;
MPRINT(EM_DIAGRAM):   ;
21117      dsid = open("WORK.IDSCONTENT");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.IDSCONTENT");
21118      rc = fetch(dsid);
MPRINT(EM_DIAGRAM):   rc = fetch(dsid);
21119      nvars = attrn(dsid, 'NVARS');
MPRINT(EM_DIAGRAM):   nvars = attrn(dsid, 'NVARS');
21120      nobs = attrn(dsid, 'NOBS');
MPRINT(EM_DIAGRAM):   nobs = attrn(dsid, 'NOBS');
21121      ATTRIBUTE = 'DATASOURCE';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'DATASOURCE';
21122      LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_datasource_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "Data Source";
21123      VALUE="hmeq1";
MPRINT(EM_DIAGRAM):   VALUE="hmeq1";
21124      output;
MPRINT(EM_DIAGRAM):   output;
21125      ATTRIBUTE = '';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = '';
21126      LABEL = '';
MPRINT(EM_DIAGRAM):   LABEL = '';
21127      VALUE='';
MPRINT(EM_DIAGRAM):   VALUE='';
21128      output;
MPRINT(EM_DIAGRAM):   output;
21129      do i=1 to nvars;
MPRINT(EM_DIAGRAM):   do i=1 to nvars;
21130      ATTRIBUTE = varname(dsid, i);
MPRINT(EM_DIAGRAM):   ATTRIBUTE = varname(dsid, i);
21131      LABEL = varlabel(dsid, i);
MPRINT(EM_DIAGRAM):   LABEL = varlabel(dsid, i);
21132      if vartype(dsid,i)='C' then do;
MPRINT(EM_DIAGRAM):   if vartype(dsid,i)='C' then do;
21133      VALUE = getvarc(dsid, i);
MPRINT(EM_DIAGRAM):   VALUE = getvarc(dsid, i);
21134      end;
MPRINT(EM_DIAGRAM):   end;
21135      else do;
MPRINT(EM_DIAGRAM):   else do;
21136      NVALUE = getvarn(dsid, i);
MPRINT(EM_DIAGRAM):   NVALUE = getvarn(dsid, i);
21137      if ATTRIBUTE in('CRDATE', 'MODATE') then VALUE = left(put(NVALUE, NLDATM20.));
MPRINT(EM_DIAGRAM):   if ATTRIBUTE in('CRDATE', 'MODATE') then VALUE = left(put(NVALUE, NLDATM20.));
21138      else VALUE = left(put(NVALUE, BEST12.));
MPRINT(EM_DIAGRAM):   else VALUE = left(put(NVALUE, BEST12.));
21139      end;
MPRINT(EM_DIAGRAM):   end;
21140      if ATTRIBUTE = 'NVARS' then do;
MPRINT(EM_DIAGRAM):   if ATTRIBUTE = 'NVARS' then do;
21141      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labelvariables_value, NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "Variables";
21142      end;
MPRINT(EM_DIAGRAM):   end;
21143      output;
MPRINT(EM_DIAGRAM):   output;
21144      end;
MPRINT(EM_DIAGRAM):   end;
21145      dsid=close(dsid);
MPRINT(EM_DIAGRAM):   dsid=close(dsid);
21146      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.IDSOUTPUT has 31 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

21147      proc print data=WORK.IDSOUTPUT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.IDSOUTPUT noobs label;
21148      var label value;
MPRINT(EM_DIAGRAM):   var label value;
21149      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
21150      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_inTableAttr_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Input Table Attributes";
MPRINT(EM_DIAGRAM):   run;
21151      run;

NOTE: There were 31 observations read from the data set WORK.IDSOUTPUT.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):    proc dmdb data=SAMPSIO.HMEQ maxlevel=32 classOut=WORK._IDS_DMDBClass ;
MPRINT(EM_DIAGRAM):   class "BAD"n (DESC) ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=WORK._IDS_DMDBClass;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ids: Determine decision variables for bad;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.Ids_SCORE;
MPRINT(EM_DIAGRAM):   set SAMPSIO.HMEQ;
MPRINT(EM_DIAGRAM):   keep 'P_bad1'n;
MPRINT(EM_DIAGRAM):   'P_bad1'n = 0.5;
MPRINT(EM_DIAGRAM):   keep 'P_bad0'n;
MPRINT(EM_DIAGRAM):   'P_bad0'n = 0.5;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   stop;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Ids_bad_DM;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_bad_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_ ^in('FREQ', 'BESTPROFIT', 'COMPUTEDPROFIT', 'EXPECTEDPROFIT', 'BESTLOSS', 'COMPUTEDLOSS', 'EXPECTEDLOSS', 'ROI', 'INVESTMENTCOST', 'MODELDECISION');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify bad(type=PROFIT label= bad);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data EMWS1.Ids_bad_DM;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_bad_DM end=eof;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if eof then do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
